public class edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategyRegistry extends java.lang.Object
{
    private static final org.apache.log4j.Logger logger;
    private final java.util.Map handlerMap;

    static void <clinit>()
    {
        org.apache.log4j.Logger $r0;

        $r0 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>(class "Ledu/kit/ipd/sdq/eventsim/interpreter/SimulationStrategyRegistry;");

        <edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategyRegistry: org.apache.log4j.Logger logger> = $r0;

        return;
    }

    public void <init>(com.google.inject.Injector, edu.kit.ipd.sdq.eventsim.modules.SimulationModuleRegistry)
    {
        edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategyRegistry r0;
        com.google.inject.Injector r1;
        edu.kit.ipd.sdq.eventsim.modules.SimulationModuleRegistry r2;
        edu.kit.ipd.sdq.eventsim.modules.SimulationModule r3;
        java.util.Iterator r4, r6;
        edu.kit.ipd.sdq.eventsim.modules.SimulationStrategyEntry r5;
        edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategy r7;
        java.util.HashMap $r8;
        java.util.List $r9, $r11;
        java.lang.Object $r10, $r12, $r14;
        boolean $z0, $z1, $z2;
        java.lang.String $r13;
        java.lang.ClassNotFoundException $r15;
        org.apache.log4j.Logger $r16, $r18;
        java.lang.Throwable $r17;
        java.lang.Class r19;

        r0 := @this: edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategyRegistry;

        r1 := @parameter0: com.google.inject.Injector;

        r2 := @parameter1: edu.kit.ipd.sdq.eventsim.modules.SimulationModuleRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategyRegistry: java.util.Map handlerMap> = $r8;

        $r9 = virtualinvoke r2.<edu.kit.ipd.sdq.eventsim.modules.SimulationModuleRegistry: java.util.List getModules()>();

        r4 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

        goto label9;

     label1:
        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r3 = (edu.kit.ipd.sdq.eventsim.modules.SimulationModule) $r10;

        $z0 = virtualinvoke r3.<edu.kit.ipd.sdq.eventsim.modules.SimulationModule: boolean isEnabled()>();

        if $z0 != 0 goto label2;

        goto label9;

     label2:
        $r11 = virtualinvoke r3.<edu.kit.ipd.sdq.eventsim.modules.SimulationModule: java.util.List getSimulationStrategies()>();

        r6 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

        goto label8;

     label3:
        $r12 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r5 = (edu.kit.ipd.sdq.eventsim.modules.SimulationStrategyEntry) $r12;

     label4:
        $r13 = virtualinvoke r5.<edu.kit.ipd.sdq.eventsim.modules.SimulationStrategyEntry: java.lang.String getActionType()>();

        r19 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r13);

        $r14 = virtualinvoke r5.<edu.kit.ipd.sdq.eventsim.modules.SimulationStrategyEntry: java.lang.Object getStrategy()>();

        r7 = (edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategy) $r14;

        virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategyRegistry: void registerActionHandler(java.lang.Class,edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategy)>(r19, r7);

        interfaceinvoke r1.<com.google.inject.Injector: void injectMembers(java.lang.Object)>(r7);

     label5:
        goto label8;

     label6:
        $r15 := @caughtexception;

        $r16 = <edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategyRegistry: org.apache.log4j.Logger logger>;

        virtualinvoke $r16.<org.apache.log4j.Logger: void error(java.lang.Object)>($r15);

        goto label8;

     label7:
        $r17 := @caughtexception;

        $r18 = <edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategyRegistry: org.apache.log4j.Logger logger>;

        virtualinvoke $r18.<org.apache.log4j.Logger: void error(java.lang.Object)>($r17);

     label8:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

     label9:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label1;

        return;

        catch java.lang.ClassNotFoundException from label4 to label5 with label6;
        catch org.eclipse.core.runtime.InvalidRegistryObjectException from label4 to label5 with label7;
    }

    public void registerActionHandler(java.lang.Class, edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategy)
    {
        edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategyRegistry r0;
        java.lang.Class r1, r4, $r11;
        edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategy r2, r3, r16;
        int i0, i1;
        java.util.Map $r6, $r7, $r9;
        boolean $z0, $z1;
        java.lang.Object $r10;
        java.lang.Class[] $r12;
        java.lang.Object[] $r13;
        org.apache.log4j.Logger $r14;
        java.lang.String $r15;
        edu.kit.ipd.sdq.eventsim.interpreter.DecoratingSimulationStrategy r17;

        r0 := @this: edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategyRegistry;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategy;

        r16 = r2;

        $r6 = r0.<edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategyRegistry: java.util.Map handlerMap>;

        $z0 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label4;

        $r9 = r0.<edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategyRegistry: java.util.Map handlerMap>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategy) $r10;

        r17 = null;

        $r11 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        i0 = lengthof $r12;

        i1 = 0;

        goto label3;

     label1:
        r4 = $r12[i1];

        $z1 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ledu/kit/ipd/sdq/eventsim/interpreter/DecoratingSimulationStrategy;");

        if $z1 == 0 goto label2;

        r17 = (edu.kit.ipd.sdq.eventsim.interpreter.DecoratingSimulationStrategy) r2;

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label1;

        interfaceinvoke r17.<edu.kit.ipd.sdq.eventsim.interpreter.DecoratingSimulationStrategy: void decorate(edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategy)>(r3);

        $r14 = <edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategyRegistry: org.apache.log4j.Logger logger>;

        $r13 = newarray (java.lang.Object)[2];

        $r13[0] = r17;

        $r13[1] = r3;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Decorating simulation strategy: %s decorates %s", $r13);

        virtualinvoke $r14.<org.apache.log4j.Logger: void info(java.lang.Object)>($r15);

        r16 = r17;

     label4:
        $r7 = r0.<edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategyRegistry: java.util.Map handlerMap>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r16);

        return;
    }

    public void unregisterActionHandler(java.lang.Class)
    {
        edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategyRegistry r0;
        java.lang.Class r1;
        java.util.Map $r2, $r3;
        boolean $z0;
        java.lang.StringBuilder $r5, $r8, $r9;
        org.apache.log4j.Logger $r6;
        java.lang.String $r7, $r10;

        r0 := @this: edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategyRegistry;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategyRegistry: java.util.Map handlerMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r6 = <edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategyRegistry: org.apache.log4j.Logger logger>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Tried to unregister the simulationn strategy for ");

        $r7 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but no handler has been registered for this action.");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<org.apache.log4j.Logger: void warn(java.lang.Object)>($r10);

     label1:
        $r3 = r0.<edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategyRegistry: java.util.Map handlerMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategy lookup(java.lang.Class)
    {
        edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategyRegistry r0;
        java.lang.Class r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategy $r4;

        r0 := @this: edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategyRegistry;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategyRegistry: java.util.Map handlerMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategy) $r3;

        return $r4;
    }
}
