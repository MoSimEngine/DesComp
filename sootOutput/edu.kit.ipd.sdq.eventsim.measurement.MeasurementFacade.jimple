public class edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade extends java.lang.Object
{
    private edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeFactory probeFactory;
    private java.util.Set existingProbesSet;

    public void <init>(edu.kit.ipd.sdq.eventsim.measurement.ProbeConfiguration, edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeLocator)
    {
        edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade r0;
        edu.kit.ipd.sdq.eventsim.measurement.ProbeConfiguration r1;
        edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeLocator r2;
        edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeFactory $r3;
        java.util.HashSet $r4;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.measurement.ProbeConfiguration;

        r2 := @parameter1: edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeLocator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeFactory;

        specialinvoke $r3.<edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeFactory: void <init>(edu.kit.ipd.sdq.eventsim.measurement.ProbeConfiguration,edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeLocator)>(r1, r2);

        r0.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade: edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeFactory probeFactory> = $r3;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade: java.util.Set existingProbesSet> = $r4;

        return;
    }

    public edu.kit.ipd.sdq.eventsim.measurement.calculator.IntermediateCalculatorFrom createCalculator(edu.kit.ipd.sdq.eventsim.measurement.calculator.BinaryCalculator)
    {
        edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade r0;
        edu.kit.ipd.sdq.eventsim.measurement.calculator.BinaryCalculator r1;
        edu.kit.ipd.sdq.eventsim.measurement.calculator.IntermediateCalculatorFrom $r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.measurement.calculator.BinaryCalculator;

        $r2 = staticinvoke <edu.kit.ipd.sdq.eventsim.measurement.calculator.CalculatorBuilder: edu.kit.ipd.sdq.eventsim.measurement.calculator.IntermediateCalculatorFrom create(edu.kit.ipd.sdq.eventsim.measurement.calculator.BinaryCalculator,edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade)>(r1, r0);

        return $r2;
    }

    public transient edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe createProbe(java.lang.Object, java.lang.String, java.lang.Object[])
    {
        edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade r0;
        java.lang.Object r1, $r11;
        java.lang.String r2;
        java.lang.Object[] r3;
        edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe r4, r5;
        java.util.Iterator r6;
        edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeFactory $r7;
        java.util.Set $r8, $r9, $r10;
        boolean $z0, $z2, $z3;
        java.lang.RuntimeException $r12;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r7 = r0.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade: edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeFactory probeFactory>;

        r4 = virtualinvoke $r7.<edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeFactory: edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe create(java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        $r8 = r0.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade: java.util.Set existingProbesSet>;

        $z0 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>(r4);

        if $z0 == 0 goto label3;

        $r10 = r0.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade: java.util.Set existingProbesSet>;

        r6 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r5 = (edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe) $r11;

        $z3 = virtualinvoke r5.<java.lang.Object: boolean equals(java.lang.Object)>(r4);

        if $z3 == 0 goto label2;

        return r5;

     label2:
        $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label1;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find probe.");

        throw $r12;

     label3:
        $r9 = r0.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade: java.util.Set existingProbesSet>;

        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>(r4);

        return r4;
    }
}
