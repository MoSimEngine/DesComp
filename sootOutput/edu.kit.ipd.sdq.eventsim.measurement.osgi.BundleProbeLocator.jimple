public class edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator extends java.lang.Object implements edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeLocator
{
    private static final org.apache.log4j.Logger log;
    private java.util.Map probesMap;

    static void <clinit>()
    {
        org.apache.log4j.Logger $r0;

        $r0 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>(class "Ledu/kit/ipd/sdq/eventsim/measurement/osgi/BundleProbeLocator;");

        <edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator: org.apache.log4j.Logger log> = $r0;

        return;
    }

    public void <init>(org.osgi.framework.Bundle)
    {
        edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator r0;
        org.osgi.framework.Bundle r1;
        java.util.HashMap $r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator;

        r1 := @parameter0: org.osgi.framework.Bundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator: java.util.Map probesMap> = $r2;

        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator: void findProbesByAnnotationAndPopulateProbesMap(org.osgi.framework.Bundle)>(r1);

        return;
    }

    private void findProbesByAnnotationAndPopulateProbesMap(org.osgi.framework.Bundle)
    {
        edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator r0;
        org.osgi.framework.Bundle r1;
        java.util.Collection r2;
        java.lang.String r3, $r13, $r14, $r15, $r16, $r20, $r26, $r27, $r31, $r36, r37;
        java.util.Iterator r4;
        java.net.URL r5;
        java.lang.Object $r6, $r8;
        org.osgi.framework.wiring.BundleWiring $r7;
        java.lang.StringBuilder $r9, $r11, $r12, $r17, $r19, $r33, $r35;
        org.apache.log4j.Logger $r10, $r18, $r25, $r34;
        boolean $z0, $z1, $z2;
        java.lang.'annotation'.Annotation $r21;
        java.lang.Class $r22, $r24, $r30, r38;
        java.lang.Object[] $r23;
        edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator$MeasuredElementAndProperty $r28;
        java.util.Map $r29;
        java.lang.Throwable $r32;
        edu.kit.ipd.sdq.eventsim.measurement.'annotation'.Probe r39;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator;

        r1 := @parameter0: org.osgi.framework.Bundle;

        $r6 = interfaceinvoke r1.<org.osgi.framework.Bundle: java.lang.Object adapt(java.lang.Class)>(class "Lorg/osgi/framework/wiring/BundleWiring;");

        $r7 = (org.osgi.framework.wiring.BundleWiring) $r6;

        r2 = interfaceinvoke $r7.<org.osgi.framework.wiring.BundleWiring: java.util.Collection listResources(java.lang.String,java.lang.String,int)>("", "*.class", 3);

        r4 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

        goto label8;

     label1:
        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r8;

        r5 = interfaceinvoke r1.<org.osgi.framework.Bundle: java.net.URL getEntry(java.lang.String)>(r3);

        if r5 == null goto label7;

        $r14 = virtualinvoke r5.<java.net.URL: java.lang.String getPath()>();

        $r15 = virtualinvoke $r14.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("/", ".");

        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(".class", "");

        r37 = virtualinvoke $r16.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(".bin.", "");

        $z0 = virtualinvoke r37.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label2;

        r37 = virtualinvoke r37.<java.lang.String: java.lang.String substring(int)>(1);

     label2:
        $r18 = <edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator: org.apache.log4j.Logger log>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("Try loading class ");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<org.apache.log4j.Logger: void debug(java.lang.Object)>($r20);

        r38 = interfaceinvoke r1.<org.osgi.framework.Bundle: java.lang.Class loadClass(java.lang.String)>(r37);

     label3:
        goto label5;

     label4:
        $r32 := @caughtexception;

        $r34 = <edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator: org.apache.log4j.Logger log>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>(java.lang.String)>("Local bundle classloader could not find class ");

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<org.apache.log4j.Logger: void error(java.lang.Object)>($r36);

        goto label8;

     label5:
        $r21 = virtualinvoke r38.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ledu/kit/ipd/sdq/eventsim/measurement/annotation/Probe;");

        r39 = (edu.kit.ipd.sdq.eventsim.measurement.'annotation'.Probe) $r21;

        if r39 == null goto label8;

        $r22 = class "Ledu/kit/ipd/sdq/eventsim/measurement/probe/AbstractProbe;";

        $z1 = virtualinvoke $r22.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r38);

        if $z1 == 0 goto label6;

        $r29 = r0.<edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator: java.util.Map probesMap>;

        $r28 = new edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator$MeasuredElementAndProperty;

        $r30 = interfaceinvoke r39.<edu.kit.ipd.sdq.eventsim.measurement.'annotation'.Probe: java.lang.Class type()>();

        $r31 = interfaceinvoke r39.<edu.kit.ipd.sdq.eventsim.measurement.'annotation'.Probe: java.lang.String property()>();

        specialinvoke $r28.<edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator$MeasuredElementAndProperty: void <init>(edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator,java.lang.Class,java.lang.String)>(r0, $r30, $r31);

        interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, r38);

        goto label8;

     label6:
        $r25 = <edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator: org.apache.log4j.Logger log>;

        $r23 = newarray (java.lang.Object)[3];

        $r23[0] = r37;

        $r24 = class "Ledu/kit/ipd/sdq/eventsim/measurement/annotation/Probe;";

        $r26 = virtualinvoke $r24.<java.lang.Class: java.lang.String getSimpleName()>();

        $r23[1] = $r26;

        $r23[2] = class "Ledu/kit/ipd/sdq/eventsim/measurement/probe/AbstractProbe;";

        $r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Class %s carries the %s annotation but does not extend %s.", $r23);

        virtualinvoke $r25.<org.apache.log4j.Logger: void error(java.lang.Object)>($r27);

        goto label8;

     label7:
        $r10 = <edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator: org.apache.log4j.Logger log>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not locate resource ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in local bundle");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<org.apache.log4j.Logger: void debug(java.lang.Object)>($r13);

     label8:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label1;

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public java.lang.Class probeForType(java.lang.Class, java.lang.String)
    {
        edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator r0;
        java.lang.Class r1, r3, $r12, $r13, r14, r15;
        java.lang.String r2;
        int i0, i1;
        edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator$MeasuredElementAndProperty $r5, $r9;
        java.util.Map $r6, $r10;
        java.lang.Object $r7, $r11;
        java.lang.Class[] $r8;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        $r6 = r0.<edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator: java.util.Map probesMap>;

        $r5 = new edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator$MeasuredElementAndProperty;

        specialinvoke $r5.<edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator$MeasuredElementAndProperty: void <init>(edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator,java.lang.Class,java.lang.String)>(r0, r1, r2);

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r14 = (java.lang.Class) $r7;

        if r14 == null goto label2;

        return r14;

     label2:
        $r8 = virtualinvoke r1.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        i0 = lengthof $r8;

        i1 = 0;

        goto label5;

     label3:
        r3 = $r8[i1];

        $r10 = r0.<edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator: java.util.Map probesMap>;

        $r9 = new edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator$MeasuredElementAndProperty;

        specialinvoke $r9.<edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator$MeasuredElementAndProperty: void <init>(edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator,java.lang.Class,java.lang.String)>(r0, r3, r2);

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        r15 = (java.lang.Class) $r11;

        if r15 == null goto label4;

        return r15;

     label4:
        i1 = i1 + 1;

     label5:
        if i1 < i0 goto label3;

        $r12 = virtualinvoke r1.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r13 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator: java.lang.Class probeForType(java.lang.Class,java.lang.String)>($r12, r2);

        return $r13;
    }
}
