public class edu.kit.ipd.sdq.eventsim.measurement.r.Buffer extends java.lang.Object
{
    private edu.kit.ipd.sdq.eventsim.measurement.r.Column what;
    private edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart whereFirst;
    private edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart whereSecond;
    private edu.kit.ipd.sdq.eventsim.measurement.r.Column whereProperty;
    private edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart who;
    private double[] value;
    private double[] when;
    private java.util.Map contexts;
    private java.util.Map metadata;
    private edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor idExtractors;
    private edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor nameExtractors;
    private edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor typeExtractors;
    private java.util.concurrent.atomic.AtomicInteger size;
    private final int capacity;

    public void <init>(int, edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor, edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor, edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor)
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.Buffer r0;
        int i0;
        edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor r1, r2, r3;
        java.util.concurrent.atomic.AtomicInteger $r4;
        edu.kit.ipd.sdq.eventsim.measurement.r.Column $r5, $r8;
        edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart $r6, $r7, $r9;
        double[] $r10, $r11;
        java.util.HashMap $r12, $r13;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.Buffer;

        i0 := @parameter0: int;

        r1 := @parameter1: edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor;

        r2 := @parameter2: edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor;

        r3 := @parameter3: edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: java.util.concurrent.atomic.AtomicInteger size> = $r4;

        r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: int capacity> = i0;

        r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor idExtractors> = r1;

        r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor nameExtractors> = r2;

        r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor typeExtractors> = r3;

        $r5 = new edu.kit.ipd.sdq.eventsim.measurement.r.Column;

        specialinvoke $r5.<edu.kit.ipd.sdq.eventsim.measurement.r.Column: void <init>(java.lang.Class,java.lang.String,int,boolean)>(class "Ljava/lang/String;", "what", i0, 1);

        r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.Column what> = $r5;

        $r6 = new edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart;

        specialinvoke $r6.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: void <init>(java.lang.String,int)>("where.first", i0);

        r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart whereFirst> = $r6;

        $r7 = new edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart;

        specialinvoke $r7.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: void <init>(java.lang.String,int)>("where.second", i0);

        r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart whereSecond> = $r7;

        $r8 = new edu.kit.ipd.sdq.eventsim.measurement.r.Column;

        specialinvoke $r8.<edu.kit.ipd.sdq.eventsim.measurement.r.Column: void <init>(java.lang.Class,java.lang.String,int,boolean)>(class "Ljava/lang/String;", "where.property", i0, 1);

        r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.Column whereProperty> = $r8;

        $r9 = new edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart;

        specialinvoke $r9.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: void <init>(java.lang.String,int)>("who", i0);

        r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart who> = $r9;

        $r10 = newarray (double)[i0];

        r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: double[] value> = $r10;

        $r11 = newarray (double)[i0];

        r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: double[] when> = $r11;

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: java.util.Map contexts> = $r12;

        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

        r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: java.util.Map metadata> = $r13;

        return;
    }

    public boolean put(edu.kit.ipd.sdq.eventsim.measurement.Measurement)
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.Buffer r0;
        edu.kit.ipd.sdq.eventsim.measurement.Measurement r1;
        int i0, $i1;
        java.util.concurrent.atomic.AtomicInteger $r2;
        double[] $r3, $r4;
        double $d0, $d1;
        edu.kit.ipd.sdq.eventsim.measurement.r.Column $r5, $r8, $r13, $r18, $r23;
        java.lang.Object $r6, $r11, $r15, $r20, $r25;
        java.lang.String $r7, $r10, $r16, $r21, $r26;
        edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint $r9;
        edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart $r12, $r17, $r22;
        edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor $r14, $r19, $r24;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.Buffer;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.measurement.Measurement;

        $r2 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: java.util.concurrent.atomic.AtomicInteger size>;

        i0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $i1 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: int capacity>;

        if i0 < $i1 goto label1;

        return 0;

     label1:
        $r3 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: double[] value>;

        $d0 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: double getValue()>();

        $r3[i0] = $d0;

        $r4 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: double[] when>;

        $d1 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: double getWhen()>();

        $r4[i0] = $d1;

        $r5 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.Column what>;

        $r6 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: java.lang.Object getWhat()>();

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r5.<edu.kit.ipd.sdq.eventsim.measurement.r.Column: void set(int,java.lang.Object)>(i0, $r7);

        $r8 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.Column whereProperty>;

        $r9 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint getWhere()>();

        $r10 = virtualinvoke $r9.<edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint: java.lang.String getProperty()>();

        virtualinvoke $r8.<edu.kit.ipd.sdq.eventsim.measurement.r.Column: void set(int,java.lang.Object)>(i0, $r10);

        $r11 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: java.lang.Object getWho()>();

        if $r11 == null goto label2;

        $r12 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart who>;

        $r13 = virtualinvoke $r12.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column getType()>();

        $r14 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor typeExtractors>;

        $r15 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: java.lang.Object getWho()>();

        $r16 = virtualinvoke $r14.<edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor: java.lang.String extractFrom(java.lang.Object)>($r15);

        virtualinvoke $r13.<edu.kit.ipd.sdq.eventsim.measurement.r.Column: void set(int,java.lang.Object)>(i0, $r16);

        $r17 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart who>;

        $r18 = virtualinvoke $r17.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column getId()>();

        $r19 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor idExtractors>;

        $r20 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: java.lang.Object getWho()>();

        $r21 = virtualinvoke $r19.<edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor: java.lang.String extractFrom(java.lang.Object)>($r20);

        virtualinvoke $r18.<edu.kit.ipd.sdq.eventsim.measurement.r.Column: void set(int,java.lang.Object)>(i0, $r21);

        $r22 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart who>;

        $r23 = virtualinvoke $r22.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column getName()>();

        $r24 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor nameExtractors>;

        $r25 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: java.lang.Object getWho()>();

        $r26 = virtualinvoke $r24.<edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor: java.lang.String extractFrom(java.lang.Object)>($r25);

        virtualinvoke $r23.<edu.kit.ipd.sdq.eventsim.measurement.r.Column: void set(int,java.lang.Object)>(i0, $r26);

     label2:
        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: void putMeasuringPoint(edu.kit.ipd.sdq.eventsim.measurement.Measurement,int)>(r1, i0);

        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: void putContexts(edu.kit.ipd.sdq.eventsim.measurement.Measurement,int)>(r1, i0);

        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: void putMetadata(edu.kit.ipd.sdq.eventsim.measurement.Measurement,int)>(r1, i0);

        return 1;
    }

    private void putMeasuringPoint(edu.kit.ipd.sdq.eventsim.measurement.Measurement, int)
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.Buffer r0;
        edu.kit.ipd.sdq.eventsim.measurement.Measurement r1;
        int i0;
        edu.kit.ipd.sdq.eventsim.measurement.MeasuringPointPair r2;
        java.lang.Object r3, r4, $r10, $r16, $r22, $r25, $r27;
        edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint $r5, $r9, $r15, $r21, $r24;
        boolean $z0;
        edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart $r6, $r12, $r18, $r29, $r33, $r37, $r41, $r45, $r49;
        edu.kit.ipd.sdq.eventsim.measurement.r.Column $r7, $r13, $r19, $r30, $r34, $r38, $r42, $r46, $r50;
        edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor $r8, $r14, $r20, $r31, $r35, $r39, $r43, $r47, $r51;
        java.lang.String $r11, $r17, $r23, $r32, $r36, $r40, $r44, $r48, $r52;
        edu.kit.ipd.sdq.eventsim.measurement.Pair $r26, $r28;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.Buffer;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.measurement.Measurement;

        i0 := @parameter1: int;

        $r5 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint getWhere()>();

        $z0 = $r5 instanceof edu.kit.ipd.sdq.eventsim.measurement.MeasuringPointPair;

        if $z0 == 0 goto label1;

        $r24 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint getWhere()>();

        r2 = (edu.kit.ipd.sdq.eventsim.measurement.MeasuringPointPair) $r24;

        $r25 = virtualinvoke r2.<edu.kit.ipd.sdq.eventsim.measurement.MeasuringPointPair: java.lang.Object getElement()>();

        $r26 = (edu.kit.ipd.sdq.eventsim.measurement.Pair) $r25;

        r3 = virtualinvoke $r26.<edu.kit.ipd.sdq.eventsim.measurement.Pair: java.lang.Object getFirst()>();

        $r27 = virtualinvoke r2.<edu.kit.ipd.sdq.eventsim.measurement.MeasuringPointPair: java.lang.Object getElement()>();

        $r28 = (edu.kit.ipd.sdq.eventsim.measurement.Pair) $r27;

        r4 = virtualinvoke $r28.<edu.kit.ipd.sdq.eventsim.measurement.Pair: java.lang.Object getSecond()>();

        $r29 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart whereFirst>;

        $r30 = virtualinvoke $r29.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column getId()>();

        $r31 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor idExtractors>;

        $r32 = virtualinvoke $r31.<edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor: java.lang.String extractFrom(java.lang.Object)>(r3);

        virtualinvoke $r30.<edu.kit.ipd.sdq.eventsim.measurement.r.Column: void set(int,java.lang.Object)>(i0, $r32);

        $r33 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart whereFirst>;

        $r34 = virtualinvoke $r33.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column getType()>();

        $r35 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor typeExtractors>;

        $r36 = virtualinvoke $r35.<edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor: java.lang.String extractFrom(java.lang.Object)>(r3);

        virtualinvoke $r34.<edu.kit.ipd.sdq.eventsim.measurement.r.Column: void set(int,java.lang.Object)>(i0, $r36);

        $r37 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart whereFirst>;

        $r38 = virtualinvoke $r37.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column getName()>();

        $r39 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor nameExtractors>;

        $r40 = virtualinvoke $r39.<edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor: java.lang.String extractFrom(java.lang.Object)>(r3);

        virtualinvoke $r38.<edu.kit.ipd.sdq.eventsim.measurement.r.Column: void set(int,java.lang.Object)>(i0, $r40);

        $r41 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart whereSecond>;

        $r42 = virtualinvoke $r41.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column getId()>();

        $r43 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor idExtractors>;

        $r44 = virtualinvoke $r43.<edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor: java.lang.String extractFrom(java.lang.Object)>(r4);

        virtualinvoke $r42.<edu.kit.ipd.sdq.eventsim.measurement.r.Column: void set(int,java.lang.Object)>(i0, $r44);

        $r45 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart whereSecond>;

        $r46 = virtualinvoke $r45.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column getType()>();

        $r47 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor typeExtractors>;

        $r48 = virtualinvoke $r47.<edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor: java.lang.String extractFrom(java.lang.Object)>(r4);

        virtualinvoke $r46.<edu.kit.ipd.sdq.eventsim.measurement.r.Column: void set(int,java.lang.Object)>(i0, $r48);

        $r49 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart whereSecond>;

        $r50 = virtualinvoke $r49.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column getName()>();

        $r51 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor nameExtractors>;

        $r52 = virtualinvoke $r51.<edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor: java.lang.String extractFrom(java.lang.Object)>(r4);

        virtualinvoke $r50.<edu.kit.ipd.sdq.eventsim.measurement.r.Column: void set(int,java.lang.Object)>(i0, $r52);

        goto label2;

     label1:
        $r6 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart whereFirst>;

        $r7 = virtualinvoke $r6.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column getId()>();

        $r8 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor idExtractors>;

        $r9 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint getWhere()>();

        $r10 = virtualinvoke $r9.<edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint: java.lang.Object getElement()>();

        $r11 = virtualinvoke $r8.<edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor: java.lang.String extractFrom(java.lang.Object)>($r10);

        virtualinvoke $r7.<edu.kit.ipd.sdq.eventsim.measurement.r.Column: void set(int,java.lang.Object)>(i0, $r11);

        $r12 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart whereFirst>;

        $r13 = virtualinvoke $r12.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column getType()>();

        $r14 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor typeExtractors>;

        $r15 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint getWhere()>();

        $r16 = virtualinvoke $r15.<edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint: java.lang.Object getElement()>();

        $r17 = virtualinvoke $r14.<edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor: java.lang.String extractFrom(java.lang.Object)>($r16);

        virtualinvoke $r13.<edu.kit.ipd.sdq.eventsim.measurement.r.Column: void set(int,java.lang.Object)>(i0, $r17);

        $r18 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart whereFirst>;

        $r19 = virtualinvoke $r18.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column getName()>();

        $r20 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor nameExtractors>;

        $r21 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint getWhere()>();

        $r22 = virtualinvoke $r21.<edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint: java.lang.Object getElement()>();

        $r23 = virtualinvoke $r20.<edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor: java.lang.String extractFrom(java.lang.Object)>($r22);

        virtualinvoke $r19.<edu.kit.ipd.sdq.eventsim.measurement.r.Column: void set(int,java.lang.Object)>(i0, $r23);

     label2:
        return;
    }

    private void putContexts(edu.kit.ipd.sdq.eventsim.measurement.Measurement, int)
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.Buffer r0;
        edu.kit.ipd.sdq.eventsim.measurement.Measurement r1;
        int i0, i1, $i2, i3;
        java.lang.Object r2, $r11, $r17, $r23;
        java.lang.String r4, $r8, $r15, $r21, $r27;
        edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint $r5;
        java.lang.Object[] $r6;
        edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor $r7, $r14, $r20, $r26;
        java.util.Map $r9, $r10, $r16, $r22, $r29;
        boolean $z0;
        edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart $r12, $r18, $r24, $r28;
        edu.kit.ipd.sdq.eventsim.measurement.r.Column $r13, $r19, $r25;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.Buffer;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.measurement.Measurement;

        i0 := @parameter1: int;

        $r5 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint getWhere()>();

        $r6 = virtualinvoke $r5.<edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint: java.lang.Object[] getContexts()>();

        i1 = lengthof $r6;

        i3 = 0;

        goto label3;

     label1:
        r2 = $r6[i3];

        $r7 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor typeExtractors>;

        $r8 = virtualinvoke $r7.<edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor: java.lang.String extractFrom(java.lang.Object)>(r2);

        r4 = virtualinvoke $r8.<java.lang.String: java.lang.String toLowerCase()>();

        $r9 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: java.util.Map contexts>;

        $z0 = interfaceinvoke $r9.<java.util.Map: boolean containsKey(java.lang.Object)>(r4);

        if $z0 != 0 goto label2;

        $r29 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: java.util.Map contexts>;

        $r28 = new edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart;

        $i2 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: int capacity>;

        specialinvoke $r28.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: void <init>(java.lang.String,int)>(r4, $i2);

        interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r28);

     label2:
        $r10 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: java.util.Map contexts>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        $r12 = (edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart) $r11;

        $r13 = virtualinvoke $r12.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column getId()>();

        $r14 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor idExtractors>;

        $r15 = virtualinvoke $r14.<edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor: java.lang.String extractFrom(java.lang.Object)>(r2);

        virtualinvoke $r13.<edu.kit.ipd.sdq.eventsim.measurement.r.Column: void set(int,java.lang.Object)>(i0, $r15);

        $r16 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: java.util.Map contexts>;

        $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        $r18 = (edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart) $r17;

        $r19 = virtualinvoke $r18.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column getType()>();

        $r20 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor typeExtractors>;

        $r21 = virtualinvoke $r20.<edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor: java.lang.String extractFrom(java.lang.Object)>(r2);

        virtualinvoke $r19.<edu.kit.ipd.sdq.eventsim.measurement.r.Column: void set(int,java.lang.Object)>(i0, $r21);

        $r22 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: java.util.Map contexts>;

        $r23 = interfaceinvoke $r22.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        $r24 = (edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart) $r23;

        $r25 = virtualinvoke $r24.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column getName()>();

        $r26 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor nameExtractors>;

        $r27 = virtualinvoke $r26.<edu.kit.ipd.sdq.eventsim.measurement.PropertyExtractor: java.lang.String extractFrom(java.lang.Object)>(r2);

        virtualinvoke $r25.<edu.kit.ipd.sdq.eventsim.measurement.r.Column: void set(int,java.lang.Object)>(i0, $r27);

        i3 = i3 + 1;

     label3:
        if i3 < i1 goto label1;

        return;
    }

    private void putMetadata(edu.kit.ipd.sdq.eventsim.measurement.Measurement, int)
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.Buffer r0;
        edu.kit.ipd.sdq.eventsim.measurement.Measurement r1;
        int i0, i1, $i2, i3;
        edu.kit.ipd.sdq.eventsim.measurement.Metadata r2;
        java.lang.String r4, $r11, $r14;
        edu.kit.ipd.sdq.eventsim.measurement.Metadata[] $r5;
        java.util.Map $r6, $r7, $r13;
        boolean $z0, $z1;
        java.lang.Object $r8, $r10;
        edu.kit.ipd.sdq.eventsim.measurement.r.Column $r9, $r12;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.Buffer;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.measurement.Measurement;

        i0 := @parameter1: int;

        $r5 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: edu.kit.ipd.sdq.eventsim.measurement.Metadata[] getMetadata()>();

        i1 = lengthof $r5;

        i3 = 0;

        goto label3;

     label1:
        r2 = $r5[i3];

        r4 = virtualinvoke r2.<edu.kit.ipd.sdq.eventsim.measurement.Metadata: java.lang.String getName()>();

        $r6 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: java.util.Map metadata>;

        $z0 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>(r4);

        if $z0 != 0 goto label2;

        $r13 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: java.util.Map metadata>;

        $r12 = new edu.kit.ipd.sdq.eventsim.measurement.r.Column;

        $r14 = virtualinvoke r2.<edu.kit.ipd.sdq.eventsim.measurement.Metadata: java.lang.String getName()>();

        $i2 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: int capacity>;

        $z1 = virtualinvoke r2.<edu.kit.ipd.sdq.eventsim.measurement.Metadata: boolean isFactorial()>();

        specialinvoke $r12.<edu.kit.ipd.sdq.eventsim.measurement.r.Column: void <init>(java.lang.Class,java.lang.String,int,boolean)>(class "Ljava/lang/String;", $r14, $i2, $z1);

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r12);

     label2:
        $r7 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: java.util.Map metadata>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        $r9 = (edu.kit.ipd.sdq.eventsim.measurement.r.Column) $r8;

        $r10 = virtualinvoke r2.<edu.kit.ipd.sdq.eventsim.measurement.Metadata: java.lang.Object getValue()>();

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r9.<edu.kit.ipd.sdq.eventsim.measurement.r.Column: void set(int,java.lang.Object)>(i0, $r11);

        i3 = i3 + 1;

     label3:
        if i3 < i1 goto label1;

        return;
    }

    public void shrinkToSize()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.Buffer r0;
        int i0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        edu.kit.ipd.sdq.eventsim.measurement.r.Column $r2, $r5, r20;
        edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart $r3, $r4, $r6, r18;
        double[] $r7, $r8, $r9, $r10;
        java.util.Map $r11, $r14;
        java.util.Collection $r12, $r15;
        boolean $z0, $z1;
        java.lang.Object $r13, $r16;
        java.util.Iterator r17, r19;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.Buffer;

        $r1 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: java.util.concurrent.atomic.AtomicInteger size>;

        i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $r2 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.Column what>;

        virtualinvoke $r2.<edu.kit.ipd.sdq.eventsim.measurement.r.Column: void shrink(int)>(i0);

        $r3 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart whereFirst>;

        virtualinvoke $r3.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: void shrink(int)>(i0);

        $r4 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart whereSecond>;

        virtualinvoke $r4.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: void shrink(int)>(i0);

        $r5 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.Column whereProperty>;

        virtualinvoke $r5.<edu.kit.ipd.sdq.eventsim.measurement.r.Column: void shrink(int)>(i0);

        $r6 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart who>;

        virtualinvoke $r6.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: void shrink(int)>(i0);

        $r7 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: double[] value>;

        $r8 = staticinvoke <edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: double[] shrinkArray(double[],int)>($r7, i0);

        r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: double[] value> = $r8;

        $r9 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: double[] when>;

        $r10 = staticinvoke <edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: double[] shrinkArray(double[],int)>($r9, i0);

        r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: double[] when> = $r10;

        $r11 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: java.util.Map contexts>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Collection values()>();

        r17 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r13 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r18 = (edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart) $r13;

        virtualinvoke r18.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: void shrink(int)>(i0);

     label2:
        $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r14 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: java.util.Map metadata>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Collection values()>();

        r19 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();

        goto label4;

     label3:
        $r16 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (edu.kit.ipd.sdq.eventsim.measurement.r.Column) $r16;

        virtualinvoke r20.<edu.kit.ipd.sdq.eventsim.measurement.r.Column: void shrink(int)>(i0);

     label4:
        $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

        return;
    }

    protected static java.lang.String[] shrinkArray(java.lang.String[], int)
    {
        java.lang.String[] r0, r1;
        int i0;

        r0 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        r1 = newarray (java.lang.String)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, i0);

        return r1;
    }

    private static double[] shrinkArray(double[], int)
    {
        double[] r0, r1;
        int i0;

        r0 := @parameter0: double[];

        i0 := @parameter1: int;

        r1 = newarray (double)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, i0);

        return r1;
    }

    public boolean isFull()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.Buffer r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0, $i1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.Buffer;

        $r1 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: java.util.concurrent.atomic.AtomicInteger size>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $i1 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: int capacity>;

        if $i0 < $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public edu.kit.ipd.sdq.eventsim.measurement.r.Column getWhat()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.Buffer r0;
        edu.kit.ipd.sdq.eventsim.measurement.r.Column $r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.Buffer;

        $r1 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.Column what>;

        return $r1;
    }

    public edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart getWhereFirst()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.Buffer r0;
        edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart $r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.Buffer;

        $r1 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart whereFirst>;

        return $r1;
    }

    public edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart getWhereSecond()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.Buffer r0;
        edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart $r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.Buffer;

        $r1 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart whereSecond>;

        return $r1;
    }

    public edu.kit.ipd.sdq.eventsim.measurement.r.Column getWhereProperty()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.Buffer r0;
        edu.kit.ipd.sdq.eventsim.measurement.r.Column $r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.Buffer;

        $r1 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.Column whereProperty>;

        return $r1;
    }

    public edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart getWho()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.Buffer r0;
        edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart $r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.Buffer;

        $r1 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart who>;

        return $r1;
    }

    public double[] getValue()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.Buffer r0;
        double[] $r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.Buffer;

        $r1 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: double[] value>;

        return $r1;
    }

    public double[] getWhen()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.Buffer r0;
        double[] $r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.Buffer;

        $r1 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: double[] when>;

        return $r1;
    }

    public int getSize()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.Buffer r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.Buffer;

        $r1 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: java.util.concurrent.atomic.AtomicInteger size>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i0;
    }

    public java.util.Collection getColumns()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.Buffer r0;
        java.util.ArrayList $r2;
        edu.kit.ipd.sdq.eventsim.measurement.r.Column $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r16, $r18, $r20, $r22, $r26, $r27, $r28, r35;
        edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart $r4, $r6, $r8, $r10, $r12, $r14, $r17, $r19, $r21, r33;
        java.util.Map $r23, $r29;
        java.util.Collection $r24, $r30;
        boolean $z11, $z15;
        java.lang.Object $r25, $r31;
        java.util.Iterator r32, r34;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.Buffer;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.Column what>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r4 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart whereFirst>;

        $r5 = $r4.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column id>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r6 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart whereFirst>;

        $r7 = $r6.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column name>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart whereFirst>;

        $r9 = $r8.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column type>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart whereSecond>;

        $r11 = $r10.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column id>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r12 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart whereSecond>;

        $r13 = $r12.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column name>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r14 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart whereSecond>;

        $r15 = $r14.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column type>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r15);

        $r16 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.Column whereProperty>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r16);

        $r17 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart who>;

        $r18 = $r17.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column id>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r18);

        $r19 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart who>;

        $r20 = $r19.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column name>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r20);

        $r21 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart who>;

        $r22 = $r21.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column type>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r22);

        $r23 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: java.util.Map contexts>;

        $r24 = interfaceinvoke $r23.<java.util.Map: java.util.Collection values()>();

        r32 = interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r25 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();

        r33 = (edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart) $r25;

        $r26 = r33.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column id>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r26);

        $r27 = r33.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column name>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r27);

        $r28 = r33.<edu.kit.ipd.sdq.eventsim.measurement.r.BufferPart: edu.kit.ipd.sdq.eventsim.measurement.r.Column type>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r28);

     label2:
        $z11 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();

        if $z11 != 0 goto label1;

        $r29 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.Buffer: java.util.Map metadata>;

        $r30 = interfaceinvoke $r29.<java.util.Map: java.util.Collection values()>();

        r34 = interfaceinvoke $r30.<java.util.Collection: java.util.Iterator iterator()>();

        goto label4;

     label3:
        $r31 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>();

        r35 = (edu.kit.ipd.sdq.eventsim.measurement.r.Column) $r31;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r35);

     label4:
        $z15 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>();

        if $z15 != 0 goto label3;

        return $r2;
    }
}
