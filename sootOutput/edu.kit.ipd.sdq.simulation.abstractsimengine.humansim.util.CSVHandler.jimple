public class edu.kit.ipd.sdq.simulation.abstractsimengine.humansim.util.CSVHandler extends java.lang.Object
{
    public static final java.lang.String CSV_DELIMITER;
    public static final java.lang.String NEWLINE;

    public void <init>()
    {
        edu.kit.ipd.sdq.simulation.abstractsimengine.humansim.util.CSVHandler r0;

        r0 := @this: edu.kit.ipd.sdq.simulation.abstractsimengine.humansim.util.CSVHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void writeCSVFile(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r7, $r8, $r13;
        java.io.FileWriter $r5, r24;
        java.lang.StringBuilder $r6, $r9, $r10, $r11, $r12;
        java.io.IOException $r15, $r20, $r22;
        java.io.PrintStream $r16, $r18, $r21, $r23;
        java.lang.Exception $r17;
        java.lang.Throwable $r19;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r24 = null;

        r2 = "C:\\HumanSimData";

     label01:
        $r5 = new java.io.FileWriter;

        $r6 = new java.lang.StringBuilder;

        $r7 = virtualinvoke r2.<java.lang.String: java.lang.String toString()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".csv");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.FileWriter: void <init>(java.lang.String)>($r13);

        r24 = $r5;

        virtualinvoke $r5.<java.io.FileWriter: java.io.Writer append(java.lang.CharSequence)>(r1);

     label02:
        goto label12;

     label03:
        $r17 := @caughtexception;

        $r18 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("Error in CsvFileWriter !!!");

        virtualinvoke $r17.<java.lang.Exception: void printStackTrace()>();

     label04:
        virtualinvoke r24.<java.io.FileWriter: void flush()>();

        virtualinvoke r24.<java.io.FileWriter: void close()>();

     label05:
        goto label15;

     label06:
        $r20 := @caughtexception;

        $r21 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>("Error while flushing/closing fileWriter !!!");

        virtualinvoke $r20.<java.io.IOException: void printStackTrace()>();

        goto label15;

     label07:
        $r19 := @caughtexception;

     label08:
        virtualinvoke r24.<java.io.FileWriter: void flush()>();

        virtualinvoke r24.<java.io.FileWriter: void close()>();

     label09:
        goto label11;

     label10:
        $r22 := @caughtexception;

        $r23 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>("Error while flushing/closing fileWriter !!!");

        virtualinvoke $r22.<java.io.IOException: void printStackTrace()>();

     label11:
        throw $r19;

     label12:
        virtualinvoke $r5.<java.io.FileWriter: void flush()>();

        virtualinvoke $r5.<java.io.FileWriter: void close()>();

     label13:
        goto label15;

     label14:
        $r15 := @caughtexception;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("Error while flushing/closing fileWriter !!!");

        virtualinvoke $r15.<java.io.IOException: void printStackTrace()>();

     label15:
        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.io.IOException from label04 to label05 with label06;
        catch java.lang.Throwable from label01 to label04 with label07;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.io.IOException from label12 to label13 with label14;
    }

    public static java.lang.String readCSV(java.lang.String)
    {
        java.lang.String r0, r1, $r7, $r8, $r12, $r13, $r15, r26;
        java.io.BufferedReader $r4, r28;
        java.io.FileReader $r5;
        java.lang.StringBuilder $r6, $r9, $r10, $r11, $r14, $r16;
        java.io.IOException $r17, $r19, $r24;
        java.io.PrintStream $r18, $r20, $r22, $r25;
        java.lang.Exception $r21;
        java.lang.Throwable $r23;

        r0 := @parameter0: java.lang.String;

        r26 = "";

        r28 = null;

        r1 = "C:\\HumanSimData";

     label01:
        $r4 = new java.io.BufferedReader;

        $r5 = new java.io.FileReader;

        $r6 = new java.lang.StringBuilder;

        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String toString()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".csv");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.FileReader: void <init>(java.lang.String)>($r12);

        specialinvoke $r4.<java.io.BufferedReader: void <init>(java.io.Reader)>($r5);

        r28 = $r4;

        goto label03;

     label02:
        $r14 = new java.lang.StringBuilder;

        $r15 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r26);

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>($r15);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        r26 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        $r13 = virtualinvoke $r4.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r13 != null goto label02;

     label04:
        goto label14;

     label05:
        $r21 := @caughtexception;

        $r22 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("Error in CSVFileReader");

     label06:
        virtualinvoke r28.<java.io.BufferedReader: void close()>();

     label07:
        goto label17;

     label08:
        $r24 := @caughtexception;

        $r25 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>("Error while closing fileReader !!!");

        goto label17;

     label09:
        $r23 := @caughtexception;

     label10:
        virtualinvoke r28.<java.io.BufferedReader: void close()>();

     label11:
        goto label13;

     label12:
        $r17 := @caughtexception;

        $r18 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("Error while closing fileReader !!!");

     label13:
        throw $r23;

     label14:
        virtualinvoke $r4.<java.io.BufferedReader: void close()>();

     label15:
        goto label17;

     label16:
        $r19 := @caughtexception;

        $r20 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>("Error while closing fileReader !!!");

     label17:
        return r26;

        catch java.lang.Exception from label01 to label04 with label05;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.lang.Throwable from label01 to label06 with label09;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.io.IOException from label14 to label15 with label16;
    }

    public static void readCSVAndAppend(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r6, $r10, r11, $r13, r16;
        java.io.File $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r12, $r14, $r15;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r11 = "";

        $r4 = new java.io.File;

        $r5 = new java.lang.StringBuilder;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("C:\\HumanSimData");

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".csv");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r10);

        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke $r4.<java.io.File: boolean isDirectory()>();

        if $z1 != 0 goto label1;

        r11 = staticinvoke <edu.kit.ipd.sdq.simulation.abstractsimengine.humansim.util.CSVHandler: java.lang.String readCSV(java.lang.String)>(r0);

     label1:
        $r12 = new java.lang.StringBuilder;

        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r11);

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>($r13);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <edu.kit.ipd.sdq.simulation.abstractsimengine.humansim.util.CSVHandler: void writeCSVFile(java.lang.String,java.lang.String)>(r0, r16);

        return;
    }

    public static void <clinit>()
    {
        <edu.kit.ipd.sdq.simulation.abstractsimengine.humansim.util.CSVHandler: java.lang.String NEWLINE> = "\n";

        <edu.kit.ipd.sdq.simulation.abstractsimengine.humansim.util.CSVHandler: java.lang.String CSV_DELIMITER> = ";";

        return;
    }
}
