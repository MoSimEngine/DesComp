class edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor$RJobProcessorRunnable extends java.lang.Object implements java.lang.Runnable
{
    final edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor this$0;

    private void <init>(edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor)
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor$RJobProcessorRunnable r0;
        edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor$RJobProcessorRunnable;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor;

        r0.<edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor$RJobProcessorRunnable: edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor$RJobProcessorRunnable r0;
        long l0, l1, $l2, $l3, $l4;
        edu.kit.ipd.sdq.eventsim.measurement.r.RContext $r2;
        edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor $r3, $r8;
        edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection $r4;
        org.rosuda.REngine.Rserve.RConnection $r5, $r6;
        java.lang.String[] $r7;
        java.util.concurrent.BlockingQueue $r9;
        java.lang.Object $r10;
        org.apache.log4j.Logger $r11, $r18, $r24, $r26;
        java.lang.Object[] $r12, $r19;
        java.lang.String $r13, $r15, $r22;
        double $d0, $d1, $d2, $d3;
        java.lang.Double $r14, $r21;
        edu.kit.ipd.sdq.eventsim.measurement.r.RStatistics $r16, $r20;
        java.lang.Class $r17;
        boolean $z0, z1;
        java.lang.InterruptedException $r23;
        edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException $r25;
        edu.kit.ipd.sdq.eventsim.measurement.r.RJob r28;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor$RJobProcessorRunnable;

        $r2 = new edu.kit.ipd.sdq.eventsim.measurement.r.RContext;

        $r3 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor$RJobProcessorRunnable: edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor this$0>;

        $r4 = staticinvoke <edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor: edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection access$0(edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor)>($r3);

        $r5 = virtualinvoke $r4.<edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection: org.rosuda.REngine.Rserve.RConnection getConnection()>();

        specialinvoke $r2.<edu.kit.ipd.sdq.eventsim.measurement.r.RContext: void <init>(org.rosuda.REngine.Rserve.RConnection)>($r5);

     label1:
        $r6 = virtualinvoke $r2.<edu.kit.ipd.sdq.eventsim.measurement.r.RContext: org.rosuda.REngine.Rserve.RConnection getConnection()>();

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = "memory.limit(size=1024000)";

        staticinvoke <edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationHelper: void evaluateVoid(org.rosuda.REngine.Rserve.RConnection,java.lang.String[])>($r6, $r7);

     label2:
        goto label4;

     label3:
        $r25 := @caughtexception;

        $r26 = staticinvoke <edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor: org.apache.log4j.Logger access$1()>();

        virtualinvoke $r26.<org.apache.log4j.Logger: void error(java.lang.Object)>($r25);

     label4:
        z1 = 1;

        goto label8;

     label5:
        $r8 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor$RJobProcessorRunnable: edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor this$0>;

        $r9 = staticinvoke <edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor: java.util.concurrent.BlockingQueue access$2(edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor)>($r8);

        $r10 = interfaceinvoke $r9.<java.util.concurrent.BlockingQueue: java.lang.Object take()>();

        r28 = (edu.kit.ipd.sdq.eventsim.measurement.r.RJob) $r10;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        interfaceinvoke r28.<edu.kit.ipd.sdq.eventsim.measurement.r.RJob: void process(edu.kit.ipd.sdq.eventsim.measurement.r.RContext)>($r2);

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r11 = staticinvoke <edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor: org.apache.log4j.Logger access$1()>();

        $r12 = newarray (java.lang.Object)[2];

        $r13 = interfaceinvoke r28.<edu.kit.ipd.sdq.eventsim.measurement.r.RJob: java.lang.String getName()>();

        $r12[0] = $r13;

        $l2 = l1 - l0;

        $d0 = (double) $l2;

        $d1 = $d0 / 1000.0;

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r12[1] = $r14;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s. Took %.2f seconds.", $r12);

        virtualinvoke $r11.<org.apache.log4j.Logger: void debug(java.lang.Object)>($r15);

        $r16 = virtualinvoke $r2.<edu.kit.ipd.sdq.eventsim.measurement.r.RContext: edu.kit.ipd.sdq.eventsim.measurement.r.RStatistics getStatistics()>();

        $l3 = l1 - l0;

        virtualinvoke $r16.<edu.kit.ipd.sdq.eventsim.measurement.r.RStatistics: void captureTimeSpentInR(long)>($l3);

        $r17 = virtualinvoke r28.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r17.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ledu/kit/ipd/sdq/eventsim/measurement/r/jobs/FinalizeRProcessingJob;");

        if $z0 == 0 goto label8;

        z1 = 0;

     label6:
        goto label8;

     label7:
        $r23 := @caughtexception;

        $r24 = staticinvoke <edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor: org.apache.log4j.Logger access$1()>();

        virtualinvoke $r24.<org.apache.log4j.Logger: void error(java.lang.Object)>($r23);

     label8:
        if z1 != 0 goto label5;

        $r18 = staticinvoke <edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor: org.apache.log4j.Logger access$1()>();

        $r19 = newarray (java.lang.Object)[1];

        $r20 = virtualinvoke $r2.<edu.kit.ipd.sdq.eventsim.measurement.r.RContext: edu.kit.ipd.sdq.eventsim.measurement.r.RStatistics getStatistics()>();

        $l4 = virtualinvoke $r20.<edu.kit.ipd.sdq.eventsim.measurement.r.RStatistics: long getTotalTimeSpentInR()>();

        $d2 = (double) $l4;

        $d3 = $d2 / 1000.0;

        $r21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $r19[0] = $r21;

        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Finished R processing. Total time spent in R: %.2f seconds.", $r19);

        virtualinvoke $r18.<org.apache.log4j.Logger: void info(java.lang.Object)>($r22);

        return;

        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label1 to label2 with label3;
        catch java.lang.InterruptedException from label5 to label6 with label7;
    }

    void <init>(edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor, edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor$RJobProcessorRunnable)
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor$RJobProcessorRunnable r0, r2;
        edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor$RJobProcessorRunnable;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor;

        r2 := @parameter1: edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor$RJobProcessorRunnable;

        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor$RJobProcessorRunnable: void <init>(edu.kit.ipd.sdq.eventsim.measurement.r.RJobProcessor)>(r1);

        return;
    }
}
