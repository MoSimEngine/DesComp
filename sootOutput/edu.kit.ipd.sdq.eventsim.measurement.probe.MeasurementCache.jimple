public class edu.kit.ipd.sdq.eventsim.measurement.probe.MeasurementCache extends java.lang.Object
{
    private static final org.apache.log4j.Logger log;
    private java.util.WeakHashMap measurements;

    static void <clinit>()
    {
        org.apache.log4j.Logger $r0;

        $r0 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>(class "Ledu/kit/ipd/sdq/eventsim/measurement/probe/MeasurementCache;");

        <edu.kit.ipd.sdq.eventsim.measurement.probe.MeasurementCache: org.apache.log4j.Logger log> = $r0;

        return;
    }

    public void <init>()
    {
        edu.kit.ipd.sdq.eventsim.measurement.probe.MeasurementCache r0;
        java.util.WeakHashMap $r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.probe.MeasurementCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();

        r0.<edu.kit.ipd.sdq.eventsim.measurement.probe.MeasurementCache: java.util.WeakHashMap measurements> = $r1;

        return;
    }

    public void put(edu.kit.ipd.sdq.eventsim.measurement.Measurement)
    {
        edu.kit.ipd.sdq.eventsim.measurement.probe.MeasurementCache r0;
        edu.kit.ipd.sdq.eventsim.measurement.Measurement r1;
        java.lang.Object r2, $r5;
        java.util.WeakHashMap $r3, $r4, $r15;
        boolean $z0, $z1;
        java.util.Map $r6;
        edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint $r7;
        org.apache.log4j.Logger $r9, $r11;
        java.lang.StringBuilder $r10, $r12;
        java.lang.String $r13;
        java.util.HashMap $r14;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.probe.MeasurementCache;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.measurement.Measurement;

        r2 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: java.lang.Object getWho()>();

        $r3 = r0.<edu.kit.ipd.sdq.eventsim.measurement.probe.MeasurementCache: java.util.WeakHashMap measurements>;

        $z0 = virtualinvoke $r3.<java.util.WeakHashMap: boolean containsKey(java.lang.Object)>(r2);

        if $z0 != 0 goto label1;

        $r15 = r0.<edu.kit.ipd.sdq.eventsim.measurement.probe.MeasurementCache: java.util.WeakHashMap measurements>;

        $r14 = new java.util.HashMap;

        specialinvoke $r14.<java.util.HashMap: void <init>()>();

        virtualinvoke $r15.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r14);

     label1:
        $r4 = r0.<edu.kit.ipd.sdq.eventsim.measurement.probe.MeasurementCache: java.util.WeakHashMap measurements>;

        $r5 = virtualinvoke $r4.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r2);

        $r6 = (java.util.Map) $r5;

        $r7 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint getWhere()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r1);

        $r9 = <edu.kit.ipd.sdq.eventsim.measurement.probe.MeasurementCache: org.apache.log4j.Logger log>;

        $z1 = virtualinvoke $r9.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label2;

        $r11 = <edu.kit.ipd.sdq.eventsim.measurement.probe.MeasurementCache: org.apache.log4j.Logger log>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cached measurement: ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<org.apache.log4j.Logger: void debug(java.lang.Object)>($r13);

     label2:
        return;
    }

    public edu.kit.ipd.sdq.eventsim.measurement.Measurement getLastMeasurement(java.lang.Object, edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint)
    {
        edu.kit.ipd.sdq.eventsim.measurement.probe.MeasurementCache r0;
        java.lang.Object r1, $r6, $r8;
        edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint r2;
        edu.kit.ipd.sdq.eventsim.measurement.Measurement r3;
        java.util.WeakHashMap $r4, $r5;
        boolean $z0;
        java.util.Map $r7;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.probe.MeasurementCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint;

        $r4 = r0.<edu.kit.ipd.sdq.eventsim.measurement.probe.MeasurementCache: java.util.WeakHashMap measurements>;

        $z0 = virtualinvoke $r4.<java.util.WeakHashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r5 = r0.<edu.kit.ipd.sdq.eventsim.measurement.probe.MeasurementCache: java.util.WeakHashMap measurements>;

        $r6 = virtualinvoke $r5.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (java.util.Map) $r6;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (edu.kit.ipd.sdq.eventsim.measurement.Measurement) $r8;

        if r3 != null goto label2;

        return null;

     label2:
        return r3;
    }
}
