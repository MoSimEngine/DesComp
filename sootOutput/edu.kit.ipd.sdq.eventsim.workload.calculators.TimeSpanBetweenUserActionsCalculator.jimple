public class edu.kit.ipd.sdq.eventsim.workload.calculators.TimeSpanBetweenUserActionsCalculator extends edu.kit.ipd.sdq.eventsim.measurement.calculator.AbstractBinaryCalculator
{
    private java.lang.String metric;

    public void <init>()
    {
        edu.kit.ipd.sdq.eventsim.workload.calculators.TimeSpanBetweenUserActionsCalculator r0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.workload.calculators.TimeSpanBetweenUserActionsCalculator;

        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.workload.calculators.TimeSpanBetweenUserActionsCalculator: void <init>(java.lang.String)>("TIME_SPAN_BETWEEN_ACTIONS_WORKLOAD");

        return;
    }

    public void <init>(java.lang.String)
    {
        edu.kit.ipd.sdq.eventsim.workload.calculators.TimeSpanBetweenUserActionsCalculator r0;
        java.lang.String r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.workload.calculators.TimeSpanBetweenUserActionsCalculator;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.measurement.calculator.AbstractBinaryCalculator: void <init>()>();

        r0.<edu.kit.ipd.sdq.eventsim.workload.calculators.TimeSpanBetweenUserActionsCalculator: java.lang.String metric> = r1;

        return;
    }

    public void setup(edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe, edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe)
    {
        edu.kit.ipd.sdq.eventsim.workload.calculators.TimeSpanBetweenUserActionsCalculator r0;
        edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe r1, r2;
        edu.kit.ipd.sdq.eventsim.measurement.MeasurementListener $r3;

        r0 := @this: edu.kit.ipd.sdq.eventsim.workload.calculators.TimeSpanBetweenUserActionsCalculator;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe;

        r2 := @parameter1: edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe;

        interfaceinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe: void enableCaching()>();

        $r3 = staticinvoke <edu.kit.ipd.sdq.eventsim.workload.calculators.TimeSpanBetweenUserActionsCalculator$lambda_0__283: edu.kit.ipd.sdq.eventsim.measurement.MeasurementListener bootstrap$(edu.kit.ipd.sdq.eventsim.workload.calculators.TimeSpanBetweenUserActionsCalculator,edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe)>(r0, r1);

        interfaceinvoke r2.<edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe: void forEachMeasurement(edu.kit.ipd.sdq.eventsim.measurement.MeasurementListener)>($r3);

        return;
    }

    public edu.kit.ipd.sdq.eventsim.measurement.Measurement calculate(edu.kit.ipd.sdq.eventsim.measurement.Measurement, edu.kit.ipd.sdq.eventsim.measurement.Measurement)
    {
        edu.kit.ipd.sdq.eventsim.workload.calculators.TimeSpanBetweenUserActionsCalculator r0;
        edu.kit.ipd.sdq.eventsim.measurement.Measurement r1, r2, $r11;
        double d0, d1, $d2, $d3;
        edu.kit.ipd.sdq.eventsim.measurement.MeasuringPointPair $r5;
        edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint $r6, $r7, $r8;
        java.lang.Object[] $r9;
        java.lang.String $r10, $r14;
        java.lang.Object $r12;
        edu.kit.ipd.sdq.eventsim.measurement.Metadata[] $r13;

        r0 := @this: edu.kit.ipd.sdq.eventsim.workload.calculators.TimeSpanBetweenUserActionsCalculator;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.measurement.Measurement;

        r2 := @parameter1: edu.kit.ipd.sdq.eventsim.measurement.Measurement;

        if r1 != null goto label1;

        return null;

     label1:
        d0 = virtualinvoke r2.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: double getWhen()>();

        $d2 = virtualinvoke r2.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: double getValue()>();

        $d3 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: double getValue()>();

        d1 = $d2 - $d3;

        $r5 = new edu.kit.ipd.sdq.eventsim.measurement.MeasuringPointPair;

        $r6 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint getWhere()>();

        $r7 = virtualinvoke r2.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint getWhere()>();

        $r8 = virtualinvoke r2.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint getWhere()>();

        $r9 = virtualinvoke $r8.<edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint: java.lang.Object[] getContexts()>();

        specialinvoke $r5.<edu.kit.ipd.sdq.eventsim.measurement.MeasuringPointPair: void <init>(edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint,edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint,java.lang.String,java.lang.Object[])>($r6, $r7, "timespan", $r9);

        $r10 = r0.<edu.kit.ipd.sdq.eventsim.workload.calculators.TimeSpanBetweenUserActionsCalculator: java.lang.String metric>;

        if $r10 != null goto label2;

        $r14 = "TIME_SPAN_BETWEEN_ACTIONS_WORKLOAD";

        goto label3;

     label2:
        $r14 = r0.<edu.kit.ipd.sdq.eventsim.workload.calculators.TimeSpanBetweenUserActionsCalculator: java.lang.String metric>;

     label3:
        $r11 = new edu.kit.ipd.sdq.eventsim.measurement.Measurement;

        $r12 = virtualinvoke r2.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: java.lang.Object getWho()>();

        $r13 = newarray (edu.kit.ipd.sdq.eventsim.measurement.Metadata)[0];

        specialinvoke $r11.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: void <init>(java.lang.Object,edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint,java.lang.Object,double,double,edu.kit.ipd.sdq.eventsim.measurement.Metadata[])>($r14, $r5, $r12, d1, d0, $r13);

        return $r11;
    }

    public void lambda$0(edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe, edu.kit.ipd.sdq.eventsim.measurement.Measurement)
    {
        edu.kit.ipd.sdq.eventsim.workload.calculators.TimeSpanBetweenUserActionsCalculator r0;
        edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe r1;
        edu.kit.ipd.sdq.eventsim.measurement.Measurement r2, $r5, $r6;
        edu.kit.ipd.sdq.eventsim.workload.entities.User r3;
        java.lang.Object $r4;

        r0 := @this: edu.kit.ipd.sdq.eventsim.workload.calculators.TimeSpanBetweenUserActionsCalculator;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe;

        r2 := @parameter1: edu.kit.ipd.sdq.eventsim.measurement.Measurement;

        $r4 = virtualinvoke r2.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: java.lang.Object getWho()>();

        r3 = (edu.kit.ipd.sdq.eventsim.workload.entities.User) $r4;

        $r5 = interfaceinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe: edu.kit.ipd.sdq.eventsim.measurement.Measurement getLastMeasurementOf(java.lang.Object)>(r3);

        $r6 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.workload.calculators.TimeSpanBetweenUserActionsCalculator: edu.kit.ipd.sdq.eventsim.measurement.Measurement calculate(edu.kit.ipd.sdq.eventsim.measurement.Measurement,edu.kit.ipd.sdq.eventsim.measurement.Measurement)>($r5, r2);

        virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.workload.calculators.TimeSpanBetweenUserActionsCalculator: void notify(edu.kit.ipd.sdq.eventsim.measurement.Measurement)>($r6);

        return;
    }
}
