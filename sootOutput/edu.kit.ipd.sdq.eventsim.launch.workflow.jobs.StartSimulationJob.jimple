public class edu.kit.ipd.sdq.eventsim.launch.workflow.jobs.StartSimulationJob extends de.uka.ipd.sdq.workflow.extension.AbstractExtendableJob
{
    private final edu.kit.ipd.sdq.eventsim.launch.runconfig.EventSimWorkflowConfiguration workflowConfiguration;
    private java.util.List metadata;

    public void <init>(edu.kit.ipd.sdq.eventsim.launch.runconfig.EventSimWorkflowConfiguration)
    {
        edu.kit.ipd.sdq.eventsim.launch.workflow.jobs.StartSimulationJob r0;
        edu.kit.ipd.sdq.eventsim.launch.runconfig.EventSimWorkflowConfiguration r1;
        java.util.List $r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.launch.workflow.jobs.StartSimulationJob;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.launch.runconfig.EventSimWorkflowConfiguration;

        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.launch.workflow.jobs.StartSimulationJob: void <init>(edu.kit.ipd.sdq.eventsim.launch.runconfig.EventSimWorkflowConfiguration,java.util.List)>(r1, $r2);

        return;
    }

    public void <init>(edu.kit.ipd.sdq.eventsim.launch.runconfig.EventSimWorkflowConfiguration, java.util.List)
    {
        edu.kit.ipd.sdq.eventsim.launch.workflow.jobs.StartSimulationJob r0;
        edu.kit.ipd.sdq.eventsim.launch.runconfig.EventSimWorkflowConfiguration r1;
        java.util.List r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.launch.workflow.jobs.StartSimulationJob;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.launch.runconfig.EventSimWorkflowConfiguration;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<de.uka.ipd.sdq.workflow.extension.AbstractExtendableJob: void <init>()>();

        r0.<edu.kit.ipd.sdq.eventsim.launch.workflow.jobs.StartSimulationJob: edu.kit.ipd.sdq.eventsim.launch.runconfig.EventSimWorkflowConfiguration workflowConfiguration> = r1;

        r0.<edu.kit.ipd.sdq.eventsim.launch.workflow.jobs.StartSimulationJob: java.util.List metadata> = r2;

        return;
    }

    public void execute(org.eclipse.core.runtime.IProgressMonitor) throws de.uka.ipd.sdq.workflow.jobs.JobFailedException, de.uka.ipd.sdq.workflow.jobs.UserCanceledException
    {
        edu.kit.ipd.sdq.eventsim.launch.workflow.jobs.StartSimulationJob r0;
        org.eclipse.core.runtime.IProgressMonitor r1;
        edu.kit.ipd.sdq.eventsim.SimulationConfiguration r2;
        edu.kit.ipd.sdq.eventsim.api.PCMModel r3;
        edu.kit.ipd.sdq.eventsim.instrumentation.description.core.InstrumentationDescription r4;
        com.google.inject.Injector r5;
        edu.kit.ipd.sdq.eventsim.modules.SimulationModuleRegistry r6;
        java.util.Iterator r7;
        edu.kit.ipd.sdq.eventsim.launch.runconfig.EventSimWorkflowConfiguration $r8;
        com.google.inject.Module[] $r9;
        com.google.inject.Module $r10;
        java.lang.Object $r11, $r13, $r18, $r20;
        java.util.List $r12, $r17, $r21;
        boolean $z0, $z1;
        java.lang.Class $r14, $r15;
        edu.kit.ipd.sdq.eventsim.launch.SimulationManager $r19;
        edu.kit.ipd.sdq.eventsim.modules.SimulationModule r22;
        edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage r23;
        edu.kit.ipd.sdq.eventsim.launch.SimulationDockWrapper r24;

        r0 := @this: edu.kit.ipd.sdq.eventsim.launch.workflow.jobs.StartSimulationJob;

        r1 := @parameter0: org.eclipse.core.runtime.IProgressMonitor;

        $r8 = r0.<edu.kit.ipd.sdq.eventsim.launch.workflow.jobs.StartSimulationJob: edu.kit.ipd.sdq.eventsim.launch.runconfig.EventSimWorkflowConfiguration workflowConfiguration>;

        r2 = virtualinvoke $r8.<edu.kit.ipd.sdq.eventsim.launch.runconfig.EventSimWorkflowConfiguration: edu.kit.ipd.sdq.eventsim.SimulationConfiguration getSimulationConfiguration()>();

        r3 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.launch.workflow.jobs.StartSimulationJob: edu.kit.ipd.sdq.eventsim.api.PCMModel loadModelFromBlackboard()>();

        virtualinvoke r2.<edu.kit.ipd.sdq.eventsim.SimulationConfiguration: void setModel(edu.kit.ipd.sdq.eventsim.api.PCMModel)>(r3);

        r4 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.launch.workflow.jobs.StartSimulationJob: edu.kit.ipd.sdq.eventsim.instrumentation.description.core.InstrumentationDescription loadInstrumentationDesciptionFromXML()>();

        virtualinvoke r2.<edu.kit.ipd.sdq.eventsim.SimulationConfiguration: void setInstrumentationDescription(edu.kit.ipd.sdq.eventsim.instrumentation.description.core.InstrumentationDescription)>(r4);

        $r9 = newarray (com.google.inject.Module)[1];

        $r10 = staticinvoke <edu.kit.ipd.sdq.eventsim.launch.ExtendableSimulationModule: com.google.inject.Module create(edu.kit.ipd.sdq.eventsim.api.ISimulationConfiguration,edu.kit.ipd.sdq.eventsim.instrumentation.description.core.InstrumentationDescription)>(r2, r4);

        $r9[0] = $r10;

        r5 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r9);

        $r11 = interfaceinvoke r5.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Ledu/kit/ipd/sdq/eventsim/modules/SimulationModuleRegistry;");

        r6 = (edu.kit.ipd.sdq.eventsim.modules.SimulationModuleRegistry) $r11;

        $r12 = virtualinvoke r6.<edu.kit.ipd.sdq.eventsim.modules.SimulationModuleRegistry: java.util.List getModules()>();

        r7 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r13 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r22 = (edu.kit.ipd.sdq.eventsim.modules.SimulationModule) $r13;

        $z0 = virtualinvoke r22.<edu.kit.ipd.sdq.eventsim.modules.SimulationModule: boolean isEnabled()>();

        if $z0 == 0 goto label2;

        $r14 = virtualinvoke r22.<edu.kit.ipd.sdq.eventsim.modules.SimulationModule: java.lang.Class getEntryPoint()>();

        if $r14 == null goto label2;

        $r15 = virtualinvoke r22.<edu.kit.ipd.sdq.eventsim.modules.SimulationModule: java.lang.Class getEntryPoint()>();

        interfaceinvoke r5.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>($r15);

     label2:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        $r17 = r0.<edu.kit.ipd.sdq.eventsim.launch.workflow.jobs.StartSimulationJob: java.util.List metadata>;

        if $r17 == null goto label3;

        $r20 = interfaceinvoke r5.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Ledu/kit/ipd/sdq/eventsim/measurement/MeasurementStorage;");

        r23 = (edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage) $r20;

        $r21 = r0.<edu.kit.ipd.sdq.eventsim.launch.workflow.jobs.StartSimulationJob: java.util.List metadata>;

        interfaceinvoke r23.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage: void addMetadata(java.util.List)>($r21);

     label3:
        r24 = staticinvoke <edu.kit.ipd.sdq.eventsim.launch.SimulationDockWrapper: edu.kit.ipd.sdq.eventsim.launch.SimulationDockWrapper getBestFreeDock()>();

        virtualinvoke r24.<edu.kit.ipd.sdq.eventsim.launch.SimulationDockWrapper: void start()>();

        $r18 = interfaceinvoke r5.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Ledu/kit/ipd/sdq/eventsim/launch/SimulationManager;");

        $r19 = (edu.kit.ipd.sdq.eventsim.launch.SimulationManager) $r18;

        virtualinvoke $r19.<edu.kit.ipd.sdq.eventsim.launch.SimulationManager: void startSimulation(de.uka.ipd.sdq.simulation.IStatusObserver)>(r24);

        virtualinvoke r24.<edu.kit.ipd.sdq.eventsim.launch.SimulationDockWrapper: void stop()>();

        specialinvoke r0.<de.uka.ipd.sdq.workflow.extension.AbstractExtendableJob: void execute(org.eclipse.core.runtime.IProgressMonitor)>(r1);

        return;
    }

    private edu.kit.ipd.sdq.eventsim.instrumentation.description.core.InstrumentationDescription loadInstrumentationDesciptionFromXML()
    {
        edu.kit.ipd.sdq.eventsim.launch.workflow.jobs.StartSimulationJob r0;
        edu.kit.ipd.sdq.eventsim.launch.runconfig.EventSimWorkflowConfiguration $r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.net.URL $r5;
        edu.kit.ipd.sdq.eventsim.instrumentation.xml.DescriptionToXmlParser $r6;
        java.io.InputStream $r7;
        java.lang.Exception $r8;
        edu.kit.ipd.sdq.eventsim.exceptions.unchecked.EventSimException $r9;
        java.lang.String r10;
        edu.kit.ipd.sdq.eventsim.instrumentation.description.core.InstrumentationDescription r11;

        r0 := @this: edu.kit.ipd.sdq.eventsim.launch.workflow.jobs.StartSimulationJob;

     label1:
        $r2 = r0.<edu.kit.ipd.sdq.eventsim.launch.workflow.jobs.StartSimulationJob: edu.kit.ipd.sdq.eventsim.launch.runconfig.EventSimWorkflowConfiguration workflowConfiguration>;

        $r3 = virtualinvoke $r2.<edu.kit.ipd.sdq.eventsim.launch.runconfig.EventSimWorkflowConfiguration: java.util.Map getAttributes()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("instrumentationFile");

        r10 = (java.lang.String) $r4;

        $r5 = new java.net.URL;

        specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>(r10);

        $r6 = new edu.kit.ipd.sdq.eventsim.instrumentation.xml.DescriptionToXmlParser;

        specialinvoke $r6.<edu.kit.ipd.sdq.eventsim.instrumentation.xml.DescriptionToXmlParser: void <init>()>();

        $r7 = virtualinvoke $r5.<java.net.URL: java.io.InputStream openStream()>();

        r11 = virtualinvoke $r6.<edu.kit.ipd.sdq.eventsim.instrumentation.xml.DescriptionToXmlParser: edu.kit.ipd.sdq.eventsim.instrumentation.description.core.InstrumentationDescription readFromInputStream(java.io.InputStream)>($r7);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new edu.kit.ipd.sdq.eventsim.exceptions.unchecked.EventSimException;

        specialinvoke $r9.<edu.kit.ipd.sdq.eventsim.exceptions.unchecked.EventSimException: void <init>(java.lang.String,java.lang.Throwable)>("Could not read default instrumentation description", $r8);

        throw $r9;

     label4:
        return r11;

        catch javax.xml.bind.JAXBException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label3;
    }

    private edu.kit.ipd.sdq.eventsim.api.PCMModel loadModelFromBlackboard()
    {
        edu.kit.ipd.sdq.eventsim.launch.workflow.jobs.StartSimulationJob r0;
        org.palladiosimulator.analyzer.workflow.blackboard.PCMResourceSetPartition r1;
        de.uka.ipd.sdq.workflow.blackboard.Blackboard $r3;
        de.uka.ipd.sdq.workflow.mdsd.blackboard.MDSDBlackboard $r4;
        java.lang.Object $r5, $r9;
        edu.kit.ipd.sdq.eventsim.api.PCMModel $r6;
        org.palladiosimulator.pcm.allocation.Allocation $r7;
        java.util.List $r8;
        org.palladiosimulator.pcm.repository.Repository $r10;
        org.palladiosimulator.pcm.resourceenvironment.ResourceEnvironment $r11;
        org.palladiosimulator.pcm.system.System $r12;
        org.palladiosimulator.pcm.usagemodel.UsageModel $r13;
        org.palladiosimulator.pcm.resourcetype.ResourceRepository $r14;

        r0 := @this: edu.kit.ipd.sdq.eventsim.launch.workflow.jobs.StartSimulationJob;

        $r3 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.launch.workflow.jobs.StartSimulationJob: de.uka.ipd.sdq.workflow.blackboard.Blackboard getBlackboard()>();

        $r4 = (de.uka.ipd.sdq.workflow.mdsd.blackboard.MDSDBlackboard) $r3;

        $r5 = virtualinvoke $r4.<de.uka.ipd.sdq.workflow.mdsd.blackboard.MDSDBlackboard: java.lang.Object getPartition(java.lang.String)>("org.palladiosimulator.pcmmodels.partition");

        r1 = (org.palladiosimulator.analyzer.workflow.blackboard.PCMResourceSetPartition) $r5;

        $r6 = new edu.kit.ipd.sdq.eventsim.api.PCMModel;

        $r7 = virtualinvoke r1.<org.palladiosimulator.analyzer.workflow.blackboard.PCMResourceSetPartition: org.palladiosimulator.pcm.allocation.Allocation getAllocation()>();

        $r8 = virtualinvoke r1.<org.palladiosimulator.analyzer.workflow.blackboard.PCMResourceSetPartition: java.util.List getRepositories()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);

        $r10 = (org.palladiosimulator.pcm.repository.Repository) $r9;

        $r11 = virtualinvoke r1.<org.palladiosimulator.analyzer.workflow.blackboard.PCMResourceSetPartition: org.palladiosimulator.pcm.resourceenvironment.ResourceEnvironment getResourceEnvironment()>();

        $r12 = virtualinvoke r1.<org.palladiosimulator.analyzer.workflow.blackboard.PCMResourceSetPartition: org.palladiosimulator.pcm.system.System getSystem()>();

        $r13 = virtualinvoke r1.<org.palladiosimulator.analyzer.workflow.blackboard.PCMResourceSetPartition: org.palladiosimulator.pcm.usagemodel.UsageModel getUsageModel()>();

        $r14 = virtualinvoke r1.<org.palladiosimulator.analyzer.workflow.blackboard.PCMResourceSetPartition: org.palladiosimulator.pcm.resourcetype.ResourceRepository getResourceTypeRepository()>();

        specialinvoke $r6.<edu.kit.ipd.sdq.eventsim.api.PCMModel: void <init>(org.palladiosimulator.pcm.allocation.Allocation,org.palladiosimulator.pcm.repository.Repository,org.palladiosimulator.pcm.resourceenvironment.ResourceEnvironment,org.palladiosimulator.pcm.system.System,org.palladiosimulator.pcm.usagemodel.UsageModel,org.palladiosimulator.pcm.resourcetype.ResourceRepository)>($r7, $r10, $r11, $r12, $r13, $r14);

        return $r6;
    }
}
