public class edu.kit.ipd.sdq.eventsim.measurement.r.launch.DummyRecorder extends java.lang.Object implements org.palladiosimulator.recorderframework.IRecorder
{

    public void <init>()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.launch.DummyRecorder r0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.launch.DummyRecorder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void initialize(org.palladiosimulator.recorderframework.config.IRecorderConfiguration)
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.launch.DummyRecorder r0;
        org.palladiosimulator.recorderframework.config.IRecorderConfiguration r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.launch.DummyRecorder;

        r1 := @parameter0: org.palladiosimulator.recorderframework.config.IRecorderConfiguration;

        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.measurement.r.launch.DummyRecorder: void throwUnsupportedException()>();

        return;
    }

    public void writeData(org.palladiosimulator.measurementframework.MeasuringValue)
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.launch.DummyRecorder r0;
        org.palladiosimulator.measurementframework.MeasuringValue r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.launch.DummyRecorder;

        r1 := @parameter0: org.palladiosimulator.measurementframework.MeasuringValue;

        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.measurement.r.launch.DummyRecorder: void throwUnsupportedException()>();

        return;
    }

    public void flush()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.launch.DummyRecorder r0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.launch.DummyRecorder;

        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.measurement.r.launch.DummyRecorder: void throwUnsupportedException()>();

        return;
    }

    public void newMeasurementAvailable(org.palladiosimulator.measurementframework.MeasuringValue)
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.launch.DummyRecorder r0;
        org.palladiosimulator.measurementframework.MeasuringValue r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.launch.DummyRecorder;

        r1 := @parameter0: org.palladiosimulator.measurementframework.MeasuringValue;

        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.measurement.r.launch.DummyRecorder: void throwUnsupportedException()>();

        return;
    }

    public void preUnregister()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.launch.DummyRecorder r0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.launch.DummyRecorder;

        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.measurement.r.launch.DummyRecorder: void throwUnsupportedException()>();

        return;
    }

    private void throwUnsupportedException()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.launch.DummyRecorder r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.launch.DummyRecorder;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The R Project Recorder can only be used together with EventSim.");

        throw $r1;
    }
}
