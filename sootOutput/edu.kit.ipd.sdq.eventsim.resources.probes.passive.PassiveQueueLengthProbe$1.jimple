class edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe$1 extends java.lang.Object implements edu.kit.ipd.sdq.eventsim.resources.listener.IPassiveResourceListener
{
    final edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe this$0;
    private final edu.kit.ipd.sdq.eventsim.resources.entities.SimPassiveResource val$resource;

    void <init>(edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe, edu.kit.ipd.sdq.eventsim.resources.entities.SimPassiveResource)
    {
        edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe$1 r0;
        edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe r1;
        edu.kit.ipd.sdq.eventsim.resources.entities.SimPassiveResource r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe$1;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe;

        r2 := @parameter1: edu.kit.ipd.sdq.eventsim.resources.entities.SimPassiveResource;

        r0.<edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe$1: edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe this$0> = r1;

        r0.<edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe$1: edu.kit.ipd.sdq.eventsim.resources.entities.SimPassiveResource val$resource> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void request(edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess, long)
    {
        edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe$1 r0;
        edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess r1;
        long l0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe$1;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess;

        l0 := @parameter1: long;

        return;
    }

    public void release(edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess, long)
    {
        edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe$1 r0;
        edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess r1;
        long l0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe$1;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess;

        l0 := @parameter1: long;

        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe$1: void queueLengthChanged(edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess,long)>(r1, l0);

        return;
    }

    public void acquire(edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess, long)
    {
        edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe$1 r0;
        edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess r1;
        long l0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe$1;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess;

        l0 := @parameter1: long;

        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe$1: void queueLengthChanged(edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess,long)>(r1, l0);

        return;
    }

    private void queueLengthChanged(edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess, long)
    {
        edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe$1 r0;
        edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess r1;
        long l0, l1, $l2, $l3;
        double d0, $d1;
        de.uka.ipd.sdq.simulation.abstractsimengine.ISimulationModel $r3;
        de.uka.ipd.sdq.simulation.abstractsimengine.ISimulationControl $r4;
        edu.kit.ipd.sdq.eventsim.resources.entities.SimPassiveResource $r5, $r6, $r11;
        edu.kit.ipd.sdq.eventsim.measurement.Measurement $r7;
        edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe $r8, $r15;
        edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint $r9, $r13;
        java.lang.Object[] $r10;
        org.palladiosimulator.pcm.core.composition.AssemblyContext $r12;
        edu.kit.ipd.sdq.eventsim.measurement.Metadata[] $r14;
        java.util.List $r16;
        java.util.function.Consumer $r17;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe$1;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess;

        l0 := @parameter1: long;

        $r3 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess: de.uka.ipd.sdq.simulation.abstractsimengine.ISimulationModel getModel()>();

        $r4 = interfaceinvoke $r3.<de.uka.ipd.sdq.simulation.abstractsimengine.ISimulationModel: de.uka.ipd.sdq.simulation.abstractsimengine.ISimulationControl getSimulationControl()>();

        d0 = interfaceinvoke $r4.<de.uka.ipd.sdq.simulation.abstractsimengine.ISimulationControl: double getCurrentSimulationTime()>();

        $r5 = r0.<edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe$1: edu.kit.ipd.sdq.eventsim.resources.entities.SimPassiveResource val$resource>;

        $l2 = virtualinvoke $r5.<edu.kit.ipd.sdq.eventsim.resources.entities.SimPassiveResource: long getCapacity()>();

        $r6 = r0.<edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe$1: edu.kit.ipd.sdq.eventsim.resources.entities.SimPassiveResource val$resource>;

        $l3 = virtualinvoke $r6.<edu.kit.ipd.sdq.eventsim.resources.entities.SimPassiveResource: long getAvailable()>();

        l1 = $l2 - $l3;

        $r7 = new edu.kit.ipd.sdq.eventsim.measurement.Measurement;

        $r8 = r0.<edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe$1: edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe this$0>;

        $r9 = virtualinvoke $r8.<edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe: edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint getMeasuringPoint()>();

        $r10 = newarray (java.lang.Object)[1];

        $r11 = r0.<edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe$1: edu.kit.ipd.sdq.eventsim.resources.entities.SimPassiveResource val$resource>;

        $r12 = virtualinvoke $r11.<edu.kit.ipd.sdq.eventsim.resources.entities.SimPassiveResource: org.palladiosimulator.pcm.core.composition.AssemblyContext getAssemblyContext()>();

        $r10[0] = $r12;

        $r13 = virtualinvoke $r9.<edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint: edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint withAddedContexts(java.lang.Object[])>($r10);

        $d1 = (double) l1;

        $r14 = newarray (edu.kit.ipd.sdq.eventsim.measurement.Metadata)[0];

        specialinvoke $r7.<edu.kit.ipd.sdq.eventsim.measurement.Measurement: void <init>(java.lang.Object,edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint,java.lang.Object,double,double,edu.kit.ipd.sdq.eventsim.measurement.Metadata[])>("QUEUE_LENGTH", $r13, null, $d1, d0, $r14);

        $r15 = r0.<edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe$1: edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe this$0>;

        $r16 = staticinvoke <edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe: java.util.List access$0(edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe)>($r15);

        $r17 = staticinvoke <edu.kit.ipd.sdq.eventsim.resources.probes.passive.PassiveQueueLengthProbe$1$lambda_0__158: java.util.function.Consumer bootstrap$(edu.kit.ipd.sdq.eventsim.measurement.Measurement)>($r7);

        interfaceinvoke $r16.<java.util.List: void forEach(java.util.function.Consumer)>($r17);

        return;
    }

    public static void lambda$0(edu.kit.ipd.sdq.eventsim.measurement.Measurement, edu.kit.ipd.sdq.eventsim.measurement.MeasurementListener)
    {
        edu.kit.ipd.sdq.eventsim.measurement.Measurement r0;
        edu.kit.ipd.sdq.eventsim.measurement.MeasurementListener r1;

        r0 := @parameter0: edu.kit.ipd.sdq.eventsim.measurement.Measurement;

        r1 := @parameter1: edu.kit.ipd.sdq.eventsim.measurement.MeasurementListener;

        interfaceinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementListener: void notify(edu.kit.ipd.sdq.eventsim.measurement.Measurement)>(r0);

        return;
    }
}
