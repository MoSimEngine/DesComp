public class edu.kit.ipd.sdq.eventsim.measurement.calculator.CalculatorBuilder extends java.lang.Object implements edu.kit.ipd.sdq.eventsim.measurement.calculator.IntermediateCalculatorFrom, edu.kit.ipd.sdq.eventsim.measurement.calculator.IntermediateCalculatorTo
{
    private edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe fromProbe;
    private edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe toProbe;
    private edu.kit.ipd.sdq.eventsim.measurement.calculator.BinaryCalculator c;
    private edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade measurementFacade;

    private void <init>(edu.kit.ipd.sdq.eventsim.measurement.calculator.BinaryCalculator, edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade)
    {
        edu.kit.ipd.sdq.eventsim.measurement.calculator.CalculatorBuilder r0;
        edu.kit.ipd.sdq.eventsim.measurement.calculator.BinaryCalculator r1;
        edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.calculator.CalculatorBuilder;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.measurement.calculator.BinaryCalculator;

        r2 := @parameter1: edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<edu.kit.ipd.sdq.eventsim.measurement.calculator.CalculatorBuilder: edu.kit.ipd.sdq.eventsim.measurement.calculator.BinaryCalculator c> = r1;

        r0.<edu.kit.ipd.sdq.eventsim.measurement.calculator.CalculatorBuilder: edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade measurementFacade> = r2;

        return;
    }

    public transient edu.kit.ipd.sdq.eventsim.measurement.calculator.IntermediateCalculatorTo 'from'(java.lang.Object, java.lang.String, java.lang.Object[])
    {
        edu.kit.ipd.sdq.eventsim.measurement.calculator.CalculatorBuilder r0;
        java.lang.Object r1;
        java.lang.String r2;
        java.lang.Object[] r3;
        edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade $r4;
        edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe $r5;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.calculator.CalculatorBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r4 = r0.<edu.kit.ipd.sdq.eventsim.measurement.calculator.CalculatorBuilder: edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade measurementFacade>;

        $r5 = virtualinvoke $r4.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade: edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe createProbe(java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        r0.<edu.kit.ipd.sdq.eventsim.measurement.calculator.CalculatorBuilder: edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe fromProbe> = $r5;

        return r0;
    }

    public transient edu.kit.ipd.sdq.eventsim.measurement.calculator.BinaryCalculator 'to'(java.lang.Object, java.lang.String, java.lang.Object[])
    {
        edu.kit.ipd.sdq.eventsim.measurement.calculator.CalculatorBuilder r0;
        java.lang.Object r1;
        java.lang.String r2;
        java.lang.Object[] r3;
        edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade $r4;
        edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe $r5, $r6, $r7;
        edu.kit.ipd.sdq.eventsim.measurement.calculator.BinaryCalculator $r8, $r9;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.calculator.CalculatorBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r4 = r0.<edu.kit.ipd.sdq.eventsim.measurement.calculator.CalculatorBuilder: edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade measurementFacade>;

        $r5 = virtualinvoke $r4.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade: edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe createProbe(java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        r0.<edu.kit.ipd.sdq.eventsim.measurement.calculator.CalculatorBuilder: edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe toProbe> = $r5;

        $r8 = r0.<edu.kit.ipd.sdq.eventsim.measurement.calculator.CalculatorBuilder: edu.kit.ipd.sdq.eventsim.measurement.calculator.BinaryCalculator c>;

        $r7 = r0.<edu.kit.ipd.sdq.eventsim.measurement.calculator.CalculatorBuilder: edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe fromProbe>;

        $r6 = r0.<edu.kit.ipd.sdq.eventsim.measurement.calculator.CalculatorBuilder: edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe toProbe>;

        interfaceinvoke $r8.<edu.kit.ipd.sdq.eventsim.measurement.calculator.BinaryCalculator: void setup(edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe,edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe)>($r7, $r6);

        $r9 = r0.<edu.kit.ipd.sdq.eventsim.measurement.calculator.CalculatorBuilder: edu.kit.ipd.sdq.eventsim.measurement.calculator.BinaryCalculator c>;

        return $r9;
    }

    public static edu.kit.ipd.sdq.eventsim.measurement.calculator.IntermediateCalculatorFrom create(edu.kit.ipd.sdq.eventsim.measurement.calculator.BinaryCalculator, edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade)
    {
        edu.kit.ipd.sdq.eventsim.measurement.calculator.BinaryCalculator r0;
        edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade r1;
        edu.kit.ipd.sdq.eventsim.measurement.calculator.CalculatorBuilder $r2;

        r0 := @parameter0: edu.kit.ipd.sdq.eventsim.measurement.calculator.BinaryCalculator;

        r1 := @parameter1: edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade;

        $r2 = new edu.kit.ipd.sdq.eventsim.measurement.calculator.CalculatorBuilder;

        specialinvoke $r2.<edu.kit.ipd.sdq.eventsim.measurement.calculator.CalculatorBuilder: void <init>(edu.kit.ipd.sdq.eventsim.measurement.calculator.BinaryCalculator,edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade)>(r0, r1);

        return $r2;
    }
}
