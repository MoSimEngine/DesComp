public abstract class edu.kit.ipd.sdq.eventsim.modules.AbstractLaunchContribution extends org.eclipse.debug.ui.AbstractLaunchConfigurationTab implements edu.kit.ipd.sdq.eventsim.modules.ILaunchContribution
{
    private java.util.List dirtyListeners;

    public void <init>()
    {
        edu.kit.ipd.sdq.eventsim.modules.AbstractLaunchContribution r0;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.modules.AbstractLaunchContribution;

        specialinvoke r0.<org.eclipse.debug.ui.AbstractLaunchConfigurationTab: void <init>()>();

        $r1 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<edu.kit.ipd.sdq.eventsim.modules.AbstractLaunchContribution: java.util.List dirtyListeners> = $r1;

        return;
    }

    public void addDirtyListener(java.util.Observer)
    {
        edu.kit.ipd.sdq.eventsim.modules.AbstractLaunchContribution r0;
        java.util.Observer r1;
        java.util.List $r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.modules.AbstractLaunchContribution;

        r1 := @parameter0: java.util.Observer;

        $r2 = r0.<edu.kit.ipd.sdq.eventsim.modules.AbstractLaunchContribution: java.util.List dirtyListeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeDirtyListener(java.util.Observer)
    {
        edu.kit.ipd.sdq.eventsim.modules.AbstractLaunchContribution r0;
        java.util.Observer r1;
        java.util.List $r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.modules.AbstractLaunchContribution;

        r1 := @parameter0: java.util.Observer;

        $r2 = r0.<edu.kit.ipd.sdq.eventsim.modules.AbstractLaunchContribution: java.util.List dirtyListeners>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return;
    }

    protected void setDirty(boolean)
    {
        edu.kit.ipd.sdq.eventsim.modules.AbstractLaunchContribution r0;
        boolean z0;
        java.util.List $r1;
        java.util.function.Consumer $r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.modules.AbstractLaunchContribution;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.eclipse.debug.ui.AbstractLaunchConfigurationTab: void setDirty(boolean)>(z0);

        $r1 = r0.<edu.kit.ipd.sdq.eventsim.modules.AbstractLaunchContribution: java.util.List dirtyListeners>;

        $r2 = staticinvoke <edu.kit.ipd.sdq.eventsim.modules.AbstractLaunchContribution$lambda_0__130: java.util.function.Consumer bootstrap$()>();

        interfaceinvoke $r1.<java.util.List: void forEach(java.util.function.Consumer)>($r2);

        return;
    }

    public java.lang.String getName()
    {
        edu.kit.ipd.sdq.eventsim.modules.AbstractLaunchContribution r0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.modules.AbstractLaunchContribution;

        return null;
    }

    public void dispose()
    {
        edu.kit.ipd.sdq.eventsim.modules.AbstractLaunchContribution r0;
        java.util.List $r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.modules.AbstractLaunchContribution;

        $r1 = r0.<edu.kit.ipd.sdq.eventsim.modules.AbstractLaunchContribution: java.util.List dirtyListeners>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public static void lambda$0(java.util.Observer)
    {
        java.util.Observer r0;

        r0 := @parameter0: java.util.Observer;

        interfaceinvoke r0.<java.util.Observer: void update(java.util.Observable,java.lang.Object)>(null, null);

        return;
    }
}
