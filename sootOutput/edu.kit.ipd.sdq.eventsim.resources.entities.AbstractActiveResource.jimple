public abstract class edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource extends edu.kit.ipd.sdq.eventsim.entities.EventSimEntity
{
    private static final org.apache.log4j.Logger logger;
    protected final de.uka.ipd.sdq.scheduler.IActiveResource schedulerResource;
    private final int numberOfInstances;
    private final java.util.Map stateListener;
    private final java.util.List demandListener;
    private final org.palladiosimulator.pcm.resourcetype.SchedulingPolicy schedulingStrategy;
    private final java.util.Set registeredProcesses;
    private long[] queueLength;

    static void <clinit>()
    {
        org.apache.log4j.Logger $r0;

        $r0 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>(class "Ledu/kit/ipd/sdq/eventsim/resources/entities/AbstractActiveResource;");

        <edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: org.apache.log4j.Logger logger> = $r0;

        return;
    }

    public void <init>(de.uka.ipd.sdq.simulation.abstractsimengine.ISimulationModel, java.lang.String, de.uka.ipd.sdq.scheduler.IActiveResource, org.palladiosimulator.pcm.resourcetype.SchedulingPolicy, int)
    {
        edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource r0;
        de.uka.ipd.sdq.simulation.abstractsimengine.ISimulationModel r1;
        java.lang.String r2;
        de.uka.ipd.sdq.scheduler.IActiveResource r3;
        org.palladiosimulator.pcm.resourcetype.SchedulingPolicy r4;
        int i0, i1;
        java.util.HashMap $r5;
        java.util.Map $r6;
        java.lang.Integer $r7;
        java.util.ArrayList $r8, $r10;
        long[] $r11;
        java.util.HashSet $r12;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource;

        r1 := @parameter0: de.uka.ipd.sdq.simulation.abstractsimengine.ISimulationModel;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: de.uka.ipd.sdq.scheduler.IActiveResource;

        r4 := @parameter3: org.palladiosimulator.pcm.resourcetype.SchedulingPolicy;

        i0 := @parameter4: int;

        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.entities.EventSimEntity: void <init>(de.uka.ipd.sdq.simulation.abstractsimengine.ISimulationModel,java.lang.String)>(r1, r2);

        r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: de.uka.ipd.sdq.scheduler.IActiveResource schedulerResource> = r3;

        r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: org.palladiosimulator.pcm.resourcetype.SchedulingPolicy schedulingStrategy> = r4;

        r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: int numberOfInstances> = i0;

        virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: void setupStateListenerAdapter(de.uka.ipd.sdq.scheduler.IActiveResource)>(r3);

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: java.util.Map stateListener> = $r5;

        i1 = 0;

        goto label2;

     label1:
        $r6 = r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: java.util.Map stateListener>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: java.util.List demandListener> = $r10;

        $r11 = newarray (long)[i0];

        r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: long[] queueLength> = $r11;

        $r12 = new java.util.HashSet;

        specialinvoke $r12.<java.util.HashSet: void <init>()>();

        r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: java.util.Set registeredProcesses> = $r12;

        return;
    }

    protected void setupStateListenerAdapter(de.uka.ipd.sdq.scheduler.IActiveResource)
    {
        edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource r0;
        de.uka.ipd.sdq.scheduler.IActiveResource r1;
        edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource$1 $r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource;

        r1 := @parameter0: de.uka.ipd.sdq.scheduler.IActiveResource;

        $r2 = new edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource$1;

        specialinvoke $r2.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource$1: void <init>(edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource)>(r0);

        interfaceinvoke r1.<de.uka.ipd.sdq.scheduler.IActiveResource: void addObserver(de.uka.ipd.sdq.scheduler.sensors.IActiveResourceStateSensor)>($r2);

        return;
    }

    public void consumeResource(edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess, double, int, edu.kit.ipd.sdq.eventsim.api.Procedure)
    {
        edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource r0;
        edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess r1;
        double d0, d1;
        int i0;
        edu.kit.ipd.sdq.eventsim.api.Procedure r2;
        org.apache.log4j.Logger $r3, $r10;
        boolean $z0, $z1;
        java.util.Set $r4, $r8;
        de.uka.ipd.sdq.scheduler.IActiveResource $r5, $r7, $r11;
        java.util.Map $r6;
        java.lang.StringBuilder $r9, $r12, $r13, $r14;
        java.lang.String $r15;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess;

        d0 := @parameter1: double;

        i0 := @parameter2: int;

        r2 := @parameter3: edu.kit.ipd.sdq.eventsim.api.Procedure;

        $r3 = <edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: org.apache.log4j.Logger logger>;

        $z0 = virtualinvoke $r3.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r10 = <edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: org.apache.log4j.Logger logger>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Requested resource ");

        $r11 = r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: de.uka.ipd.sdq.scheduler.IActiveResource schedulerResource>;

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with an abstract demand of ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<org.apache.log4j.Logger: void debug(java.lang.Object)>($r15);

     label1:
        d1 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: double calculateConcreteDemand(double,int)>(d0, i0);

        $r4 = r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: java.util.Set registeredProcesses>;

        $z1 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        $r7 = r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: de.uka.ipd.sdq.scheduler.IActiveResource schedulerResource>;

        interfaceinvoke $r7.<de.uka.ipd.sdq.scheduler.IActiveResource: void registerProcess(de.uka.ipd.sdq.scheduler.ISchedulableProcess)>(r1);

        $r8 = r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: java.util.Set registeredProcesses>;

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>(r1);

     label2:
        virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess: void setOnActivationCallback(edu.kit.ipd.sdq.eventsim.api.Procedure)>(r2);

        $r5 = r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: de.uka.ipd.sdq.scheduler.IActiveResource schedulerResource>;

        $r6 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        interfaceinvoke $r5.<de.uka.ipd.sdq.scheduler.IActiveResource: void process(de.uka.ipd.sdq.scheduler.ISchedulableProcess,int,java.util.Map,double)>(r1, i0, $r6, d1);

        virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: void fireDemand(de.uka.ipd.sdq.scheduler.ISchedulableProcess,double,int)>(r1, d1, i0);

        return;
    }

    protected abstract double calculateConcreteDemand(double, int);

    public int getNumberOfInstances()
    {
        edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource r0;
        int $i0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource;

        $i0 = r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: int numberOfInstances>;

        return $i0;
    }

    public long getQueueLength(int)
    {
        edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource r0;
        int i0;
        long[] $r1;
        long $l1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource;

        i0 := @parameter0: int;

        $r1 = r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: long[] queueLength>;

        $l1 = $r1[i0];

        return $l1;
    }

    public org.palladiosimulator.pcm.resourcetype.SchedulingPolicy getSchedulingStrategy()
    {
        edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource r0;
        org.palladiosimulator.pcm.resourcetype.SchedulingPolicy $r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource;

        $r1 = r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: org.palladiosimulator.pcm.resourcetype.SchedulingPolicy schedulingStrategy>;

        return $r1;
    }

    public void addDemandListener(edu.kit.ipd.sdq.eventsim.resources.listener.IDemandListener)
    {
        edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource r0;
        edu.kit.ipd.sdq.eventsim.resources.listener.IDemandListener r1;
        java.util.List $r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.resources.listener.IDemandListener;

        $r2 = r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: java.util.List demandListener>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addStateListener(edu.kit.ipd.sdq.eventsim.resources.listener.IStateListener, int)
    {
        edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource r0;
        edu.kit.ipd.sdq.eventsim.resources.listener.IStateListener r1;
        int i0;
        java.util.Map $r2;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        java.util.List $r5;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.resources.listener.IStateListener;

        i0 := @parameter1: int;

        $r2 = r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: java.util.Map stateListener>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.util.List) $r4;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    protected void fireDemand(de.uka.ipd.sdq.scheduler.ISchedulableProcess, double, int)
    {
        edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource r0;
        de.uka.ipd.sdq.scheduler.ISchedulableProcess r1;
        double d0;
        int i0;
        edu.kit.ipd.sdq.eventsim.resources.listener.IDemandListener r2;
        java.util.Iterator r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource;

        r1 := @parameter0: de.uka.ipd.sdq.scheduler.ISchedulableProcess;

        d0 := @parameter1: double;

        i0 := @parameter2: int;

        $r4 = r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: java.util.List demandListener>;

        r3 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r2 = (edu.kit.ipd.sdq.eventsim.resources.listener.IDemandListener) $r5;

        interfaceinvoke r2.<edu.kit.ipd.sdq.eventsim.resources.listener.IDemandListener: void demand(de.uka.ipd.sdq.scheduler.ISchedulableProcess,double,int)>(r1, d0, i0);

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;
    }

    protected void fireStateEvent(long, int)
    {
        edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource r0;
        long l0;
        int i1;
        edu.kit.ipd.sdq.eventsim.resources.listener.IStateListener r1;
        java.util.Iterator r2;
        java.util.Map $r3;
        java.lang.Integer $r4;
        java.lang.Object $r5, $r7;
        java.util.List $r6;
        boolean $z0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r3 = r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: java.util.Map stateListener>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = (java.util.List) $r5;

        r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r1 = (edu.kit.ipd.sdq.eventsim.resources.listener.IStateListener) $r7;

        interfaceinvoke r1.<edu.kit.ipd.sdq.eventsim.resources.listener.IStateListener: void stateChanged(long,int)>(l0, i1);

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;
    }

    public void deactivateResource()
    {
        edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource r0;
        de.uka.ipd.sdq.scheduler.IActiveResource $r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource;

        $r1 = r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: de.uka.ipd.sdq.scheduler.IActiveResource schedulerResource>;

        interfaceinvoke $r1.<de.uka.ipd.sdq.scheduler.IActiveResource: void stop()>();

        return;
    }

    static long[] access$0(edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource)
    {
        edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource r0;
        long[] $r1;

        r0 := @parameter0: edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource;

        $r1 = r0.<edu.kit.ipd.sdq.eventsim.resources.entities.AbstractActiveResource: long[] queueLength>;

        return $r1;
    }
}
