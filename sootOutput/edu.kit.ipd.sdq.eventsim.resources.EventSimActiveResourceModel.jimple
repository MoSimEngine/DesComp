public class edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel extends java.lang.Object implements edu.kit.ipd.sdq.eventsim.api.IActiveResource
{
    private static final org.apache.log4j.Logger logger;
    private java.util.Map resourceInterfaceToTypeMap;
    private edu.kit.ipd.sdq.eventsim.instrumentation.injection.Instrumentor instrumentor;
    private edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage measurementStorage;
    private edu.kit.ipd.sdq.eventsim.api.PCMModel pcm;
    private edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade measurementFacade;
    private edu.kit.ipd.sdq.eventsim.instrumentation.description.core.InstrumentationDescription instrumentation;
    private edu.kit.ipd.sdq.eventsim.resources.ProcessRegistry processRegistry;
    private edu.kit.ipd.sdq.eventsim.resources.ActiveResourceRegistry resourceRegistry;

    static void <clinit>()
    {
        org.apache.log4j.Logger $r0;

        $r0 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>(class "Ledu/kit/ipd/sdq/eventsim/resources/EventSimActiveResourceModel;");

        <edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel: org.apache.log4j.Logger logger> = $r0;

        return;
    }

    public void <init>(edu.kit.ipd.sdq.eventsim.api.ISimulationMiddleware)
    {
        edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel r0;
        edu.kit.ipd.sdq.eventsim.api.ISimulationMiddleware r1;
        edu.kit.ipd.sdq.eventsim.api.events.IEventHandler $r2, $r3;
        java.util.HashMap $r4;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.api.ISimulationMiddleware;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel$lambda_0__177: edu.kit.ipd.sdq.eventsim.api.events.IEventHandler bootstrap$(edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel)>(r0);

        interfaceinvoke r1.<edu.kit.ipd.sdq.eventsim.api.ISimulationMiddleware: void registerEventHandler(java.lang.Class,edu.kit.ipd.sdq.eventsim.api.events.IEventHandler)>(class "Ledu/kit/ipd/sdq/eventsim/api/events/SimulationPrepareEvent;", $r2);

        $r3 = staticinvoke <edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel$lambda_1__179: edu.kit.ipd.sdq.eventsim.api.events.IEventHandler bootstrap$(edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel)>(r0);

        interfaceinvoke r1.<edu.kit.ipd.sdq.eventsim.api.ISimulationMiddleware: void registerEventHandler(java.lang.Class,edu.kit.ipd.sdq.eventsim.api.events.IEventHandler)>(class "Ledu/kit/ipd/sdq/eventsim/api/events/SimulationStopEvent;", $r3);

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel: java.util.Map resourceInterfaceToTypeMap> = $r4;

        return;
    }

    public void init()
    {
        edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel r0;
        org.osgi.framework.Bundle r1, $r17;
        org.osgi.framework.BundleContext $r2, $r16;
        edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade $r3, $r26;
        edu.kit.ipd.sdq.eventsim.resources.ResourceProbeConfiguration $r4;
        edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator $r5;
        edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage $r6, $r8, $r10, $r12, $r21;
        java.util.function.Function $r7, $r9, $r11, $r13;
        edu.kit.ipd.sdq.eventsim.api.PCMModel $r14;
        edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorBuilder $r15, $r18, $r20, $r22;
        edu.kit.ipd.sdq.eventsim.instrumentation.description.core.InstrumentationDescription $r19;
        edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorSEMBuilder $r23;
        edu.kit.ipd.sdq.eventsim.instrumentation.injection.SimulationElementMapping $r24;
        edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorInstantiator $r25;
        edu.kit.ipd.sdq.eventsim.instrumentation.injection.Instrumentor $r27;
        edu.kit.ipd.sdq.eventsim.resources.ActiveResourceRegistry $r28;
        java.util.function.Consumer $r29;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel;

        $r2 = staticinvoke <edu.kit.ipd.sdq.eventsim.resources.Activator: org.osgi.framework.BundleContext getContext()>();

        r1 = interfaceinvoke $r2.<org.osgi.framework.BundleContext: org.osgi.framework.Bundle getBundle()>();

        $r3 = new edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade;

        $r4 = new edu.kit.ipd.sdq.eventsim.resources.ResourceProbeConfiguration;

        specialinvoke $r4.<edu.kit.ipd.sdq.eventsim.resources.ResourceProbeConfiguration: void <init>()>();

        $r5 = new edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator;

        specialinvoke $r5.<edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator: void <init>(org.osgi.framework.Bundle)>(r1);

        specialinvoke $r3.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade: void <init>(edu.kit.ipd.sdq.eventsim.measurement.ProbeConfiguration,edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeLocator)>($r4, $r5);

        r0.<edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel: edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade measurementFacade> = $r3;

        $r6 = r0.<edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel: edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage measurementStorage>;

        $r7 = staticinvoke <edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel$lambda_2__178: java.util.function.Function bootstrap$()>();

        interfaceinvoke $r6.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage: void addIdExtractor(java.lang.Class,java.util.function.Function)>(class "Ledu/kit/ipd/sdq/eventsim/resources/entities/SimActiveResource;", $r7);

        $r8 = r0.<edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel: edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage measurementStorage>;

        $r9 = staticinvoke <edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel$lambda_3__180: java.util.function.Function bootstrap$()>();

        interfaceinvoke $r8.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage: void addNameExtractor(java.lang.Class,java.util.function.Function)>(class "Ledu/kit/ipd/sdq/eventsim/resources/entities/SimActiveResource;", $r9);

        $r10 = r0.<edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel: edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage measurementStorage>;

        $r11 = staticinvoke <edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel$lambda_4__181: java.util.function.Function bootstrap$()>();

        interfaceinvoke $r10.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage: void addIdExtractor(java.lang.Class,java.util.function.Function)>(class "Ledu/kit/ipd/sdq/eventsim/resources/entities/SimulatedProcess;", $r11);

        $r12 = r0.<edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel: edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage measurementStorage>;

        $r13 = staticinvoke <edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel$lambda_5__182: java.util.function.Function bootstrap$()>();

        interfaceinvoke $r12.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage: void addNameExtractor(java.lang.Class,java.util.function.Function)>(class "Ledu/kit/ipd/sdq/eventsim/resources/entities/SimulatedProcess;", $r13);

        $r14 = r0.<edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel: edu.kit.ipd.sdq.eventsim.api.PCMModel pcm>;

        $r15 = staticinvoke <edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorBuilder: edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorBuilder buildFor(edu.kit.ipd.sdq.eventsim.api.PCMModel)>($r14);

        $r16 = staticinvoke <edu.kit.ipd.sdq.eventsim.resources.Activator: org.osgi.framework.BundleContext getContext()>();

        $r17 = interfaceinvoke $r16.<org.osgi.framework.BundleContext: org.osgi.framework.Bundle getBundle()>();

        $r18 = virtualinvoke $r15.<edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorBuilder: edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorBuilder inBundle(org.osgi.framework.Bundle)>($r17);

        $r19 = r0.<edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel: edu.kit.ipd.sdq.eventsim.instrumentation.description.core.InstrumentationDescription instrumentation>;

        $r20 = virtualinvoke $r18.<edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorBuilder: edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorBuilder withDescription(edu.kit.ipd.sdq.eventsim.instrumentation.description.core.InstrumentationDescription)>($r19);

        $r21 = r0.<edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel: edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage measurementStorage>;

        $r22 = virtualinvoke $r20.<edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorBuilder: edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorBuilder withStorage(edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage)>($r21);

        $r23 = virtualinvoke $r22.<edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorBuilder: edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorSEMBuilder forModelType(java.lang.Class)>(class "Ledu/kit/ipd/sdq/eventsim/instrumentation/description/resource/ActiveResourceRep;");

        $r24 = staticinvoke <edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel$lambda_6__183: edu.kit.ipd.sdq.eventsim.instrumentation.injection.SimulationElementMapping bootstrap$()>();

        $r25 = virtualinvoke $r23.<edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorSEMBuilder: edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorInstantiator withMapping(edu.kit.ipd.sdq.eventsim.instrumentation.injection.SimulationElementMapping)>($r24);

        $r26 = r0.<edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel: edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade measurementFacade>;

        $r27 = virtualinvoke $r25.<edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorInstantiator: edu.kit.ipd.sdq.eventsim.instrumentation.injection.Instrumentor createFor(edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade)>($r26);

        r0.<edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel: edu.kit.ipd.sdq.eventsim.instrumentation.injection.Instrumentor instrumentor> = $r27;

        $r28 = r0.<edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel: edu.kit.ipd.sdq.eventsim.resources.ActiveResourceRegistry resourceRegistry>;

        $r29 = staticinvoke <edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel$lambda_7__184: java.util.function.Consumer bootstrap$(edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel)>(r0);

        virtualinvoke $r28.<edu.kit.ipd.sdq.eventsim.resources.ActiveResourceRegistry: void addResourceRegistrationListener(java.util.function.Consumer)>($r29);

        return;
    }

    public void consume(edu.kit.ipd.sdq.eventsim.api.IRequest, org.palladiosimulator.pcm.resourceenvironment.ResourceContainer, org.palladiosimulator.pcm.resourcetype.ResourceType, double, int, edu.kit.ipd.sdq.eventsim.api.Procedure)
    {
        edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel r0;
        edu.kit.ipd.sdq.eventsim.api.IRequest r1;
        org.palladiosimulator.pcm.resourceenvironment.ResourceContainer r2;
        org.palladiosimulator.pcm.resourcetype.ResourceType r3;
        double d0;
        int i0;
        edu.kit.ipd.sdq.eventsim.api.Procedure r4;
        edu.kit.ipd.sdq.eventsim.resources.entities.SimActiveResource r5;
        edu.kit.ipd.sdq.eventsim.resources.ActiveResourceRegistry $r6;
        edu.kit.ipd.sdq.eventsim.resources.ProcessRegistry $r7;
        edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess $r8;
        java.lang.RuntimeException $r9;
        java.lang.StringBuilder $r10, $r12;
        java.lang.String $r11, $r13;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.api.IRequest;

        r2 := @parameter1: org.palladiosimulator.pcm.resourceenvironment.ResourceContainer;

        r3 := @parameter2: org.palladiosimulator.pcm.resourcetype.ResourceType;

        d0 := @parameter3: double;

        i0 := @parameter4: int;

        r4 := @parameter5: edu.kit.ipd.sdq.eventsim.api.Procedure;

        $r6 = r0.<edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel: edu.kit.ipd.sdq.eventsim.resources.ActiveResourceRegistry resourceRegistry>;

        r5 = virtualinvoke $r6.<edu.kit.ipd.sdq.eventsim.resources.ActiveResourceRegistry: edu.kit.ipd.sdq.eventsim.resources.entities.SimActiveResource findOrCreateResource(org.palladiosimulator.pcm.resourceenvironment.ResourceContainer,org.palladiosimulator.pcm.resourcetype.ResourceType)>(r2, r3);

        if r5 != null goto label1;

        $r9 = new java.lang.RuntimeException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not find a resource of type ");

        $r11 = interfaceinvoke r3.<org.palladiosimulator.pcm.resourcetype.ResourceType: java.lang.String getEntityName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label1:
        $r7 = r0.<edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel: edu.kit.ipd.sdq.eventsim.resources.ProcessRegistry processRegistry>;

        $r8 = virtualinvoke $r7.<edu.kit.ipd.sdq.eventsim.resources.ProcessRegistry: edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess getOrCreateSimulatedProcess(edu.kit.ipd.sdq.eventsim.api.IRequest)>(r1);

        virtualinvoke r5.<edu.kit.ipd.sdq.eventsim.resources.entities.SimActiveResource: void consumeResource(edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess,double,int,edu.kit.ipd.sdq.eventsim.api.Procedure)>($r8, d0, i0, r4);

        return;
    }

    public void finalise()
    {
        edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel r0;
        edu.kit.ipd.sdq.eventsim.resources.ActiveResourceRegistry $r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel;

        $r1 = r0.<edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel: edu.kit.ipd.sdq.eventsim.resources.ActiveResourceRegistry resourceRegistry>;

        virtualinvoke $r1.<edu.kit.ipd.sdq.eventsim.resources.ActiveResourceRegistry: void finalise()>();

        staticinvoke <de.uka.ipd.sdq.scheduler.resources.active.AbstractActiveResource: void cleanProcesses()>();

        return;
    }

    public org.palladiosimulator.pcm.resourcetype.ResourceType findResourceType(org.palladiosimulator.pcm.resourcetype.ResourceInterface)
    {
        edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel r0;
        org.palladiosimulator.pcm.resourcetype.ResourceInterface r1, $r15;
        org.palladiosimulator.pcm.resourcetype.ResourceRepository r2;
        org.palladiosimulator.pcm.resourcetype.ResourceType r3, $r10, r21;
        java.util.Iterator r4, r6;
        org.palladiosimulator.pcm.core.entity.ResourceProvidedRole r5;
        java.util.Map $r7, $r8, $r19;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r9, $r12, $r14;
        org.eclipse.emf.common.util.EList $r11, $r13;
        java.lang.String $r16, $r17;
        org.apache.log4j.Logger $r18;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel;

        r1 := @parameter0: org.palladiosimulator.pcm.resourcetype.ResourceInterface;

        $r7 = r0.<edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel: java.util.Map resourceInterfaceToTypeMap>;

        $z0 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label6;

        r2 = interfaceinvoke r1.<org.palladiosimulator.pcm.resourcetype.ResourceInterface: org.palladiosimulator.pcm.resourcetype.ResourceRepository getResourceRepository__ResourceInterface()>();

        r21 = null;

        $r11 = interfaceinvoke r2.<org.palladiosimulator.pcm.resourcetype.ResourceRepository: org.eclipse.emf.common.util.EList getAvailableResourceTypes_ResourceRepository()>();

        r4 = interfaceinvoke $r11.<org.eclipse.emf.common.util.EList: java.util.Iterator iterator()>();

        goto label5;

     label1:
        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.palladiosimulator.pcm.resourcetype.ResourceType) $r12;

        $r13 = interfaceinvoke r3.<org.palladiosimulator.pcm.resourcetype.ResourceType: org.eclipse.emf.common.util.EList getResourceProvidedRoles__ResourceInterfaceProvidingEntity()>();

        r6 = interfaceinvoke $r13.<org.eclipse.emf.common.util.EList: java.util.Iterator iterator()>();

        goto label4;

     label2:
        $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.palladiosimulator.pcm.core.entity.ResourceProvidedRole) $r14;

        $r15 = interfaceinvoke r5.<org.palladiosimulator.pcm.core.entity.ResourceProvidedRole: org.palladiosimulator.pcm.resourcetype.ResourceInterface getProvidedResourceInterface__ResourceProvidedRole()>();

        $r16 = interfaceinvoke $r15.<org.palladiosimulator.pcm.resourcetype.ResourceInterface: java.lang.String getId()>();

        $r17 = interfaceinvoke r1.<org.palladiosimulator.pcm.resourcetype.ResourceInterface: java.lang.String getId()>();

        $z2 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z2 == 0 goto label4;

        if r21 == null goto label3;

        $r18 = <edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel: org.apache.log4j.Logger logger>;

        virtualinvoke $r18.<org.apache.log4j.Logger: void warn(java.lang.Object)>("Found at least two resource types providing the same resource interface. This case is so far not supported in the simulation. Results may be wrong.");

     label3:
        r21 = r3;

     label4:
        $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label2;

     label5:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        $r19 = r0.<edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel: java.util.Map resourceInterfaceToTypeMap>;

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r21);

     label6:
        $r8 = r0.<edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel: java.util.Map resourceInterfaceToTypeMap>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (org.palladiosimulator.pcm.resourcetype.ResourceType) $r9;

        return $r10;
    }

    public edu.kit.ipd.sdq.eventsim.api.events.IEventHandler$Registration lambda$0(edu.kit.ipd.sdq.eventsim.api.events.SimulationPrepareEvent)
    {
        edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel r0;
        edu.kit.ipd.sdq.eventsim.api.events.SimulationPrepareEvent r1;
        edu.kit.ipd.sdq.eventsim.api.events.IEventHandler$Registration $r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.api.events.SimulationPrepareEvent;

        virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel: void init()>();

        $r2 = <edu.kit.ipd.sdq.eventsim.api.events.IEventHandler$Registration: edu.kit.ipd.sdq.eventsim.api.events.IEventHandler$Registration UNREGISTER>;

        return $r2;
    }

    public edu.kit.ipd.sdq.eventsim.api.events.IEventHandler$Registration lambda$1(edu.kit.ipd.sdq.eventsim.api.events.SimulationStopEvent)
    {
        edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel r0;
        edu.kit.ipd.sdq.eventsim.api.events.SimulationStopEvent r1;
        edu.kit.ipd.sdq.eventsim.api.events.IEventHandler$Registration $r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.api.events.SimulationStopEvent;

        virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel: void finalise()>();

        $r2 = <edu.kit.ipd.sdq.eventsim.api.events.IEventHandler$Registration: edu.kit.ipd.sdq.eventsim.api.events.IEventHandler$Registration UNREGISTER>;

        return $r2;
    }

    public static java.lang.String lambda$2(java.lang.Object)
    {
        java.lang.Object r0;
        edu.kit.ipd.sdq.eventsim.resources.entities.SimActiveResource $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = (edu.kit.ipd.sdq.eventsim.resources.entities.SimActiveResource) r0;

        $r2 = virtualinvoke $r1.<edu.kit.ipd.sdq.eventsim.resources.entities.SimActiveResource: java.lang.String getId()>();

        return $r2;
    }

    public static java.lang.String lambda$3(java.lang.Object)
    {
        java.lang.Object r0;
        edu.kit.ipd.sdq.eventsim.resources.entities.SimActiveResource $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = (edu.kit.ipd.sdq.eventsim.resources.entities.SimActiveResource) r0;

        $r2 = virtualinvoke $r1.<edu.kit.ipd.sdq.eventsim.resources.entities.SimActiveResource: java.lang.String getName()>();

        return $r2;
    }

    public static java.lang.String lambda$4(java.lang.Object)
    {
        java.lang.Object r0;
        edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess $r1;
        long $l0;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = (edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess) r0;

        $l0 = virtualinvoke $r1.<edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess: long getEntityId()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        return $r2;
    }

    public static java.lang.String lambda$5(java.lang.Object)
    {
        java.lang.Object r0;
        edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = (edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess) r0;

        $r2 = virtualinvoke $r1.<edu.kit.ipd.sdq.eventsim.resources.entities.SimulatedProcess: java.lang.String getName()>();

        return $r2;
    }

    public static edu.kit.ipd.sdq.eventsim.instrumentation.description.resource.ActiveResourceRep lambda$6(edu.kit.ipd.sdq.eventsim.resources.entities.SimActiveResource)
    {
        edu.kit.ipd.sdq.eventsim.resources.entities.SimActiveResource r0;
        edu.kit.ipd.sdq.eventsim.instrumentation.description.resource.ActiveResourceRep $r1;
        org.palladiosimulator.pcm.resourceenvironment.ResourceContainer $r2;
        org.palladiosimulator.pcm.resourcetype.ProcessingResourceType $r3;

        r0 := @parameter0: edu.kit.ipd.sdq.eventsim.resources.entities.SimActiveResource;

        $r1 = new edu.kit.ipd.sdq.eventsim.instrumentation.description.resource.ActiveResourceRep;

        $r2 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.resources.entities.SimActiveResource: org.palladiosimulator.pcm.resourceenvironment.ResourceContainer getResourceContainer()>();

        $r3 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.resources.entities.SimActiveResource: org.palladiosimulator.pcm.resourcetype.ProcessingResourceType getResourceType()>();

        specialinvoke $r1.<edu.kit.ipd.sdq.eventsim.instrumentation.description.resource.ActiveResourceRep: void <init>(org.palladiosimulator.pcm.resourceenvironment.ResourceContainer,org.palladiosimulator.pcm.resourcetype.ResourceType)>($r2, $r3);

        return $r1;
    }

    public void lambda$7(edu.kit.ipd.sdq.eventsim.resources.entities.SimActiveResource)
    {
        edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel r0;
        edu.kit.ipd.sdq.eventsim.resources.entities.SimActiveResource r1;
        edu.kit.ipd.sdq.eventsim.instrumentation.injection.Instrumentor $r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.resources.entities.SimActiveResource;

        $r2 = r0.<edu.kit.ipd.sdq.eventsim.resources.EventSimActiveResourceModel: edu.kit.ipd.sdq.eventsim.instrumentation.injection.Instrumentor instrumentor>;

        interfaceinvoke $r2.<edu.kit.ipd.sdq.eventsim.instrumentation.injection.Instrumentor: void instrument(java.lang.Object)>(r1);

        return;
    }
}
