public class edu.kit.ipd.sdq.eventsim.resources.rjobs.CalculateResourceUtilizationEquidistant extends java.lang.Object implements edu.kit.ipd.sdq.eventsim.measurement.r.RJob
{
    private static final org.apache.log4j.Logger log;
    private static final int WINDOW_SIZE;

    static void <clinit>()
    {
        org.apache.log4j.Logger $r0;

        <edu.kit.ipd.sdq.eventsim.resources.rjobs.CalculateResourceUtilizationEquidistant: int WINDOW_SIZE> = 10;

        $r0 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>(class "Ledu/kit/ipd/sdq/eventsim/resources/rjobs/CalculateResourceUtilizationEquidistant;");

        <edu.kit.ipd.sdq.eventsim.resources.rjobs.CalculateResourceUtilizationEquidistant: org.apache.log4j.Logger log> = $r0;

        return;
    }

    public void <init>()
    {
        edu.kit.ipd.sdq.eventsim.resources.rjobs.CalculateResourceUtilizationEquidistant r0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.rjobs.CalculateResourceUtilizationEquidistant;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void process(edu.kit.ipd.sdq.eventsim.measurement.r.RContext)
    {
        edu.kit.ipd.sdq.eventsim.resources.rjobs.CalculateResourceUtilizationEquidistant r0;
        edu.kit.ipd.sdq.eventsim.measurement.r.RContext r1;
        org.rosuda.REngine.Rserve.RConnection $r3;
        java.lang.String[] $r4, $r7, r14;
        edu.kit.ipd.sdq.eventsim.measurement.r.window.TransformToEquidistantObservations $r5;
        edu.kit.ipd.sdq.eventsim.resources.rjobs.window.UtilizationCalculator $r6;
        edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException $r8;
        org.apache.log4j.Logger $r9, $r11, $r13;
        java.lang.Throwable $r10, $r12;
        boolean z0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.rjobs.CalculateResourceUtilizationEquidistant;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.measurement.r.RContext;

     label1:
        $r3 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.r.RContext: org.rosuda.REngine.Rserve.RConnection getConnection()>();

        z0 = staticinvoke <edu.kit.ipd.sdq.eventsim.measurement.r.utils.RHelper: boolean hasColumn(org.rosuda.REngine.Rserve.RConnection,java.lang.String,java.lang.String)>($r3, "mm", "assemblycontext.id");

        if z0 == 0 goto label2;

        $r7 = newarray (java.lang.String)[2];

        $r7[0] = "where.first.id";

        $r7[1] = "assemblycontext.id";

        r14 = $r7;

        goto label3;

     label2:
        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "where.first.id";

        r14 = $r4;

     label3:
        $r5 = new edu.kit.ipd.sdq.eventsim.measurement.r.window.TransformToEquidistantObservations;

        specialinvoke $r5.<edu.kit.ipd.sdq.eventsim.measurement.r.window.TransformToEquidistantObservations: void <init>(edu.kit.ipd.sdq.eventsim.measurement.r.RContext,double)>(r1, 10.0);

        $r6 = new edu.kit.ipd.sdq.eventsim.resources.rjobs.window.UtilizationCalculator;

        specialinvoke $r6.<edu.kit.ipd.sdq.eventsim.resources.rjobs.window.UtilizationCalculator: void <init>(double)>(10.0);

        virtualinvoke $r5.<edu.kit.ipd.sdq.eventsim.measurement.r.window.TransformToEquidistantObservations: void calculateDerivedMetric(java.lang.String,java.lang.String,edu.kit.ipd.sdq.eventsim.measurement.r.window.WindowCalculator,java.lang.String[])>("QUEUE_LENGTH", "UTILIZATION", $r6, r14);

     label4:
        goto label8;

     label5:
        $r8 := @caughtexception;

        $r9 = <edu.kit.ipd.sdq.eventsim.resources.rjobs.CalculateResourceUtilizationEquidistant: org.apache.log4j.Logger log>;

        virtualinvoke $r9.<org.apache.log4j.Logger: void error(java.lang.Object)>($r8);

        goto label8;

     label6:
        $r10 := @caughtexception;

        $r11 = <edu.kit.ipd.sdq.eventsim.resources.rjobs.CalculateResourceUtilizationEquidistant: org.apache.log4j.Logger log>;

        virtualinvoke $r11.<org.apache.log4j.Logger: void error(java.lang.Object)>($r10);

        goto label8;

     label7:
        $r12 := @caughtexception;

        $r13 = <edu.kit.ipd.sdq.eventsim.resources.rjobs.CalculateResourceUtilizationEquidistant: org.apache.log4j.Logger log>;

        virtualinvoke $r13.<org.apache.log4j.Logger: void error(java.lang.Object)>($r12);

     label8:
        return;

        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label1 to label4 with label5;
        catch org.rosuda.REngine.REXPMismatchException from label1 to label4 with label6;
        catch org.rosuda.REngine.Rserve.RserveException from label1 to label4 with label7;
    }

    public java.lang.String getName()
    {
        edu.kit.ipd.sdq.eventsim.resources.rjobs.CalculateResourceUtilizationEquidistant r0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.resources.rjobs.CalculateResourceUtilizationEquidistant;

        return "Calculating resource utilizations (equidistantly spaced) based on queue lengths over time";
    }
}
