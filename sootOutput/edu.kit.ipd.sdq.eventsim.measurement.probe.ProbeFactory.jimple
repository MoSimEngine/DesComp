public class edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeFactory extends java.lang.Object
{
    private static final org.apache.log4j.Logger log;
    private edu.kit.ipd.sdq.eventsim.measurement.ProbeConfiguration configuration;
    private edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeLocator probeLocator;

    static void <clinit>()
    {
        org.apache.log4j.Logger $r0;

        $r0 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>(class "Ledu/kit/ipd/sdq/eventsim/measurement/probe/ProbeFactory;");

        <edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeFactory: org.apache.log4j.Logger log> = $r0;

        return;
    }

    public void <init>(edu.kit.ipd.sdq.eventsim.measurement.ProbeConfiguration, edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeLocator)
    {
        edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeFactory r0;
        edu.kit.ipd.sdq.eventsim.measurement.ProbeConfiguration r1;
        edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeLocator r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeFactory;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.measurement.ProbeConfiguration;

        r2 := @parameter1: edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeLocator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeFactory: edu.kit.ipd.sdq.eventsim.measurement.ProbeConfiguration configuration> = r1;

        r0.<edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeFactory: edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeLocator probeLocator> = r2;

        return;
    }

    public transient edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe create(java.lang.Object, java.lang.String, java.lang.Object[])
    {
        edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeFactory r0;
        java.lang.Object r1, $r13;
        java.lang.String r2, $r22, $r26;
        java.lang.Object[] r3, $r10, $r23;
        java.lang.Class r4, $r6, $r9, $r25;
        edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeLocator $r5;
        java.lang.Class[] $r7;
        edu.kit.ipd.sdq.eventsim.measurement.ProbeConfiguration $r8, $r12;
        edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint $r11;
        java.lang.StringBuilder $r14, $r16, $r17, $r18, $r19, $r20, $r21;
        org.apache.log4j.Logger $r15, $r24, $r29;
        edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe $r27, $r30;
        java.lang.Exception $r28;
        java.lang.reflect.Constructor r31;
        edu.kit.ipd.sdq.eventsim.measurement.probe.AbstractProbe r32;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeFactory;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r5 = r0.<edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeFactory: edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeLocator probeLocator>;

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r4 = interfaceinvoke $r5.<edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeLocator: java.lang.Class probeForType(java.lang.Class,java.lang.String)>($r6, r2);

        if r4 != null goto label1;

        $r24 = <edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeFactory: org.apache.log4j.Logger log>;

        $r23 = newarray (java.lang.Object)[2];

        $r25 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r23[0] = $r25;

        $r23[1] = r2;

        $r26 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No probe has been found capable of measuring property \"%s\" for elements of type %s", $r23);

        virtualinvoke $r24.<org.apache.log4j.Logger: void error(java.lang.Object)>($r26);

        $r27 = staticinvoke <edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe: edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe nullProbe(java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        return $r27;

     label1:
        $r7 = newarray (java.lang.Class)[2];

        $r7[0] = class "Ledu/kit/ipd/sdq/eventsim/measurement/MeasuringPoint;";

        $r8 = r0.<edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeFactory: edu.kit.ipd.sdq.eventsim.measurement.ProbeConfiguration configuration>;

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>();

        $r7[1] = $r9;

        r31 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r7);

        $r10 = newarray (java.lang.Object)[2];

        $r11 = new edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint;

        specialinvoke $r11.<edu.kit.ipd.sdq.eventsim.measurement.MeasuringPoint: void <init>(java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        $r10[0] = $r11;

        $r12 = r0.<edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeFactory: edu.kit.ipd.sdq.eventsim.measurement.ProbeConfiguration configuration>;

        $r10[1] = $r12;

        $r13 = virtualinvoke r31.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r10);

        r32 = (edu.kit.ipd.sdq.eventsim.measurement.probe.AbstractProbe) $r13;

        $r15 = <edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeFactory: org.apache.log4j.Logger log>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("Created probe ");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r32);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (element=");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", property=");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<org.apache.log4j.Logger: void debug(java.lang.Object)>($r22);

     label2:
        goto label4;

     label3:
        $r28 := @caughtexception;

        $r29 = <edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeFactory: org.apache.log4j.Logger log>;

        virtualinvoke $r29.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Exception while invoking probe constructor.", $r28);

        $r30 = staticinvoke <edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe: edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe nullProbe(java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        return $r30;

     label4:
        return r32;

        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.SecurityException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }
}
