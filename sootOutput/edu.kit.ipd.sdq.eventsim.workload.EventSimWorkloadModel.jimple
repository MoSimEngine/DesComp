public class edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel extends java.lang.Object implements edu.kit.ipd.sdq.eventsim.api.IWorkload
{
    private static final org.apache.log4j.Logger logger;
    private edu.kit.ipd.sdq.eventsim.api.ISimulationMiddleware middleware;
    private edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage measurementStorage;
    private edu.kit.ipd.sdq.eventsim.command.PCMModelCommandExecutor executor;
    private de.uka.ipd.sdq.simulation.abstractsimengine.ISimulationModel model;
    private edu.kit.ipd.sdq.eventsim.interpreter.TraversalListenerRegistry traversalListeners;
    private edu.kit.ipd.sdq.eventsim.workload.generator.BuildWorkloadGenerator workloadGeneratorBuilder;
    private edu.kit.ipd.sdq.eventsim.api.PCMModel pcm;
    private edu.kit.ipd.sdq.eventsim.instrumentation.description.core.InstrumentationDescription instrumentation;
    private edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade measurementFacade;

    static void <clinit>()
    {
        org.apache.log4j.Logger $r0;

        $r0 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>(class "Ledu/kit/ipd/sdq/eventsim/workload/EventSimWorkloadModel;");

        <edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: org.apache.log4j.Logger logger> = $r0;

        return;
    }

    public void <init>(edu.kit.ipd.sdq.eventsim.api.ISimulationMiddleware)
    {
        edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel r0;
        edu.kit.ipd.sdq.eventsim.api.ISimulationMiddleware r1;
        edu.kit.ipd.sdq.eventsim.api.events.IEventHandler $r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.api.ISimulationMiddleware;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel$lambda_0__268: edu.kit.ipd.sdq.eventsim.api.events.IEventHandler bootstrap$(edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel)>(r0);

        interfaceinvoke r1.<edu.kit.ipd.sdq.eventsim.api.ISimulationMiddleware: void registerEventHandler(java.lang.Class,edu.kit.ipd.sdq.eventsim.api.events.IEventHandler)>(class "Ledu/kit/ipd/sdq/eventsim/api/events/SimulationPrepareEvent;", $r2);

        return;
    }

    private void init()
    {
        edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel r0;
        de.uka.ipd.sdq.probfunction.math.impl.ProbabilityFunctionFactoryImpl r1;
        edu.kit.ipd.sdq.eventsim.api.ISimulationMiddleware $r2;
        de.uka.ipd.sdq.probfunction.math.IRandomGenerator $r3;
        org.apache.log4j.Logger $r4;
        boolean $z0;
        edu.kit.ipd.sdq.eventsim.workload.debug.DebugUsageTraversalListener $r5;
        edu.kit.ipd.sdq.eventsim.interpreter.TraversalListenerRegistry $r6;

        r0 := @this: edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel;

        r1 = staticinvoke <de.uka.ipd.sdq.probfunction.math.impl.ProbabilityFunctionFactoryImpl: de.uka.ipd.sdq.probfunction.math.impl.ProbabilityFunctionFactoryImpl getInstance()>();

        $r2 = r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.api.ISimulationMiddleware middleware>;

        $r3 = interfaceinvoke $r2.<edu.kit.ipd.sdq.eventsim.api.ISimulationMiddleware: de.uka.ipd.sdq.probfunction.math.IRandomGenerator getRandomGenerator()>();

        interfaceinvoke r1.<de.uka.ipd.sdq.probfunction.math.IProbabilityFunctionFactory: void setRandomGenerator(de.uka.ipd.sdq.probfunction.math.IRandomGenerator)>($r3);

        staticinvoke <de.uka.ipd.sdq.simucomframework.variables.cache.StoExCache: void initialiseStoExCache(de.uka.ipd.sdq.probfunction.math.IProbabilityFunctionFactory)>(r1);

        $r4 = <edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: org.apache.log4j.Logger logger>;

        $z0 = virtualinvoke $r4.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.interpreter.TraversalListenerRegistry traversalListeners>;

        $r5 = new edu.kit.ipd.sdq.eventsim.workload.debug.DebugUsageTraversalListener;

        specialinvoke $r5.<edu.kit.ipd.sdq.eventsim.workload.debug.DebugUsageTraversalListener: void <init>()>();

        virtualinvoke $r6.<edu.kit.ipd.sdq.eventsim.interpreter.TraversalListenerRegistry: void addTraversalListener(edu.kit.ipd.sdq.eventsim.interpreter.listener.ITraversalListener)>($r5);

     label1:
        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: void setupMeasurements()>();

        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: void registerEventHandler()>();

        virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: void generate()>();

        return;
    }

    public void generate()
    {
        edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel r0;
        java.util.List r1;
        edu.kit.ipd.sdq.eventsim.workload.generator.WorkloadGenerator r2;
        java.util.Iterator r3;
        edu.kit.ipd.sdq.eventsim.workload.generator.BuildWorkloadGenerator $r4;
        edu.kit.ipd.sdq.eventsim.command.PCMModelCommandExecutor $r5;
        java.lang.Object $r6, $r7;
        boolean $z0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel;

        $r5 = r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.command.PCMModelCommandExecutor executor>;

        $r4 = r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.workload.generator.BuildWorkloadGenerator workloadGeneratorBuilder>;

        $r6 = virtualinvoke $r5.<edu.kit.ipd.sdq.eventsim.command.PCMModelCommandExecutor: java.lang.Object execute(edu.kit.ipd.sdq.eventsim.command.ICommand)>($r4);

        r1 = (java.util.List) $r6;

        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r2 = (edu.kit.ipd.sdq.eventsim.workload.generator.WorkloadGenerator) $r7;

        interfaceinvoke r2.<edu.kit.ipd.sdq.eventsim.workload.generator.WorkloadGenerator: void processWorkload()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;
    }

    private void registerEventHandler()
    {
        edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel r0;
        edu.kit.ipd.sdq.eventsim.api.ISimulationMiddleware $r1;
        edu.kit.ipd.sdq.eventsim.api.events.IEventHandler $r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel;

        $r1 = r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.api.ISimulationMiddleware middleware>;

        $r2 = staticinvoke <edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel$lambda_1__270: edu.kit.ipd.sdq.eventsim.api.events.IEventHandler bootstrap$(edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel)>(r0);

        interfaceinvoke $r1.<edu.kit.ipd.sdq.eventsim.api.ISimulationMiddleware: void registerEventHandler(java.lang.Class,edu.kit.ipd.sdq.eventsim.api.events.IEventHandler)>(class "Ledu/kit/ipd/sdq/eventsim/api/events/WorkloadUserFinishedEvent;", $r2);

        return;
    }

    private void setupMeasurements()
    {
        edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel r0;
        edu.kit.ipd.sdq.eventsim.instrumentation.injection.Instrumentor r1;
        edu.kit.ipd.sdq.eventsim.api.PCMModel $r2, $r14;
        edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorBuilder $r3, $r6, $r8, $r10;
        org.osgi.framework.BundleContext $r4;
        org.osgi.framework.Bundle $r5;
        edu.kit.ipd.sdq.eventsim.instrumentation.description.core.InstrumentationDescription $r7;
        edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage $r9, $r18, $r20, $r22, $r24;
        edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorSEMBuilder $r11;
        edu.kit.ipd.sdq.eventsim.instrumentation.injection.MappinglessInstrumentorInstantiator $r12;
        edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade $r13;
        org.palladiosimulator.pcm.usagemodel.UsageModel $r15;
        org.eclipse.emf.common.util.EList $r16;
        java.util.function.Consumer $r17;
        java.util.function.Function $r19, $r21, $r23, $r25;

        r0 := @this: edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel;

        $r2 = r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.api.PCMModel pcm>;

        $r3 = staticinvoke <edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorBuilder: edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorBuilder buildFor(edu.kit.ipd.sdq.eventsim.api.PCMModel)>($r2);

        $r4 = staticinvoke <edu.kit.ipd.sdq.eventsim.workload.Activator: org.osgi.framework.BundleContext getContext()>();

        $r5 = interfaceinvoke $r4.<org.osgi.framework.BundleContext: org.osgi.framework.Bundle getBundle()>();

        $r6 = virtualinvoke $r3.<edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorBuilder: edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorBuilder inBundle(org.osgi.framework.Bundle)>($r5);

        $r7 = r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.instrumentation.description.core.InstrumentationDescription instrumentation>;

        $r8 = virtualinvoke $r6.<edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorBuilder: edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorBuilder withDescription(edu.kit.ipd.sdq.eventsim.instrumentation.description.core.InstrumentationDescription)>($r7);

        $r9 = r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage measurementStorage>;

        $r10 = virtualinvoke $r8.<edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorBuilder: edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorBuilder withStorage(edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage)>($r9);

        $r11 = virtualinvoke $r10.<edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorBuilder: edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorSEMBuilder forModelType(java.lang.Class)>(class "Ledu/kit/ipd/sdq/eventsim/instrumentation/description/useraction/UserActionRepresentative;");

        $r12 = virtualinvoke $r11.<edu.kit.ipd.sdq.eventsim.instrumentation.injection.InstrumentorSEMBuilder: edu.kit.ipd.sdq.eventsim.instrumentation.injection.MappinglessInstrumentorInstantiator withoutMapping()>();

        $r13 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade getMeasurementFacade()>();

        r1 = virtualinvoke $r12.<edu.kit.ipd.sdq.eventsim.instrumentation.injection.MappinglessInstrumentorInstantiator: edu.kit.ipd.sdq.eventsim.instrumentation.injection.Instrumentor createFor(edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade)>($r13);

        interfaceinvoke r1.<edu.kit.ipd.sdq.eventsim.instrumentation.injection.Instrumentor: void instrumentAll()>();

        $r14 = r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.api.PCMModel pcm>;

        $r15 = virtualinvoke $r14.<edu.kit.ipd.sdq.eventsim.api.PCMModel: org.palladiosimulator.pcm.usagemodel.UsageModel getUsageModel()>();

        $r16 = interfaceinvoke $r15.<org.palladiosimulator.pcm.usagemodel.UsageModel: org.eclipse.emf.common.util.EList getUsageScenario_UsageModel()>();

        $r17 = staticinvoke <edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel$lambda_2__269: java.util.function.Consumer bootstrap$(edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel)>(r0);

        interfaceinvoke $r16.<org.eclipse.emf.common.util.EList: void forEach(java.util.function.Consumer)>($r17);

        $r18 = r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage measurementStorage>;

        $r19 = staticinvoke <edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel$lambda_6__271: java.util.function.Function bootstrap$()>();

        interfaceinvoke $r18.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage: void addIdExtractor(java.lang.Class,java.util.function.Function)>(class "Ledu/kit/ipd/sdq/eventsim/workload/entities/User;", $r19);

        $r20 = r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage measurementStorage>;

        $r21 = staticinvoke <edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel$lambda_7__273: java.util.function.Function bootstrap$()>();

        interfaceinvoke $r20.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage: void addNameExtractor(java.lang.Class,java.util.function.Function)>(class "Ledu/kit/ipd/sdq/eventsim/workload/entities/User;", $r21);

        $r22 = r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage measurementStorage>;

        $r23 = staticinvoke <edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel$lambda_8__274: java.util.function.Function bootstrap$()>();

        interfaceinvoke $r22.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage: void addIdExtractor(java.lang.Class,java.util.function.Function)>(class "Lorg/palladiosimulator/pcm/usagemodel/AbstractUserAction;", $r23);

        $r24 = r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage measurementStorage>;

        $r25 = staticinvoke <edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel$lambda_9__275: java.util.function.Function bootstrap$()>();

        interfaceinvoke $r24.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage: void addNameExtractor(java.lang.Class,java.util.function.Function)>(class "Lorg/palladiosimulator/pcm/usagemodel/AbstractUserAction;", $r25);

        return;
    }

    public edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade getMeasurementFacade()
    {
        edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel r0;
        org.osgi.framework.Bundle r1;
        edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade $r2, $r3, $r5;
        org.osgi.framework.BundleContext $r4;
        edu.kit.ipd.sdq.eventsim.workload.WorkloadMeasurementConfiguration $r6;
        de.uka.ipd.sdq.simulation.abstractsimengine.ISimulationModel $r7;
        edu.kit.ipd.sdq.eventsim.api.ISimulationMiddleware $r8;
        edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator $r9;

        r0 := @this: edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel;

        $r2 = r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade measurementFacade>;

        if $r2 != null goto label1;

        $r4 = staticinvoke <edu.kit.ipd.sdq.eventsim.workload.Activator: org.osgi.framework.BundleContext getContext()>();

        r1 = interfaceinvoke $r4.<org.osgi.framework.BundleContext: org.osgi.framework.Bundle getBundle()>();

        $r5 = new edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade;

        $r6 = new edu.kit.ipd.sdq.eventsim.workload.WorkloadMeasurementConfiguration;

        $r8 = r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.api.ISimulationMiddleware middleware>;

        $r7 = r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: de.uka.ipd.sdq.simulation.abstractsimengine.ISimulationModel model>;

        specialinvoke $r6.<edu.kit.ipd.sdq.eventsim.workload.WorkloadMeasurementConfiguration: void <init>(edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel,edu.kit.ipd.sdq.eventsim.api.ISimulationMiddleware,de.uka.ipd.sdq.simulation.abstractsimengine.ISimulationModel)>(r0, $r8, $r7);

        $r9 = new edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator;

        specialinvoke $r9.<edu.kit.ipd.sdq.eventsim.measurement.osgi.BundleProbeLocator: void <init>(org.osgi.framework.Bundle)>(r1);

        specialinvoke $r5.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade: void <init>(edu.kit.ipd.sdq.eventsim.measurement.ProbeConfiguration,edu.kit.ipd.sdq.eventsim.measurement.probe.ProbeLocator)>($r6, $r9);

        r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade measurementFacade> = $r5;

     label1:
        $r3 = r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade measurementFacade>;

        return $r3;
    }

    public edu.kit.ipd.sdq.eventsim.interpreter.TraversalListenerRegistry getTraversalListeners()
    {
        edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel r0;
        edu.kit.ipd.sdq.eventsim.interpreter.TraversalListenerRegistry $r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel;

        $r1 = r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.interpreter.TraversalListenerRegistry traversalListeners>;

        return $r1;
    }

    public edu.kit.ipd.sdq.eventsim.api.events.IEventHandler$Registration lambda$0(edu.kit.ipd.sdq.eventsim.api.events.SimulationPrepareEvent)
    {
        edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel r0;
        edu.kit.ipd.sdq.eventsim.api.events.SimulationPrepareEvent r1;
        edu.kit.ipd.sdq.eventsim.api.events.IEventHandler$Registration $r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.api.events.SimulationPrepareEvent;

        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: void init()>();

        $r2 = <edu.kit.ipd.sdq.eventsim.api.events.IEventHandler$Registration: edu.kit.ipd.sdq.eventsim.api.events.IEventHandler$Registration UNREGISTER>;

        return $r2;
    }

    public edu.kit.ipd.sdq.eventsim.api.events.IEventHandler$Registration lambda$1(edu.kit.ipd.sdq.eventsim.api.events.WorkloadUserFinishedEvent)
    {
        edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel r0;
        edu.kit.ipd.sdq.eventsim.api.events.WorkloadUserFinishedEvent r1;
        edu.kit.ipd.sdq.eventsim.api.ISimulationMiddleware $r2;
        edu.kit.ipd.sdq.eventsim.api.events.IEventHandler$Registration $r3;

        r0 := @this: edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.api.events.WorkloadUserFinishedEvent;

        $r2 = r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.api.ISimulationMiddleware middleware>;

        interfaceinvoke $r2.<edu.kit.ipd.sdq.eventsim.api.ISimulationMiddleware: void increaseMeasurementCount()>();

        $r3 = <edu.kit.ipd.sdq.eventsim.api.events.IEventHandler$Registration: edu.kit.ipd.sdq.eventsim.api.events.IEventHandler$Registration KEEP_REGISTERED>;

        return $r3;
    }

    public void lambda$2(org.palladiosimulator.pcm.usagemodel.UsageScenario)
    {
        edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel r0;
        org.palladiosimulator.pcm.usagemodel.UsageScenario r1;
        edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe r2, r3, r4;
        edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade $r5, $r8, $r11;
        java.lang.Object[] $r6, $r9, $r12;
        edu.kit.ipd.sdq.eventsim.measurement.MeasurementListener $r7, $r10, $r13;

        r0 := @this: edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel;

        r1 := @parameter0: org.palladiosimulator.pcm.usagemodel.UsageScenario;

        $r5 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade getMeasurementFacade()>();

        $r6 = newarray (java.lang.Object)[0];

        r2 = virtualinvoke $r5.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade: edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe createProbe(java.lang.Object,java.lang.String,java.lang.Object[])>(r1, "inter_arrival_time", $r6);

        $r7 = staticinvoke <edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel$lambda_3__272: edu.kit.ipd.sdq.eventsim.measurement.MeasurementListener bootstrap$(edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel)>(r0);

        interfaceinvoke r2.<edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe: void forEachMeasurement(edu.kit.ipd.sdq.eventsim.measurement.MeasurementListener)>($r7);

        $r8 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade getMeasurementFacade()>();

        $r9 = newarray (java.lang.Object)[0];

        r3 = virtualinvoke $r8.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade: edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe createProbe(java.lang.Object,java.lang.String,java.lang.Object[])>(r1, "inter_departure_time", $r9);

        $r10 = staticinvoke <edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel$lambda_4__277: edu.kit.ipd.sdq.eventsim.measurement.MeasurementListener bootstrap$(edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel)>(r0);

        interfaceinvoke r3.<edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe: void forEachMeasurement(edu.kit.ipd.sdq.eventsim.measurement.MeasurementListener)>($r10);

        $r11 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade getMeasurementFacade()>();

        $r12 = newarray (java.lang.Object)[0];

        r4 = virtualinvoke $r11.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementFacade: edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe createProbe(java.lang.Object,java.lang.String,java.lang.Object[])>(r1, "active_users", $r12);

        $r13 = staticinvoke <edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel$lambda_5__280: edu.kit.ipd.sdq.eventsim.measurement.MeasurementListener bootstrap$(edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel)>(r0);

        interfaceinvoke r4.<edu.kit.ipd.sdq.eventsim.measurement.probe.IProbe: void forEachMeasurement(edu.kit.ipd.sdq.eventsim.measurement.MeasurementListener)>($r13);

        return;
    }

    public static java.lang.String lambda$6(java.lang.Object)
    {
        java.lang.Object r0;
        edu.kit.ipd.sdq.eventsim.workload.entities.User $r1;
        long $l0;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = (edu.kit.ipd.sdq.eventsim.workload.entities.User) r0;

        $l0 = virtualinvoke $r1.<edu.kit.ipd.sdq.eventsim.workload.entities.User: long getEntityId()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        return $r2;
    }

    public static java.lang.String lambda$7(java.lang.Object)
    {
        java.lang.Object r0;
        edu.kit.ipd.sdq.eventsim.workload.entities.User $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = (edu.kit.ipd.sdq.eventsim.workload.entities.User) r0;

        $r2 = virtualinvoke $r1.<edu.kit.ipd.sdq.eventsim.workload.entities.User: java.lang.String getName()>();

        return $r2;
    }

    public static java.lang.String lambda$8(java.lang.Object)
    {
        java.lang.Object r0;
        org.palladiosimulator.pcm.usagemodel.AbstractUserAction $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = (org.palladiosimulator.pcm.usagemodel.AbstractUserAction) r0;

        $r2 = interfaceinvoke $r1.<org.palladiosimulator.pcm.usagemodel.AbstractUserAction: java.lang.String getId()>();

        return $r2;
    }

    public static java.lang.String lambda$9(java.lang.Object)
    {
        java.lang.Object r0;
        org.palladiosimulator.pcm.usagemodel.AbstractUserAction $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = (org.palladiosimulator.pcm.usagemodel.AbstractUserAction) r0;

        $r2 = interfaceinvoke $r1.<org.palladiosimulator.pcm.usagemodel.AbstractUserAction: java.lang.String getEntityName()>();

        return $r2;
    }

    public void lambda$3(edu.kit.ipd.sdq.eventsim.measurement.Measurement)
    {
        edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel r0;
        edu.kit.ipd.sdq.eventsim.measurement.Measurement r1;
        edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage $r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.measurement.Measurement;

        $r2 = r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage measurementStorage>;

        interfaceinvoke $r2.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage: void put(edu.kit.ipd.sdq.eventsim.measurement.Measurement)>(r1);

        return;
    }

    public void lambda$4(edu.kit.ipd.sdq.eventsim.measurement.Measurement)
    {
        edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel r0;
        edu.kit.ipd.sdq.eventsim.measurement.Measurement r1;
        edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage $r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.measurement.Measurement;

        $r2 = r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage measurementStorage>;

        interfaceinvoke $r2.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage: void put(edu.kit.ipd.sdq.eventsim.measurement.Measurement)>(r1);

        return;
    }

    public void lambda$5(edu.kit.ipd.sdq.eventsim.measurement.Measurement)
    {
        edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel r0;
        edu.kit.ipd.sdq.eventsim.measurement.Measurement r1;
        edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage $r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.measurement.Measurement;

        $r2 = r0.<edu.kit.ipd.sdq.eventsim.workload.EventSimWorkloadModel: edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage measurementStorage>;

        interfaceinvoke $r2.<edu.kit.ipd.sdq.eventsim.measurement.MeasurementStorage: void put(edu.kit.ipd.sdq.eventsim.measurement.Measurement)>(r1);

        return;
    }
}
