public class edu.kit.ipd.sdq.eventsim.workload.interpreter.strategies.BranchSimulationStrategy extends java.lang.Object implements edu.kit.ipd.sdq.eventsim.interpreter.SimulationStrategy
{
    private static final double SUM_OF_BRANCHING_PROBABILITES_TOLERANCE;
    private de.uka.ipd.sdq.probfunction.math.IRandomGenerator randomGenerator;
    private edu.kit.ipd.sdq.eventsim.workload.WorkloadModelDiagnostics diagnostics;

    public void <init>()
    {
        edu.kit.ipd.sdq.eventsim.workload.interpreter.strategies.BranchSimulationStrategy r0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.workload.interpreter.strategies.BranchSimulationStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void simulate(org.palladiosimulator.pcm.usagemodel.AbstractUserAction, edu.kit.ipd.sdq.eventsim.workload.entities.User, java.util.function.Consumer)
    {
        edu.kit.ipd.sdq.eventsim.workload.interpreter.strategies.BranchSimulationStrategy r0;
        org.palladiosimulator.pcm.usagemodel.AbstractUserAction r1, $r10;
        edu.kit.ipd.sdq.eventsim.workload.entities.User r2;
        java.util.function.Consumer r3;
        org.palladiosimulator.pcm.usagemodel.Branch r4;
        org.palladiosimulator.pcm.usagemodel.ScenarioBehaviour r5;
        org.eclipse.emf.common.util.EList $r6;
        int $i0;
        de.uka.ipd.sdq.probfunction.math.IRandomGenerator $r7;
        edu.kit.ipd.sdq.eventsim.api.Procedure $r8;
        edu.kit.ipd.sdq.eventsim.workload.WorkloadModelDiagnostics $r9;

        r0 := @this: edu.kit.ipd.sdq.eventsim.workload.interpreter.strategies.BranchSimulationStrategy;

        r1 := @parameter0: org.palladiosimulator.pcm.usagemodel.AbstractUserAction;

        r2 := @parameter1: edu.kit.ipd.sdq.eventsim.workload.entities.User;

        r3 := @parameter2: java.util.function.Consumer;

        r4 = (org.palladiosimulator.pcm.usagemodel.Branch) r1;

        $r6 = interfaceinvoke r4.<org.palladiosimulator.pcm.usagemodel.Branch: org.eclipse.emf.common.util.EList getBranchTransitions_Branch()>();

        $i0 = interfaceinvoke $r6.<org.eclipse.emf.common.util.EList: int size()>();

        if $i0 != 0 goto label1;

        $r9 = r0.<edu.kit.ipd.sdq.eventsim.workload.interpreter.strategies.BranchSimulationStrategy: edu.kit.ipd.sdq.eventsim.workload.WorkloadModelDiagnostics diagnostics>;

        virtualinvoke $r9.<edu.kit.ipd.sdq.eventsim.workload.WorkloadModelDiagnostics: void reportMissingBranchTransitions(org.palladiosimulator.pcm.usagemodel.Branch)>(r4);

        $r10 = interfaceinvoke r4.<org.palladiosimulator.pcm.usagemodel.Branch: org.palladiosimulator.pcm.usagemodel.AbstractUserAction getSuccessor()>();

        virtualinvoke r2.<edu.kit.ipd.sdq.eventsim.workload.entities.User: void simulateAction(org.palladiosimulator.pcm.usagemodel.AbstractUserAction)>($r10);

        return;

     label1:
        $r7 = r0.<edu.kit.ipd.sdq.eventsim.workload.interpreter.strategies.BranchSimulationStrategy: de.uka.ipd.sdq.probfunction.math.IRandomGenerator randomGenerator>;

        r5 = staticinvoke <edu.kit.ipd.sdq.eventsim.workload.interpreter.strategies.BranchSimulationStrategy: org.palladiosimulator.pcm.usagemodel.ScenarioBehaviour selectBranchTransition(org.palladiosimulator.pcm.usagemodel.Branch,de.uka.ipd.sdq.probfunction.math.IRandomGenerator)>(r4, $r7);

        $r8 = staticinvoke <edu.kit.ipd.sdq.eventsim.workload.interpreter.strategies.BranchSimulationStrategy$lambda_0__259: edu.kit.ipd.sdq.eventsim.api.Procedure bootstrap$(java.util.function.Consumer,edu.kit.ipd.sdq.eventsim.workload.entities.User,org.palladiosimulator.pcm.usagemodel.Branch)>(r3, r2, r4);

        virtualinvoke r2.<edu.kit.ipd.sdq.eventsim.workload.entities.User: void simulateBehaviour(org.palladiosimulator.pcm.usagemodel.ScenarioBehaviour,edu.kit.ipd.sdq.eventsim.api.Procedure)>(r5, $r8);

        return;
    }

    private static org.palladiosimulator.pcm.usagemodel.ScenarioBehaviour selectBranchTransition(org.palladiosimulator.pcm.usagemodel.Branch, de.uka.ipd.sdq.probfunction.math.IRandomGenerator)
    {
        org.palladiosimulator.pcm.usagemodel.Branch r0;
        de.uka.ipd.sdq.probfunction.math.IRandomGenerator r1;
        double d0, d1, $d2, d3;
        org.palladiosimulator.pcm.usagemodel.BranchTransition r2;
        java.util.Iterator r3;
        org.eclipse.emf.common.util.EList $r4;
        java.lang.Object $r5;
        byte $b0, $b1;
        org.palladiosimulator.pcm.usagemodel.ScenarioBehaviour r6;
        boolean $z0;

        r0 := @parameter0: org.palladiosimulator.pcm.usagemodel.Branch;

        r1 := @parameter1: de.uka.ipd.sdq.probfunction.math.IRandomGenerator;

        r6 = null;

        d3 = 0.0;

        d0 = interfaceinvoke r1.<de.uka.ipd.sdq.probfunction.math.IRandomGenerator: double random()>();

        $r4 = interfaceinvoke r0.<org.palladiosimulator.pcm.usagemodel.Branch: org.eclipse.emf.common.util.EList getBranchTransitions_Branch()>();

        r3 = interfaceinvoke $r4.<org.eclipse.emf.common.util.EList: java.util.Iterator iterator()>();

        goto label3;

     label1:
        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.palladiosimulator.pcm.usagemodel.BranchTransition) $r5;

        d1 = interfaceinvoke r2.<org.palladiosimulator.pcm.usagemodel.BranchTransition: double getBranchProbability()>();

        $b0 = d0 cmpl d3;

        if $b0 < 0 goto label2;

        $d2 = d3 + d1;

        $b1 = d0 cmpg $d2;

        if $b1 >= 0 goto label2;

        r6 = interfaceinvoke r2.<org.palladiosimulator.pcm.usagemodel.BranchTransition: org.palladiosimulator.pcm.usagemodel.ScenarioBehaviour getBranchedBehaviour_BranchTransition()>();

     label2:
        d3 = d3 + d1;

     label3:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        staticinvoke <edu.kit.ipd.sdq.eventsim.workload.interpreter.strategies.BranchSimulationStrategy: void failIfNoTransitionSelected(org.palladiosimulator.pcm.usagemodel.Branch,org.palladiosimulator.pcm.usagemodel.ScenarioBehaviour)>(r0, r6);

        staticinvoke <edu.kit.ipd.sdq.eventsim.workload.interpreter.strategies.BranchSimulationStrategy: void failIfProbabilitiesDontSumUpToOne(org.palladiosimulator.pcm.usagemodel.Branch,double)>(r0, d3);

        return r6;
    }

    private static void failIfNoTransitionSelected(org.palladiosimulator.pcm.usagemodel.Branch, org.palladiosimulator.pcm.usagemodel.ScenarioBehaviour)
    {
        org.palladiosimulator.pcm.usagemodel.Branch r0;
        org.palladiosimulator.pcm.usagemodel.ScenarioBehaviour r1;
        edu.kit.ipd.sdq.eventsim.exceptions.unchecked.UnknownSimulationException $r2;
        java.lang.Object[] $r3;
        java.lang.String $r4, $r5;

        r0 := @parameter0: org.palladiosimulator.pcm.usagemodel.Branch;

        r1 := @parameter1: org.palladiosimulator.pcm.usagemodel.ScenarioBehaviour;

        if r1 != null goto label1;

        $r2 = new edu.kit.ipd.sdq.eventsim.exceptions.unchecked.UnknownSimulationException;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <edu.kit.ipd.sdq.eventsim.util.PCMEntityHelper: java.lang.String toString(org.palladiosimulator.pcm.core.entity.Entity)>(r0);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No branch transition has been entered for branch %s", $r3);

        specialinvoke $r2.<edu.kit.ipd.sdq.eventsim.exceptions.unchecked.UnknownSimulationException: void <init>(java.lang.String)>($r5);

        throw $r2;

     label1:
        return;
    }

    private static void failIfProbabilitiesDontSumUpToOne(org.palladiosimulator.pcm.usagemodel.Branch, double)
    {
        org.palladiosimulator.pcm.usagemodel.Branch r0;
        double d0, $d1, $d2;
        byte $b0;
        edu.kit.ipd.sdq.eventsim.exceptions.unchecked.InvalidModelParametersException $r1;
        java.lang.Object[] $r2;
        java.lang.String $r3, $r5;
        java.lang.Double $r4;

        r0 := @parameter0: org.palladiosimulator.pcm.usagemodel.Branch;

        d0 := @parameter1: double;

        $d1 = d0 - 1.0;

        $d2 = staticinvoke <java.lang.Math: double abs(double)>($d1);

        $b0 = $d2 cmpl 0.01;

        if $b0 <= 0 goto label1;

        $r1 = new edu.kit.ipd.sdq.eventsim.exceptions.unchecked.InvalidModelParametersException;

        $r2 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <edu.kit.ipd.sdq.eventsim.util.PCMEntityHelper: java.lang.String toString(org.palladiosimulator.pcm.core.entity.Entity)>(r0);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r2[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Branching probabilities of branch %s sum up to %f, but must be approximately 1.", $r2);

        specialinvoke $r1.<edu.kit.ipd.sdq.eventsim.exceptions.unchecked.InvalidModelParametersException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        return;
    }

    public volatile void simulate(org.palladiosimulator.pcm.core.entity.Entity, edu.kit.ipd.sdq.eventsim.entities.EventSimEntity, java.util.function.Consumer)
    {
        edu.kit.ipd.sdq.eventsim.workload.interpreter.strategies.BranchSimulationStrategy r0;
        org.palladiosimulator.pcm.core.entity.Entity r1;
        edu.kit.ipd.sdq.eventsim.entities.EventSimEntity r2;
        java.util.function.Consumer r3;
        edu.kit.ipd.sdq.eventsim.workload.entities.User $r4;
        org.palladiosimulator.pcm.usagemodel.AbstractUserAction $r5;

        r0 := @this: edu.kit.ipd.sdq.eventsim.workload.interpreter.strategies.BranchSimulationStrategy;

        r1 := @parameter0: org.palladiosimulator.pcm.core.entity.Entity;

        r2 := @parameter1: edu.kit.ipd.sdq.eventsim.entities.EventSimEntity;

        r3 := @parameter2: java.util.function.Consumer;

        $r5 = (org.palladiosimulator.pcm.usagemodel.AbstractUserAction) r1;

        $r4 = (edu.kit.ipd.sdq.eventsim.workload.entities.User) r2;

        virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.workload.interpreter.strategies.BranchSimulationStrategy: void simulate(org.palladiosimulator.pcm.usagemodel.AbstractUserAction,edu.kit.ipd.sdq.eventsim.workload.entities.User,java.util.function.Consumer)>($r5, $r4, r3);

        return;
    }

    public static void lambda$0(java.util.function.Consumer, edu.kit.ipd.sdq.eventsim.workload.entities.User, org.palladiosimulator.pcm.usagemodel.Branch)
    {
        java.util.function.Consumer r0;
        edu.kit.ipd.sdq.eventsim.workload.entities.User r1;
        org.palladiosimulator.pcm.usagemodel.Branch r2;
        edu.kit.ipd.sdq.eventsim.interpreter.TraversalInstruction $r3;

        r0 := @parameter0: java.util.function.Consumer;

        r1 := @parameter1: edu.kit.ipd.sdq.eventsim.workload.entities.User;

        r2 := @parameter2: org.palladiosimulator.pcm.usagemodel.Branch;

        $r3 = staticinvoke <edu.kit.ipd.sdq.eventsim.workload.interpreter.strategies.BranchSimulationStrategy$lambda_1__260: edu.kit.ipd.sdq.eventsim.interpreter.TraversalInstruction bootstrap$(edu.kit.ipd.sdq.eventsim.workload.entities.User,org.palladiosimulator.pcm.usagemodel.Branch)>(r1, r2);

        interfaceinvoke r0.<java.util.function.Consumer: void accept(java.lang.Object)>($r3);

        return;
    }

    public static void lambda$1(edu.kit.ipd.sdq.eventsim.workload.entities.User, org.palladiosimulator.pcm.usagemodel.Branch)
    {
        edu.kit.ipd.sdq.eventsim.workload.entities.User r0;
        org.palladiosimulator.pcm.usagemodel.Branch r1;
        org.palladiosimulator.pcm.usagemodel.AbstractUserAction $r2;

        r0 := @parameter0: edu.kit.ipd.sdq.eventsim.workload.entities.User;

        r1 := @parameter1: org.palladiosimulator.pcm.usagemodel.Branch;

        $r2 = interfaceinvoke r1.<org.palladiosimulator.pcm.usagemodel.Branch: org.palladiosimulator.pcm.usagemodel.AbstractUserAction getSuccessor()>();

        virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.workload.entities.User: void simulateAction(org.palladiosimulator.pcm.usagemodel.AbstractUserAction)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <edu.kit.ipd.sdq.eventsim.workload.interpreter.strategies.BranchSimulationStrategy: double SUM_OF_BRANCHING_PROBABILITES_TOLERANCE> = 0.01;

        return;
    }
}
