public class edu.kit.ipd.sdq.eventsim.measurement.r.utils.RHelper extends java.lang.Object
{

    public void <init>()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.utils.RHelper r0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.utils.RHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean hasColumn(org.rosuda.REngine.Rserve.RConnection, java.lang.String, java.lang.String)
    {
        org.rosuda.REngine.Rserve.RConnection r0;
        java.lang.String r1, r2, $r15, $r20, r23;
        org.rosuda.REngine.REXP r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r14, $r18, $r19;
        boolean $z0, $z1;
        java.lang.RuntimeException $r9, $r17, $r22;
        java.lang.Class $r13;
        org.rosuda.REngine.REXPLogical $r16;
        int $i0, $i1;
        edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException $r21;
        boolean[] r25;

        r0 := @parameter0: org.rosuda.REngine.Rserve.RConnection;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("\'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' %in% colnames(");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r23 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = staticinvoke <edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationHelper: org.rosuda.REngine.REXP evaluate(org.rosuda.REngine.Rserve.RConnection,java.lang.String)>(r0, r23);

     label2:
        goto label4;

     label3:
        $r21 := @caughtexception;

        $r22 = new java.lang.RuntimeException;

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r21);

        throw $r22;

     label4:
        $z0 = r3 instanceof org.rosuda.REngine.REXPLogical;

        if $z0 == 0 goto label6;

        $r16 = (org.rosuda.REngine.REXPLogical) r3;

        r25 = virtualinvoke $r16.<org.rosuda.REngine.REXPLogical: boolean[] isTRUE()>();

        $i0 = lengthof r25;

        if $i0 != 1 goto label5;

        $z1 = r25[0];

        return $z1;

     label5:
        $r17 = new java.lang.RuntimeException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expecting result of size 1, but size is ");

        $i1 = lengthof r25;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20);

        throw $r17;

     label6:
        $r9 = new java.lang.RuntimeException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expecting evaluation result of type ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(class "Lorg/rosuda/REngine/REXPLogical;");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but is of type ");

        $r13 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15);

        throw $r9;

        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label1 to label2 with label3;
    }
}
