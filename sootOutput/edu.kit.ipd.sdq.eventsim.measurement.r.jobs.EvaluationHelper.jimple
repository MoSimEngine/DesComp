public class edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationHelper extends java.lang.Object
{

    public void <init>()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationHelper r0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static transient void evaluateVoid(edu.kit.ipd.sdq.eventsim.measurement.r.RContext, java.lang.String[]) throws edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.RContext r0;
        java.lang.String[] r1;
        org.rosuda.REngine.Rserve.RConnection $r2;

        r0 := @parameter0: edu.kit.ipd.sdq.eventsim.measurement.r.RContext;

        r1 := @parameter1: java.lang.String[];

        $r2 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.measurement.r.RContext: org.rosuda.REngine.Rserve.RConnection getConnection()>();

        staticinvoke <edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationHelper: void evaluateVoid(org.rosuda.REngine.Rserve.RConnection,java.lang.String[])>($r2, r1);

        return;
    }

    public static transient void evaluateVoid(org.rosuda.REngine.Rserve.RConnection, java.lang.String[]) throws edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException
    {
        org.rosuda.REngine.Rserve.RConnection r0;
        java.lang.String[] r1;
        java.lang.String r2;
        int i0, i1;
        java.lang.Throwable $r5;
        org.rosuda.REngine.Rserve.RserveException r6;

        r0 := @parameter0: org.rosuda.REngine.Rserve.RConnection;

        r1 := @parameter1: java.lang.String[];

        i0 = lengthof r1;

        i1 = 0;

        goto label6;

     label1:
        r2 = r1[i1];

     label2:
        virtualinvoke r0.<org.rosuda.REngine.Rserve.RConnection: void voidEval(java.lang.String)>(r2);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        r6 = (org.rosuda.REngine.Rserve.RserveException) $r5;

        staticinvoke <edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationHelper: void handleRserveException(org.rosuda.REngine.Rserve.RserveException,org.rosuda.REngine.Rserve.RConnection,java.lang.String)>(r6, r0, r2);

     label5:
        i1 = i1 + 1;

     label6:
        if i1 < i0 goto label1;

        return;

        catch org.rosuda.REngine.Rserve.RserveException from label2 to label3 with label4;
    }

    public static org.rosuda.REngine.REXP evaluate(org.rosuda.REngine.Rserve.RConnection, java.lang.String) throws edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException
    {
        org.rosuda.REngine.Rserve.RConnection r0;
        java.lang.String r1;
        org.rosuda.REngine.REXP $r3;
        java.lang.Throwable $r4;
        org.rosuda.REngine.Rserve.RserveException r5;

        r0 := @parameter0: org.rosuda.REngine.Rserve.RConnection;

        r1 := @parameter1: java.lang.String;

     label1:
        $r3 = virtualinvoke r0.<org.rosuda.REngine.Rserve.RConnection: org.rosuda.REngine.REXP eval(java.lang.String)>(r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r5 = (org.rosuda.REngine.Rserve.RserveException) $r4;

        staticinvoke <edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationHelper: void handleRserveException(org.rosuda.REngine.Rserve.RserveException,org.rosuda.REngine.Rserve.RConnection,java.lang.String)>(r5, r0, r1);

        return null;

        catch org.rosuda.REngine.Rserve.RserveException from label1 to label2 with label3;
    }

    private static void handleRserveException(org.rosuda.REngine.Rserve.RserveException, org.rosuda.REngine.Rserve.RConnection, java.lang.String) throws edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException
    {
        org.rosuda.REngine.Rserve.RserveException r0;
        org.rosuda.REngine.Rserve.RConnection r1;
        java.lang.String r2, $r7, $r10, r12;
        org.rosuda.REngine.REXP $r4;
        java.lang.Object[] $r6;
        java.lang.Throwable $r8;
        java.lang.StringBuilder $r11, r13;
        edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException r14;
        java.lang.Exception r15;

        r0 := @parameter0: org.rosuda.REngine.Rserve.RserveException;

        r1 := @parameter1: org.rosuda.REngine.Rserve.RConnection;

        r2 := @parameter2: java.lang.String;

     label1:
        $r4 = virtualinvoke r1.<org.rosuda.REngine.Rserve.RConnection: org.rosuda.REngine.REXP eval(java.lang.String)>("geterrmessage()");

        r12 = virtualinvoke $r4.<org.rosuda.REngine.REXP: java.lang.String asString()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("Error while identifying cause: ");

        r15 = (java.lang.Exception) $r8;

        $r10 = virtualinvoke r15.<java.lang.Exception: java.lang.String getMessage()>();

        $r11 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        r14 = new edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = r2;

        $r6[1] = r12;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Error for command \"%s\": %s", $r6);

        specialinvoke r14.<edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException: void <init>(java.lang.String)>($r7);

        throw r14;

        catch org.rosuda.REngine.REXPMismatchException from label1 to label2 with label3;
        catch org.rosuda.REngine.Rserve.RserveException from label1 to label2 with label3;
    }
}
