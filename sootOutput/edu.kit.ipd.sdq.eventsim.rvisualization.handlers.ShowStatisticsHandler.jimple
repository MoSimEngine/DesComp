public class edu.kit.ipd.sdq.eventsim.rvisualization.handlers.ShowStatisticsHandler extends org.eclipse.core.commands.AbstractHandler implements org.eclipse.ui.commands.IElementUpdater
{
    public static final java.lang.String COMMAND_ID;
    public static final java.lang.String TOGGLE_STATE_ID;
    private org.eclipse.ui.commands.ICommandService commandService;

    public void <init>()
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.handlers.ShowStatisticsHandler r0;
        org.eclipse.ui.IWorkbench $r1;
        java.lang.Object $r2;
        org.eclipse.ui.commands.ICommandService $r3;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.handlers.ShowStatisticsHandler;

        specialinvoke r0.<org.eclipse.core.commands.AbstractHandler: void <init>()>();

        $r1 = staticinvoke <org.eclipse.ui.PlatformUI: org.eclipse.ui.IWorkbench getWorkbench()>();

        $r2 = interfaceinvoke $r1.<org.eclipse.ui.IWorkbench: java.lang.Object getService(java.lang.Class)>(class "Lorg/eclipse/ui/commands/ICommandService;");

        $r3 = (org.eclipse.ui.commands.ICommandService) $r2;

        r0.<edu.kit.ipd.sdq.eventsim.rvisualization.handlers.ShowStatisticsHandler: org.eclipse.ui.commands.ICommandService commandService> = $r3;

        return;
    }

    public java.lang.Object execute(org.eclipse.core.commands.ExecutionEvent) throws org.eclipse.core.commands.ExecutionException
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.handlers.ShowStatisticsHandler r0;
        org.eclipse.core.commands.ExecutionEvent r1;
        org.eclipse.core.commands.State r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4, $r5;
        boolean $z0, $z1;
        org.eclipse.ui.commands.ICommandService $r6;
        org.eclipse.core.commands.Command $r7;
        java.lang.String $r8;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.handlers.ShowStatisticsHandler;

        r1 := @parameter0: org.eclipse.core.commands.ExecutionEvent;

        r2 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.handlers.ShowStatisticsHandler: org.eclipse.core.commands.State getToggleState()>();

        $r3 = virtualinvoke r2.<org.eclipse.core.commands.State: java.lang.Object getValue()>();

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        $z1 = 0;

        goto label2;

     label1:
        $z1 = 1;

     label2:
        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        virtualinvoke r2.<org.eclipse.core.commands.State: void setValue(java.lang.Object)>($r5);

        $r6 = r0.<edu.kit.ipd.sdq.eventsim.rvisualization.handlers.ShowStatisticsHandler: org.eclipse.ui.commands.ICommandService commandService>;

        $r7 = virtualinvoke r1.<org.eclipse.core.commands.ExecutionEvent: org.eclipse.core.commands.Command getCommand()>();

        $r8 = virtualinvoke $r7.<org.eclipse.core.commands.Command: java.lang.String getId()>();

        interfaceinvoke $r6.<org.eclipse.ui.commands.ICommandService: void refreshElements(java.lang.String,java.util.Map)>($r8, null);

        return null;
    }

    public void updateElement(org.eclipse.ui.menus.UIElement, java.util.Map)
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.handlers.ShowStatisticsHandler r0;
        org.eclipse.ui.menus.UIElement r1;
        java.util.Map r2;
        org.eclipse.core.commands.State r3;
        boolean z0;
        java.lang.Object $r4;
        java.lang.Boolean $r5;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.handlers.ShowStatisticsHandler;

        r1 := @parameter0: org.eclipse.ui.menus.UIElement;

        r2 := @parameter1: java.util.Map;

        r3 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.handlers.ShowStatisticsHandler: org.eclipse.core.commands.State getToggleState()>();

        $r4 = virtualinvoke r3.<org.eclipse.core.commands.State: java.lang.Object getValue()>();

        $r5 = (java.lang.Boolean) $r4;

        z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r1.<org.eclipse.ui.menus.UIElement: void setChecked(boolean)>(z0);

        return;
    }

    private org.eclipse.core.commands.State getToggleState()
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.handlers.ShowStatisticsHandler r0;
        org.eclipse.core.commands.Command r1;
        org.eclipse.ui.commands.ICommandService $r2;
        org.eclipse.core.commands.State $r3;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.handlers.ShowStatisticsHandler;

        $r2 = r0.<edu.kit.ipd.sdq.eventsim.rvisualization.handlers.ShowStatisticsHandler: org.eclipse.ui.commands.ICommandService commandService>;

        r1 = interfaceinvoke $r2.<org.eclipse.ui.commands.ICommandService: org.eclipse.core.commands.Command getCommand(java.lang.String)>("edu.kit.ipd.sdq.eventsim.rvisualization.diagramview.statistics");

        $r3 = virtualinvoke r1.<org.eclipse.core.commands.Command: org.eclipse.core.commands.State getState(java.lang.String)>("edu.kit.ipd.sdq.eventsim.rvisualization.diagramview.statistics.togglestate");

        return $r3;
    }

    public static void <clinit>()
    {
        <edu.kit.ipd.sdq.eventsim.rvisualization.handlers.ShowStatisticsHandler: java.lang.String TOGGLE_STATE_ID> = "edu.kit.ipd.sdq.eventsim.rvisualization.diagramview.statistics.togglestate";

        <edu.kit.ipd.sdq.eventsim.rvisualization.handlers.ShowStatisticsHandler: java.lang.String COMMAND_ID> = "edu.kit.ipd.sdq.eventsim.rvisualization.diagramview.statistics";

        return;
    }
}
