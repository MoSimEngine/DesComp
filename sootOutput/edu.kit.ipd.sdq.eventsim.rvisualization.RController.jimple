public final class edu.kit.ipd.sdq.eventsim.rvisualization.RController extends java.lang.Object
{
    private static final java.lang.String PLOT_MAIN_COLOR;
    private static final org.apache.log4j.Logger LOG;
    public static final java.lang.String CONTENT_VARIABLE;
    public static final java.lang.String LOOKUP_TABLE_VARIABLE;
    private static final java.lang.String IMAGE_VARIABLE;
    public static final java.lang.String METADATA_COLUMN_NAME_PREFIX;
    private static final java.lang.String[] REQUIRED_LIBRARIES;
    private edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel model;
    private edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel selectionModel;
    private static int[] $SWITCH_TABLE$edu$kit$ipd$sdq$eventsim$rvisualization$model$DiagramType;

    static void <clinit>()
    {
        org.apache.log4j.Logger $r0;
        java.lang.String[] $r1;

        <edu.kit.ipd.sdq.eventsim.rvisualization.RController: java.lang.String METADATA_COLUMN_NAME_PREFIX> = "m.";

        <edu.kit.ipd.sdq.eventsim.rvisualization.RController: java.lang.String IMAGE_VARIABLE> = "image";

        <edu.kit.ipd.sdq.eventsim.rvisualization.RController: java.lang.String LOOKUP_TABLE_VARIABLE> = "lookup";

        <edu.kit.ipd.sdq.eventsim.rvisualization.RController: java.lang.String CONTENT_VARIABLE> = "mm";

        <edu.kit.ipd.sdq.eventsim.rvisualization.RController: java.lang.String PLOT_MAIN_COLOR> = "#4699dd";

        $r0 = staticinvoke <org.apache.log4j.LogManager: org.apache.log4j.Logger getLogger(java.lang.Class)>(class "Ledu/kit/ipd/sdq/eventsim/rvisualization/RController;");

        <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG> = $r0;

        $r1 = newarray (java.lang.String)[4];

        $r1[0] = "data.table";

        $r1[1] = "ggplot2";

        $r1[2] = "XML";

        $r1[3] = "svglite";

        <edu.kit.ipd.sdq.eventsim.rvisualization.RController: java.lang.String[] REQUIRED_LIBRARIES> = $r1;

        return;
    }

    public void <init>(edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel, edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel)
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel r1;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel;

        r2 := @parameter1: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel model> = r1;

        r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel selectionModel> = r2;

        return;
    }

    public void initialize()
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: void loadLibraries()>();

        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: void createEmptyDataTableIfMissing()>();

        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: void buildLookupTable()>();

        return;
    }

    public void loadRDS(java.lang.String)
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        java.lang.String r1, r2, $r5;
        java.lang.StringBuilder $r4, $r6, $r7;
        edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException $r9;
        org.apache.log4j.Logger $r10;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        r1 := @parameter0: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("mm<-readRDS(\'");

        $r5 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: java.lang.String convertToRCompliantPath(java.lang.String)>(r1);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')");

        r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.rosuda.REngine.REXP evalRCommand(java.lang.String)>(r2);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r10.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not load measurements from RDS file.", $r9);

     label4:
        return;

        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label1 to label2 with label3;
    }

    private java.lang.String convertToRCompliantPath(java.lang.String)
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        java.lang.String r1, $r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\", "/");

        return $r2;
    }

    private void loadLibraries()
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        java.lang.String r1, r3, $r18;
        int i0, i1;
        org.apache.log4j.Logger $r5, $r13;
        java.lang.String[] $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r12, $r14, $r15, $r16, $r17;
        edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException $r11;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        $r5 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r5.<org.apache.log4j.Logger: void trace(java.lang.Object)>("Loading libraries");

        $r6 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: java.lang.String[] REQUIRED_LIBRARIES>;

        i0 = lengthof $r6;

        i1 = 0;

        goto label6;

     label1:
        r1 = $r6[i1];

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("library(\'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\');");

        r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.rosuda.REngine.REXP evalRCommand(java.lang.String)>(r3);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        $r13 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not load R library ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Use \'install.packages(\'");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\');\' to install the library.");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<org.apache.log4j.Logger: void error(java.lang.Object)>($r18);

     label5:
        i1 = i1 + 1;

     label6:
        if i1 < i0 goto label1;

        return;

        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label2 to label3 with label4;
    }

    private void createEmptyDataTableIfMissing()
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        java.lang.String[] $r2;
        int $i0, i1;
        java.lang.StringBuilder $r3, $r6, $r8, $r9, $r10;
        java.lang.String $r4, $r5, $r7, r14, r15;
        edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException $r12;
        java.lang.RuntimeException $r13;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        $r2 = newarray (java.lang.String)[8];

        $r2[0] = "what";

        $r2[1] = "where.first.id";

        $r2[2] = "where.first.name";

        $r2[3] = "where.second.id";

        $r2[4] = "where.second.name";

        $r2[5] = "assemblycontext.id";

        $r2[6] = "assemblycontext.name";

        $r2[7] = "who.type";

        i1 = 0;

        goto label2;

     label1:
        $r4 = $r2[i1];

        $r3 = new java.lang.StringBuilder;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=factor()");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2[i1] = $r7;

        i1 = i1 + 1;

     label2:
        $i0 = lengthof $r2;

        if i1 < $i0 goto label1;

        r14 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.CharSequence[])>(", ", $r2);

     label3:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("if (!exists(\'mm\')) {mm <- data.table(");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")}");

        r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.rosuda.REngine.REXP evalRCommand(java.lang.String)>(r15);

     label4:
        goto label6;

     label5:
        $r12 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r12);

        throw $r13;

     label6:
        return;

        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label3 to label4 with label5;
    }

    private void buildLookupTable()
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        java.lang.String[] r1, $r5;
        java.util.ArrayList $r2;
        edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection $r3;
        org.rosuda.REngine.Rserve.RConnection $r4;
        boolean $z5;
        int $i0;
        java.lang.Object[] $r6;
        java.lang.StringBuilder $r7, $r9, $r11, $r12, $r13, $r15;
        java.lang.String $r8, $r10, $r14, r21, r22;
        edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException $r17;
        java.lang.RuntimeException $r18;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

     label1:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("what");

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("where.first.id");

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("where.first.name");

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("where.second.id");

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("where.second.name");

        $r3 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection lookupConnection()>();

        $r4 = virtualinvoke $r3.<edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection: org.rosuda.REngine.Rserve.RConnection getConnection()>();

        $z5 = staticinvoke <edu.kit.ipd.sdq.eventsim.measurement.r.utils.RHelper: boolean hasColumn(org.rosuda.REngine.Rserve.RConnection,java.lang.String,java.lang.String)>($r4, "mm", "assemblycontext.id");

        if $z5 == 0 goto label2;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("assemblycontext.id");

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("assemblycontext.name");

     label2:
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("who.type");

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r5 = newarray (java.lang.String)[$i0];

        $r6 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        r1 = (java.lang.String[]) $r6;

        $r7 = new java.lang.StringBuilder;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("if (nrow(mm) > 0) {");

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lookup <- mm[, .(.N), by=.(");

        $r10 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.CharSequence[])>(",", r1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")]");

        r21 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new java.lang.StringBuilder;

        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r21);

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>($r14);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} else {lookup <- mm}");

        r22 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.rosuda.REngine.REXP evalRCommand(java.lang.String)>(r22);

     label3:
        goto label5;

     label4:
        $r17 := @caughtexception;

        $r18 = new java.lang.RuntimeException;

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r17);

        throw $r18;

     label5:
        return;

        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label1 to label3 with label4;
    }

    public java.util.List getMetrics()
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder r1, $r9;
        java.lang.String r2, r4, r6, $r17;
        java.util.Map r5;
        int i0, i1;
        java.lang.String[] r7, r26;
        org.apache.log4j.Logger $r8, $r23, $r25;
        boolean $z0, $z1;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel $r10;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel $r11;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16;
        java.util.List $r18, $r21;
        java.lang.Object $r19;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.TranslatableEntity $r20, r33;
        edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException $r22;
        java.lang.Throwable $r24;
        org.rosuda.REngine.REXP r27;
        java.util.ArrayList $r30;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        $r8 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r8.<org.apache.log4j.Logger: void trace(java.lang.Object)>("Get available metrics");

        $z0 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: boolean isConnected()>();

        if $z0 != 0 goto label01;

        $r21 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r21;

     label01:
        $r9 = new edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder;

        $r11 = r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel model>;

        $r10 = r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel selectionModel>;

        specialinvoke $r9.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: void <init>(edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel,edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel)>($r11, $r10);

        r1 = virtualinvoke $r9.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder metric()>();

        r2 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: java.lang.String build()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("lookup[");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("what");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: java.lang.String unique(java.lang.String,boolean)>($r17, 1);

        r26 = null;

     label02:
        r27 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.rosuda.REngine.REXP evalRCommand(java.lang.String)>(r4);

        $z1 = virtualinvoke r27.<org.rosuda.REngine.REXP: boolean isNull()>();

        if $z1 != 0 goto label03;

        r26 = virtualinvoke r27.<org.rosuda.REngine.REXP: java.lang.String[] asStrings()>();

        goto label07;

     label03:
        $r18 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label04:
        return $r18;

     label05:
        $r24 := @caughtexception;

        $r25 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r25.<org.apache.log4j.Logger: void error(java.lang.Object)>($r24);

        goto label07;

     label06:
        $r22 := @caughtexception;

        $r23 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r23.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not read metrics from R", $r22);

     label07:
        $r30 = new java.util.ArrayList;

        specialinvoke $r30.<java.util.ArrayList: void <init>()>();

        r5 = staticinvoke <edu.kit.ipd.sdq.eventsim.rvisualization.util.Helper: java.util.Map getMetricsLabelExtensions()>();

        r7 = r26;

        i0 = lengthof r26;

        i1 = 0;

        goto label10;

     label08:
        r6 = r7[i1];

        $r19 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r33 = (edu.kit.ipd.sdq.eventsim.rvisualization.model.TranslatableEntity) $r19;

        if r33 != null goto label09;

        $r20 = new edu.kit.ipd.sdq.eventsim.rvisualization.model.TranslatableEntity;

        specialinvoke $r20.<edu.kit.ipd.sdq.eventsim.rvisualization.model.TranslatableEntity: void <init>(java.lang.String,java.lang.String)>(r6, r6);

        r33 = $r20;

     label09:
        interfaceinvoke $r30.<java.util.List: boolean add(java.lang.Object)>(r33);

        i1 = i1 + 1;

     label10:
        if i1 < i0 goto label08;

        return $r30;

        catch org.rosuda.REngine.REXPMismatchException from label02 to label04 with label05;
        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label02 to label04 with label06;
    }

    public java.util.List getMeasuringPointsTo()
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        java.util.List $r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        $r1 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: java.util.List getMeasuringPointsInternal(boolean)>(0);

        return $r1;
    }

    public java.util.List getMeasuringPointsFrom()
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        java.util.List $r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        $r1 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: java.util.List getMeasuringPointsInternal(boolean)>(1);

        return $r1;
    }

    private java.util.List getMeasuringPointsInternal(boolean)
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        boolean z0, $z1;
        java.lang.String r2, r3, $r20, $r25, $r26, r38;
        org.rosuda.REngine.RList r4;
        java.lang.String[] r5, r6;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel $r7, $r11, $r28;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.TranslatableEntity $r8;
        java.util.ArrayList $r9;
        edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder $r10, $r13, $r14, r37;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel $r12;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r19;
        org.rosuda.REngine.REXP $r21, $r22, $r23;
        int $i0, $i1, i2;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.Entity $r24, $r29;
        java.util.List $r27, $r30, $r31, $r32;
        edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException $r33;
        org.apache.log4j.Logger $r34, $r36;
        java.lang.Throwable $r35;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: boolean isConnected()>();

        if $z1 != 0 goto label01;

        $r32 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r32;

     label01:
        $r7 = r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel selectionModel>;

        $r8 = virtualinvoke $r7.<edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel: edu.kit.ipd.sdq.eventsim.rvisualization.model.TranslatableEntity getMetric()>();

        if $r8 != null goto label02;

        $r31 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r31;

     label02:
        if z0 != 0 goto label03;

        $r28 = r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel selectionModel>;

        $r29 = virtualinvoke $r28.<edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel: edu.kit.ipd.sdq.eventsim.rvisualization.model.Entity getMeasuringPointFrom()>();

        if $r29 != null goto label03;

        $r30 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r30;

     label03:
        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

     label04:
        $r10 = new edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder;

        $r12 = r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel model>;

        $r11 = r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel selectionModel>;

        specialinvoke $r10.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: void <init>(edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel,edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel)>($r12, $r11);

        $r13 = virtualinvoke $r10.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder metric()>();

        $r14 = virtualinvoke $r13.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder triggerType()>();

        r37 = virtualinvoke $r14.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder assembly()>();

        if z0 == 0 goto label05;

        r38 = "list(id=where.first.id, name=where.first.name)";

        goto label06;

     label05:
        r37 = virtualinvoke r37.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder 'from'()>();

        r38 = "list(id=where.second.id, name=where.second.name)";

     label06:
        r2 = virtualinvoke r37.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: java.lang.String build()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("lookup[");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: java.lang.String unique(java.lang.String,boolean)>($r20, 1);

        $r21 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.rosuda.REngine.REXP evalRCommand(java.lang.String)>(r3);

        r4 = virtualinvoke $r21.<org.rosuda.REngine.REXP: org.rosuda.REngine.RList asList()>();

        $i0 = virtualinvoke r4.<org.rosuda.REngine.RList: int size()>();

        if $i0 != 0 goto label08;

        $r27 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label07:
        return $r27;

     label08:
        $r22 = virtualinvoke r4.<org.rosuda.REngine.RList: org.rosuda.REngine.REXP at(java.lang.String)>("id");

        r5 = virtualinvoke $r22.<org.rosuda.REngine.REXP: java.lang.String[] asStrings()>();

        $r23 = virtualinvoke r4.<org.rosuda.REngine.RList: org.rosuda.REngine.REXP at(java.lang.String)>("name");

        r6 = virtualinvoke $r23.<org.rosuda.REngine.REXP: java.lang.String[] asStrings()>();

        i2 = 0;

        goto label10;

     label09:
        $r24 = new edu.kit.ipd.sdq.eventsim.rvisualization.model.Entity;

        $r26 = r5[i2];

        $r25 = r6[i2];

        specialinvoke $r24.<edu.kit.ipd.sdq.eventsim.rvisualization.model.Entity: void <init>(java.lang.String,java.lang.String)>($r26, $r25);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r24);

        i2 = i2 + 1;

     label10:
        $i1 = lengthof r5;

        if i2 < $i1 goto label09;

     label11:
        goto label14;

     label12:
        $r35 := @caughtexception;

        $r36 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r36.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not measuring points from R", $r35);

        goto label14;

     label13:
        $r33 := @caughtexception;

        $r34 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r34.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not measuring points from R", $r33);

     label14:
        return $r9;

        catch org.rosuda.REngine.REXPMismatchException from label04 to label07 with label12;
        catch org.rosuda.REngine.REXPMismatchException from label08 to label11 with label12;
        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label04 to label07 with label13;
        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label08 to label11 with label13;
    }

    public java.util.List getTriggerInstances()
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder r1, $r8, $r11, $r12, $r13;
        java.lang.String r2, r4, $r24, $r25;
        java.lang.String[] r6, r7;
        boolean $z0;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel $r9;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel $r10;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r18;
        java.util.ArrayList $r19;
        org.rosuda.REngine.REXP $r20, $r21, $r22;
        int $i0, $i1, i2;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.Entity $r23;
        java.util.List $r26, $r27;
        edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException $r28;
        org.apache.log4j.Logger $r29, $r31;
        java.lang.Throwable $r30;
        org.rosuda.REngine.RList r32;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        $z0 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: boolean isConnected()>();

        if $z0 != 0 goto label01;

        $r27 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r27;

     label01:
        $r8 = new edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder;

        $r10 = r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel model>;

        $r9 = r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel selectionModel>;

        specialinvoke $r8.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: void <init>(edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel,edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel)>($r10, $r9);

        $r11 = virtualinvoke $r8.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder metric()>();

        $r12 = virtualinvoke $r11.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder lowerTime()>();

        $r13 = virtualinvoke $r12.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder upperTime()>();

        r1 = virtualinvoke $r13.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder triggerType()>();

        r2 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: java.lang.String build()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("mm[");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("list(id=who.id, name=who.name)");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r4 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

     label02:
        $r20 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.rosuda.REngine.REXP evalRCommand(java.lang.String)>(r4);

        r32 = virtualinvoke $r20.<org.rosuda.REngine.REXP: org.rosuda.REngine.RList asList()>();

        $i0 = virtualinvoke r32.<org.rosuda.REngine.RList: int size()>();

        if $i0 != 0 goto label04;

        $r26 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label03:
        return $r26;

     label04:
        $r21 = virtualinvoke r32.<org.rosuda.REngine.RList: org.rosuda.REngine.REXP at(java.lang.String)>("id");

        r6 = virtualinvoke $r21.<org.rosuda.REngine.REXP: java.lang.String[] asStrings()>();

        $r22 = virtualinvoke r32.<org.rosuda.REngine.RList: org.rosuda.REngine.REXP at(java.lang.String)>("name");

        r7 = virtualinvoke $r22.<org.rosuda.REngine.REXP: java.lang.String[] asStrings()>();

        i2 = 0;

        goto label06;

     label05:
        $r23 = new edu.kit.ipd.sdq.eventsim.rvisualization.model.Entity;

        $r25 = r6[i2];

        $r24 = r7[i2];

        specialinvoke $r23.<edu.kit.ipd.sdq.eventsim.rvisualization.model.Entity: void <init>(java.lang.String,java.lang.String)>($r25, $r24);

        virtualinvoke $r19.<java.util.ArrayList: boolean add(java.lang.Object)>($r23);

        i2 = i2 + 1;

     label06:
        $i1 = lengthof r6;

        if i2 < $i1 goto label05;

     label07:
        goto label10;

     label08:
        $r30 := @caughtexception;

        $r31 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r31.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not read trigger instances from R", $r30);

        goto label10;

     label09:
        $r28 := @caughtexception;

        $r29 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r29.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not read trigger instances from R", $r28);

     label10:
        return $r19;

        catch org.rosuda.REngine.REXPMismatchException from label02 to label03 with label08;
        catch org.rosuda.REngine.REXPMismatchException from label04 to label07 with label08;
        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label02 to label03 with label09;
        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label04 to label07 with label09;
    }

    public int getNumberOfTriggerInstances()
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        java.lang.String r1, r2, $r13, $r14;
        boolean $z0;
        edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder $r3, $r6, $r7, $r8, r21;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel $r4;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel $r5;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r15;
        org.rosuda.REngine.REXP $r16;
        edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException $r17;
        org.apache.log4j.Logger $r18, $r20;
        java.lang.Throwable $r19;
        int i0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        $z0 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        i0 = 0;

     label2:
        $r3 = new edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder;

        $r5 = r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel model>;

        $r4 = r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel selectionModel>;

        specialinvoke $r3.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: void <init>(edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel,edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel)>($r5, $r4);

        $r6 = virtualinvoke $r3.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder metric()>();

        $r7 = virtualinvoke $r6.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder lowerTime()>();

        $r8 = virtualinvoke $r7.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder upperTime()>();

        r21 = virtualinvoke $r8.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder triggerType()>();

        r1 = virtualinvoke r21.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: java.lang.String build()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("length(");

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("mm[");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]$who.id)");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: java.lang.String unique(java.lang.String,boolean)>($r13, 1);

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        r2 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.rosuda.REngine.REXP evalRCommand(java.lang.String)>(r2);

        i0 = virtualinvoke $r16.<org.rosuda.REngine.REXP: int asInteger()>();

     label3:
        goto label6;

     label4:
        $r19 := @caughtexception;

        $r20 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r20.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not read number of trigger instances from R", $r19);

        goto label6;

     label5:
        $r17 := @caughtexception;

        $r18 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r18.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not read number of trigger instances from R", $r17);

     label6:
        return i0;

        catch org.rosuda.REngine.REXPMismatchException from label2 to label3 with label4;
        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label2 to label3 with label5;
    }

    public java.util.List getTriggerTypes()
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        java.lang.String r1, r3, r6, $r19;
        java.lang.String[] r5;
        int i0, $i1, i2;
        boolean $z0;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel $r8, $r11;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.TranslatableEntity $r9, $r23;
        edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder $r10, $r13;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel $r12;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r18;
        java.util.ArrayList $r20;
        org.rosuda.REngine.REXP $r21, $r22;
        java.util.List $r24, $r25, $r26;
        edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException $r27;
        org.apache.log4j.Logger $r28, $r30;
        java.lang.Throwable $r29;
        org.rosuda.REngine.RList r31;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        $z0 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: boolean isConnected()>();

        if $z0 != 0 goto label01;

        $r26 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r26;

     label01:
        $r8 = r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel selectionModel>;

        $r9 = virtualinvoke $r8.<edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel: edu.kit.ipd.sdq.eventsim.rvisualization.model.TranslatableEntity getMetric()>();

        if $r9 != null goto label02;

        $r25 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r25;

     label02:
        $r10 = new edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder;

        $r12 = r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel model>;

        $r11 = r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel selectionModel>;

        specialinvoke $r10.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: void <init>(edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel,edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel)>($r12, $r11);

        $r13 = virtualinvoke $r10.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder metric()>();

        r1 = virtualinvoke $r13.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: java.lang.String build()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("lookup[");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("list(type=who.type)");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: java.lang.String unique(java.lang.String,boolean)>($r19, 1);

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

     label03:
        $r21 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.rosuda.REngine.REXP evalRCommand(java.lang.String)>(r3);

        r31 = virtualinvoke $r21.<org.rosuda.REngine.REXP: org.rosuda.REngine.RList asList()>();

        $i1 = virtualinvoke r31.<org.rosuda.REngine.RList: int size()>();

        if $i1 != 0 goto label05;

        $r24 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label04:
        return $r24;

     label05:
        $r22 = virtualinvoke r31.<org.rosuda.REngine.RList: org.rosuda.REngine.REXP at(java.lang.String)>("type");

        r5 = virtualinvoke $r22.<org.rosuda.REngine.REXP: java.lang.String[] asStrings()>();

        i0 = lengthof r5;

        i2 = 0;

        goto label07;

     label06:
        r6 = r5[i2];

        $r23 = new edu.kit.ipd.sdq.eventsim.rvisualization.model.TranslatableEntity;

        specialinvoke $r23.<edu.kit.ipd.sdq.eventsim.rvisualization.model.TranslatableEntity: void <init>(java.lang.String,java.lang.String)>(r6, r6);

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r23);

        i2 = i2 + 1;

     label07:
        if i2 < i0 goto label06;

     label08:
        goto label11;

     label09:
        $r29 := @caughtexception;

        $r30 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r30.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not read trigger types from R", $r29);

        goto label11;

     label10:
        $r27 := @caughtexception;

        $r28 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r28.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not read trigger types from R", $r27);

     label11:
        return $r20;

        catch org.rosuda.REngine.REXPMismatchException from label03 to label04 with label09;
        catch org.rosuda.REngine.REXPMismatchException from label05 to label08 with label09;
        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label03 to label04 with label10;
        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label05 to label08 with label10;
    }

    public java.util.List getAssemblyContexts()
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        java.lang.String r1, r3, $r19, $r25, $r26;
        java.lang.String[] r5, r6;
        boolean $z0;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel $r7, $r10;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.TranslatableEntity $r8;
        edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder $r9, $r12, $r13;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel $r11;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r18;
        java.util.ArrayList $r20;
        org.rosuda.REngine.REXP $r21, $r22, $r23;
        int $i0, $i1, i2;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.Entity $r24;
        java.util.List $r27, $r28, $r29;
        java.lang.Throwable $r30;
        org.apache.log4j.Logger $r31, $r33;
        edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException $r32;
        org.rosuda.REngine.RList r34;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        $z0 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: boolean isConnected()>();

        if $z0 != 0 goto label01;

        $r29 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r29;

     label01:
        $r7 = r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel selectionModel>;

        $r8 = virtualinvoke $r7.<edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel: edu.kit.ipd.sdq.eventsim.rvisualization.model.TranslatableEntity getMetric()>();

        if $r8 != null goto label02;

        $r28 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r28;

     label02:
        $r9 = new edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder;

        $r11 = r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel model>;

        $r10 = r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel selectionModel>;

        specialinvoke $r9.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: void <init>(edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel,edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel)>($r11, $r10);

        $r12 = virtualinvoke $r9.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder metric()>();

        $r13 = virtualinvoke $r12.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder triggerType()>();

        r1 = virtualinvoke $r13.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: java.lang.String build()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("lookup[");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("list(id=assemblycontext.id, name=assemblycontext.name)");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: java.lang.String unique(java.lang.String,boolean)>($r19, 1);

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

     label03:
        $r21 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.rosuda.REngine.REXP evalRCommand(java.lang.String)>(r3);

        r34 = virtualinvoke $r21.<org.rosuda.REngine.REXP: org.rosuda.REngine.RList asList()>();

        $i0 = virtualinvoke r34.<org.rosuda.REngine.RList: int size()>();

        if $i0 != 0 goto label05;

        $r27 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label04:
        return $r27;

     label05:
        $r22 = virtualinvoke r34.<org.rosuda.REngine.RList: org.rosuda.REngine.REXP at(java.lang.String)>("id");

        r5 = virtualinvoke $r22.<org.rosuda.REngine.REXP: java.lang.String[] asStrings()>();

        $r23 = virtualinvoke r34.<org.rosuda.REngine.RList: org.rosuda.REngine.REXP at(java.lang.String)>("name");

        r6 = virtualinvoke $r23.<org.rosuda.REngine.REXP: java.lang.String[] asStrings()>();

        i2 = 0;

        goto label07;

     label06:
        $r24 = new edu.kit.ipd.sdq.eventsim.rvisualization.model.Entity;

        $r26 = r5[i2];

        $r25 = r6[i2];

        specialinvoke $r24.<edu.kit.ipd.sdq.eventsim.rvisualization.model.Entity: void <init>(java.lang.String,java.lang.String)>($r26, $r25);

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r24);

        i2 = i2 + 1;

     label07:
        $i1 = lengthof r5;

        if i2 < $i1 goto label06;

     label08:
        goto label11;

     label09:
        $r30 := @caughtexception;

        $r31 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r31.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not read assembly contexts from R", $r30);

        goto label11;

     label10:
        $r32 := @caughtexception;

        $r33 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r33.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not read assembly contexts from R", $r32);

     label11:
        return $r20;

        catch org.rosuda.REngine.REXPMismatchException from label03 to label04 with label09;
        catch org.rosuda.REngine.REXPMismatchException from label05 to label08 with label09;
        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label03 to label04 with label10;
        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label05 to label08 with label10;
    }

    public java.util.List getMetadataNames()
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        java.lang.String r1;
        int i0, i1;
        java.lang.String[] r2, r10;
        boolean $z0, $z1;
        org.rosuda.REngine.REXP $r3;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.TranslatableEntity $r4;
        java.util.List $r5;
        java.lang.Throwable $r6;
        org.apache.log4j.Logger $r7, $r9;
        edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException $r8;
        java.util.ArrayList $r14;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        $z0 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r5;

     label1:
        r10 = null;

     label2:
        $r3 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.rosuda.REngine.REXP evalRCommand(java.lang.String)>("colnames(mm)");

        r10 = virtualinvoke $r3.<org.rosuda.REngine.REXP: java.lang.String[] asStrings()>();

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        $r7 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r7.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not read metadata column names from R", $r6);

        goto label6;

     label5:
        $r8 := @caughtexception;

        $r9 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r9.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not read metadata column names from R", $r8);

     label6:
        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r2 = r10;

        i0 = lengthof r10;

        i1 = 0;

        goto label9;

     label7:
        r1 = r2[i1];

        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("m.");

        if $z1 == 0 goto label8;

        $r4 = new edu.kit.ipd.sdq.eventsim.rvisualization.model.TranslatableEntity;

        specialinvoke $r4.<edu.kit.ipd.sdq.eventsim.rvisualization.model.TranslatableEntity: void <init>(java.lang.String,java.lang.String)>(r1, r1);

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r4);

     label8:
        i1 = i1 + 1;

     label9:
        if i1 < i0 goto label7;

        return $r14;

        catch org.rosuda.REngine.REXPMismatchException from label2 to label3 with label4;
        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label2 to label3 with label5;
    }

    public java.util.List getMetadata(java.lang.String)
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        java.lang.String r1, r2, r3, r6, $r23;
        java.lang.String[] r4;
        int i0, $i1, i2;
        boolean $z0;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel $r8, $r11;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.TranslatableEntity $r9;
        edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder $r10, $r13;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel $r12;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r18;
        org.rosuda.REngine.REXP $r19, $r20;
        java.util.ArrayList $r21;
        edu.kit.ipd.sdq.eventsim.measurement.Metadata $r22;
        java.util.List $r25, $r26, $r27;
        edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException $r28;
        org.apache.log4j.Logger $r29, $r31;
        java.lang.Throwable $r30;
        org.rosuda.REngine.RList r32;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: boolean isConnected()>();

        if $z0 != 0 goto label01;

        $r27 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r27;

     label01:
        $r8 = r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel selectionModel>;

        $r9 = virtualinvoke $r8.<edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel: edu.kit.ipd.sdq.eventsim.rvisualization.model.TranslatableEntity getMetric()>();

        if $r9 != null goto label02;

        $r26 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r26;

     label02:
        $r10 = new edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder;

        $r12 = r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel model>;

        $r11 = r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel selectionModel>;

        specialinvoke $r10.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: void <init>(edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel,edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel)>($r12, $r11);

        $r13 = virtualinvoke $r10.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder metric()>();

        r2 = virtualinvoke $r13.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: java.lang.String build()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("mm[");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", .(.N), by=.(");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")]");

        r3 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        $r19 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.rosuda.REngine.REXP evalRCommand(java.lang.String)>(r3);

        r32 = virtualinvoke $r19.<org.rosuda.REngine.REXP: org.rosuda.REngine.RList asList()>();

        $r20 = virtualinvoke r32.<org.rosuda.REngine.RList: org.rosuda.REngine.REXP at(java.lang.String)>(r1);

        r4 = virtualinvoke $r20.<org.rosuda.REngine.REXP: java.lang.String[] asStrings()>();

        $i1 = lengthof r4;

        if $i1 != 1 goto label05;

        $r23 = r4[0];

        if $r23 != null goto label05;

        $r25 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label04:
        return $r25;

     label05:
        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        i0 = lengthof r4;

        i2 = 0;

        goto label07;

     label06:
        r6 = r4[i2];

        $r22 = new edu.kit.ipd.sdq.eventsim.measurement.Metadata;

        specialinvoke $r22.<edu.kit.ipd.sdq.eventsim.measurement.Metadata: void <init>(java.lang.String,java.lang.Object)>(r1, r6);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r22);

        i2 = i2 + 1;

     label07:
        if i2 < i0 goto label06;

     label08:
        return $r21;

     label09:
        $r30 := @caughtexception;

        $r31 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r31.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not read metadata column names from R", $r30);

        goto label11;

     label10:
        $r28 := @caughtexception;

        $r29 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r29.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not read metadata column names from R", $r28);

     label11:
        return null;

        catch org.rosuda.REngine.REXPMismatchException from label03 to label04 with label09;
        catch org.rosuda.REngine.REXPMismatchException from label05 to label08 with label09;
        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label03 to label04 with label10;
        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label05 to label08 with label10;
    }

    public int getNumberOfDiagramValues()
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        java.lang.String r1, r3;
        org.rosuda.REngine.REXP r4;
        boolean $z0;
        edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder $r5, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, r25;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel $r6;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel $r7;
        java.lang.StringBuilder $r16, $r17, $r18, $r19, $r20;
        edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException $r21;
        org.apache.log4j.Logger $r22, $r24;
        java.lang.Throwable $r23;
        int i0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        $z0 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        i0 = 0;

     label2:
        $r5 = new edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder;

        $r7 = r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel model>;

        $r6 = r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel selectionModel>;

        specialinvoke $r5.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: void <init>(edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel,edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel)>($r7, $r6);

        $r8 = virtualinvoke $r5.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder metric()>();

        $r9 = virtualinvoke $r8.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder lowerTime()>();

        $r10 = virtualinvoke $r9.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder upperTime()>();

        $r11 = virtualinvoke $r10.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder triggerType()>();

        $r12 = virtualinvoke $r11.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder triggerInstance()>();

        $r13 = virtualinvoke $r12.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder assembly()>();

        $r14 = virtualinvoke $r13.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder 'from'()>();

        $r15 = virtualinvoke $r14.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder 'to'()>();

        r25 = virtualinvoke $r15.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder metadata()>();

        r1 = virtualinvoke r25.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: java.lang.String build()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("nrow(mm[");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("])");

        r3 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.rosuda.REngine.REXP evalRCommand(java.lang.String)>(r3);

        i0 = virtualinvoke r4.<org.rosuda.REngine.REXP: int asInteger()>();

     label3:
        goto label6;

     label4:
        $r23 := @caughtexception;

        $r24 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r24.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not read number of diagram values from R", $r23);

        goto label6;

     label5:
        $r21 := @caughtexception;

        $r22 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r22.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not read number of diagram values from R", $r21);

     label6:
        return i0;

        catch org.rosuda.REngine.REXPMismatchException from label2 to label3 with label4;
        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label2 to label3 with label5;
    }

    public int getMeasurementsCount()
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        org.rosuda.REngine.REXP r1;
        boolean $z0;
        edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException $r2;
        org.apache.log4j.Logger $r3, $r5;
        java.lang.Throwable $r4;
        int i0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        $z0 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        i0 = 0;

     label2:
        r1 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.rosuda.REngine.REXP evalRCommand(java.lang.String)>("nrow(mm)");

        i0 = virtualinvoke r1.<org.rosuda.REngine.REXP: int asInteger()>();

     label3:
        goto label6;

     label4:
        $r4 := @caughtexception;

        $r5 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r5.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not read measurement count from R", $r4);

        goto label6;

     label5:
        $r2 := @caughtexception;

        $r3 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r3.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not read measurement count from R", $r2);

     label6:
        return i0;

        catch org.rosuda.REngine.REXPMismatchException from label2 to label3 with label4;
        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label2 to label3 with label5;
    }

    public int getMemoryConsumptionInMB()
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        org.rosuda.REngine.REXP r1;
        boolean $z0;
        java.lang.String $r2, $r3, $r4, $r5;
        java.lang.Throwable $r6;
        org.apache.log4j.Logger $r7, $r9;
        edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException $r8;
        int i0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        $z0 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        i0 = 0;

     label2:
        r1 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.rosuda.REngine.REXP evalRCommand(java.lang.String)>("tables(silent=TRUE)[NAME==\'mm\']$MB");

        $r2 = virtualinvoke r1.<org.rosuda.REngine.REXP: java.lang.String asString()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(",", "");

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(".", "");

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        $r7 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r7.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not calculate memory consumption", $r6);

        goto label6;

     label5:
        $r8 := @caughtexception;

        $r9 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r9.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not calculate memory consumption", $r8);

     label6:
        return i0;

        catch org.rosuda.REngine.REXPMismatchException from label2 to label3 with label4;
        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label2 to label3 with label5;
    }

    public int getSimulationTimeMax()
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        boolean $z0;
        edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException $r1;
        org.apache.log4j.Logger $r2, $r4;
        java.lang.Throwable $r3;
        int i0;
        org.rosuda.REngine.REXP r5;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        $z0 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        i0 = 0;

     label2:
        r5 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.rosuda.REngine.REXP evalRCommand(java.lang.String)>("max(mm$when)");

        i0 = virtualinvoke r5.<org.rosuda.REngine.REXP: int asInteger()>();

     label3:
        goto label6;

     label4:
        $r3 := @caughtexception;

        $r4 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r4.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not read simulation time maximum from R", $r3);

        goto label6;

     label5:
        $r1 := @caughtexception;

        $r2 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r2.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not read simulation time maximum from R", $r1);

     label6:
        return i0;

        catch org.rosuda.REngine.REXPMismatchException from label2 to label3 with label4;
        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label2 to label3 with label5;
    }

    public int getSimulationTimeMin()
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        boolean $z0;
        edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException $r1;
        org.apache.log4j.Logger $r2, $r4;
        java.lang.Throwable $r3;
        int i0;
        org.rosuda.REngine.REXP r5;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        $z0 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        i0 = 0;

     label2:
        r5 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.rosuda.REngine.REXP evalRCommand(java.lang.String)>("min(mm$when)");

        i0 = virtualinvoke r5.<org.rosuda.REngine.REXP: int asInteger()>();

     label3:
        goto label6;

     label4:
        $r3 := @caughtexception;

        $r4 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r4.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not read simulation time minimum from R", $r3);

        goto label6;

     label5:
        $r1 := @caughtexception;

        $r2 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r2.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not read simulation time minimum from R", $r1);

     label6:
        return i0;

        catch org.rosuda.REngine.REXPMismatchException from label2 to label3 with label4;
        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label2 to label3 with label5;
    }

    private java.lang.String unique(java.lang.String, boolean)
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        java.lang.String r1, $r5, $r9;
        boolean z0;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r7, $r8;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("na.omit(unique(");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("))");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("unique(");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public double[] getStatistics(java.lang.String)
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        java.lang.String r1, $r9, r22;
        org.rosuda.REngine.RList r2;
        double[] r3, r4, r5, r6, r7;
        boolean $z0;
        java.lang.StringBuilder $r8, $r10, $r11, $r12;
        org.rosuda.REngine.REXP $r13, $r14, $r15, $r16, $r17;
        double $d0, $d1, $d2, $d3;
        int $i0, $i1, i3, i4, i5;
        java.lang.Throwable $r18;
        org.apache.log4j.Logger $r19, $r21;
        edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException $r20;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r8 = new java.lang.StringBuilder;

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>($r9);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[, .(count=.N, mean=mean(.SD$value, na.rm=TRUE), ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("quartiles=quantile(.SD$value, probs = seq(0, 1, 0.25), na.rm=TRUE), ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("quantiles=quantile(.SD$value, probs=seq(0.1, 0.9, by=0.1), na.rm=TRUE))]");

        r22 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.rosuda.REngine.REXP evalRCommand(java.lang.String)>(r22);

        r2 = virtualinvoke $r13.<org.rosuda.REngine.REXP: org.rosuda.REngine.RList asList()>();

        $r14 = virtualinvoke r2.<org.rosuda.REngine.RList: org.rosuda.REngine.REXP at(java.lang.String)>("count");

        r3 = virtualinvoke $r14.<org.rosuda.REngine.REXP: double[] asDoubles()>();

        $r15 = virtualinvoke r2.<org.rosuda.REngine.RList: org.rosuda.REngine.REXP at(java.lang.String)>("mean");

        r4 = virtualinvoke $r15.<org.rosuda.REngine.REXP: double[] asDoubles()>();

        $r16 = virtualinvoke r2.<org.rosuda.REngine.RList: org.rosuda.REngine.REXP at(java.lang.String)>("quartiles");

        r5 = virtualinvoke $r16.<org.rosuda.REngine.REXP: double[] asDoubles()>();

        $r17 = virtualinvoke r2.<org.rosuda.REngine.RList: org.rosuda.REngine.REXP at(java.lang.String)>("quantiles");

        r6 = virtualinvoke $r17.<org.rosuda.REngine.REXP: double[] asDoubles()>();

        r7 = newarray (double)[16];

        $d0 = r3[0];

        r7[0] = $d0;

        $d1 = r4[0];

        r7[1] = $d1;

        i3 = 0;

        goto label3;

     label2:
        $i0 = i3 + 2;

        $d2 = r5[i3];

        r7[$i0] = $d2;

        i3 = i3 + 1;

     label3:
        if i3 < 5 goto label2;

        i4 = 2 + 5;

        i5 = 0;

        goto label5;

     label4:
        $i1 = i5 + i4;

        $d3 = r6[i5];

        r7[$i1] = $d3;

        i5 = i5 + 1;

     label5:
        if i5 < 9 goto label4;

     label6:
        return r7;

     label7:
        $r18 := @caughtexception;

        $r19 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r19.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not calculate statistics via R", $r18);

        goto label9;

     label8:
        $r20 := @caughtexception;

        $r21 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r21.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not calculate statistics via R", $r20);

     label9:
        return null;

        catch org.rosuda.REngine.REXPMismatchException from label1 to label6 with label7;
        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label1 to label6 with label8;
    }

    public java.lang.String getFilterExpression(edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel)
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel r1;
        edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder r2, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        java.lang.String r3, $r20;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel $r6;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r19;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel;

        $r5 = new edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder;

        $r6 = r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel model>;

        specialinvoke $r5.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: void <init>(edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterModel,edu.kit.ipd.sdq.eventsim.rvisualization.model.FilterSelectionModel)>($r6, r1);

        $r7 = virtualinvoke $r5.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder metric()>();

        $r8 = virtualinvoke $r7.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder lowerTime()>();

        $r9 = virtualinvoke $r8.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder upperTime()>();

        $r10 = virtualinvoke $r9.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder triggerType()>();

        $r11 = virtualinvoke $r10.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder triggerInstance()>();

        $r12 = virtualinvoke $r11.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder assembly()>();

        $r13 = virtualinvoke $r12.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder 'from'()>();

        $r14 = virtualinvoke $r13.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder 'to'()>();

        r2 = virtualinvoke $r14.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder metadata()>();

        r3 = virtualinvoke r2.<edu.kit.ipd.sdq.eventsim.rvisualization.filter.ConditionBuilder: java.lang.String build()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("mm[");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r20;
    }

    public java.lang.String plotDiagramToFile(edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramModel, edu.kit.ipd.sdq.eventsim.rvisualization.model.VariableBindingModel, java.lang.String, java.lang.String)
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramModel r1;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.VariableBindingModel r2;
        java.lang.String r3, r4, r5, $r8, $r15, $r20, $r23, $r26, $r29, $r34, r39, r40, r41, r42, r43, r44, r45;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r21, $r22, $r24, $r25, $r27, $r28, $r30, $r31, $r32, $r33, $r35;
        edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException $r37;
        org.apache.log4j.Logger $r38;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramModel;

        r2 := @parameter1: edu.kit.ipd.sdq.eventsim.rvisualization.model.VariableBindingModel;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: java.lang.String getDiagramSpecificPlotCommand(edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramModel,edu.kit.ipd.sdq.eventsim.rvisualization.model.VariableBindingModel,java.lang.String,java.lang.String)>(r1, r2, r4, "image");

        $r7 = new java.lang.StringBuilder;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r5);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ggsave(file=\'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', plot=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("image");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", width=10, height=10);");

        r39 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = new java.lang.StringBuilder;

        $r15 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r39);

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>($r15);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("svgImage<-xmlParse(\'");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\');");

        r40 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = new java.lang.StringBuilder;

        $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r40);

        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>($r20);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rootElement = xmlRoot(svgImage);");

        r41 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = new java.lang.StringBuilder;

        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r41);

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>($r23);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addAttributes(rootElement, \'width\'=\'100%\');");

        r42 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = new java.lang.StringBuilder;

        $r26 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r42);

        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>($r26);

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addAttributes(rootElement, \'height\'=\'100%\');");

        r43 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = new java.lang.StringBuilder;

        $r29 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r43);

        specialinvoke $r28.<java.lang.StringBuilder: void <init>(java.lang.String)>($r29);

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saveXML(rootElement, file=\'");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\');");

        r44 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        $r33 = new java.lang.StringBuilder;

        $r34 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r44);

        specialinvoke $r33.<java.lang.StringBuilder: void <init>(java.lang.String)>($r34);

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rm(svgImage);rm(rootElement);");

        r45 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.rosuda.REngine.REXP evalRCommand(java.lang.String)>(r45);

     label2:
        goto label4;

     label3:
        $r37 := @caughtexception;

        $r38 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        virtualinvoke $r38.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>("Could not plot diagram via R", $r37);

     label4:
        return r5;

        catch edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException from label1 to label2 with label3;
    }

    private java.lang.String getDiagramSpecificPlotCommand(edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramModel, edu.kit.ipd.sdq.eventsim.rvisualization.model.VariableBindingModel, java.lang.String, java.lang.String)
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramModel r1;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.VariableBindingModel r2;
        java.lang.String r3, r4, $r19, $r20, $r21, $r23, $r25, $r30, $r34, $r36, $r39, $r71, r75;
        java.util.Iterator r5;
        edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic r6, $r10, $r12, $r40, $r42, $r47, $r50, $r55, $r57, $r62;
        edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot $r7, $r11, $r38, $r41, $r56, r72;
        int[] $r8;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramType $r9, $r69;
        int $i0, $i1;
        edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Geom $r14, $r44, $r52, $r59, $r64;
        edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Layer $r15, $r45, $r46, $r48, $r53, $r60, $r65;
        edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Theme $r17;
        java.lang.StringBuilder $r22, $r24, $r26, $r27, $r28, $r29, $r68, $r70;
        java.util.List $r31, $r73;
        boolean $z0;
        java.lang.Object $r32;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.TranslatableEntity $r33, $r35;
        java.lang.RuntimeException $r67;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.VariableBinding r74;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramModel;

        r2 := @parameter1: edu.kit.ipd.sdq.eventsim.rvisualization.model.VariableBindingModel;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r7 = new edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot;

        specialinvoke $r7.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot: void <init>()>();

        r72 = virtualinvoke $r7.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot data(java.lang.String)>(r3);

        $r8 = staticinvoke <edu.kit.ipd.sdq.eventsim.rvisualization.RController: int[] $SWITCH_TABLE$edu$kit$ipd$sdq$eventsim$rvisualization$model$DiagramType()>();

        $r9 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramModel: edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramType getDiagramType()>();

        $i0 = virtualinvoke $r9.<edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramType: int ordinal()>();

        $i1 = $r8[$i0];

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            default: goto label06;
        };

     label01:
        $r62 = <edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic X>;

        virtualinvoke r72.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot map(edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic,java.lang.String)>($r62, "value");

        $r64 = <edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Geom: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Geom HISTOGRAM>;

        $r65 = virtualinvoke $r64.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Geom: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Layer asLayer()>();

        virtualinvoke r72.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot add(edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Layer)>($r65);

        goto label07;

     label02:
        $r55 = <edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic X>;

        $r56 = virtualinvoke r72.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot map(edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic,java.lang.String)>($r55, "when");

        $r57 = <edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic Y>;

        virtualinvoke $r56.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot map(edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic,java.lang.String)>($r57, "value");

        $r59 = <edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Geom: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Geom POINT>;

        $r60 = virtualinvoke $r59.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Geom: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Layer asLayer()>();

        virtualinvoke r72.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot add(edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Layer)>($r60);

        goto label07;

     label03:
        $r50 = <edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic X>;

        virtualinvoke r72.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot map(edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic,java.lang.String)>($r50, "value");

        $r52 = <edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Geom: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Geom ECDF>;

        $r53 = virtualinvoke $r52.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Geom: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Layer asLayer()>();

        virtualinvoke r72.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot add(edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Layer)>($r53);

        goto label07;

     label04:
        $r38 = new edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot;

        specialinvoke $r38.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot: void <init>()>();

        $r39 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: java.lang.String addDurationColumn(java.lang.String)>(r3);

        r72 = virtualinvoke $r38.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot data(java.lang.String)>($r39);

        $r40 = <edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic X>;

        $r41 = virtualinvoke r72.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot map(edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic,java.lang.String)>($r40, "when");

        $r42 = <edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic Y>;

        virtualinvoke $r41.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot map(edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic,java.lang.String)>($r42, "value");

        $r44 = <edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Geom: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Geom BAR>;

        $r45 = virtualinvoke $r44.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Geom: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Layer asLayer()>();

        $r46 = interfaceinvoke $r45.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Layer: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Layer param(java.lang.String,java.lang.String)>("stat", "identity");

        $r47 = <edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic WIDTH>;

        $r48 = interfaceinvoke $r46.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Layer: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Layer map(edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic,java.lang.String)>($r47, "duration");

        virtualinvoke r72.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot add(edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Layer)>($r48);

        goto label07;

     label05:
        $r10 = <edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic X>;

        $r11 = virtualinvoke r72.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot map(edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic,java.lang.String)>($r10, "when");

        $r12 = <edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic Y>;

        virtualinvoke $r11.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot map(edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic,java.lang.String)>($r12, "value");

        $r14 = <edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Geom: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Geom LINE>;

        $r15 = virtualinvoke $r14.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Geom: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Layer asLayer()>();

        virtualinvoke r72.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot add(edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Layer)>($r15);

        goto label07;

     label06:
        $r67 = new java.lang.RuntimeException;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unsupported diagram type: ");

        $r69 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramModel: edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramType getDiagramType()>();

        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r69);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r67.<java.lang.RuntimeException: void <init>(java.lang.String)>($r71);

        throw $r67;

     label07:
        $r73 = virtualinvoke r2.<edu.kit.ipd.sdq.eventsim.rvisualization.model.VariableBindingModel: java.util.List getVariableBindings()>();

        if $r73 == null goto label10;

        $r31 = virtualinvoke r2.<edu.kit.ipd.sdq.eventsim.rvisualization.model.VariableBindingModel: java.util.List getVariableBindings()>();

        r5 = interfaceinvoke $r31.<java.util.List: java.util.Iterator iterator()>();

        goto label09;

     label08:
        $r32 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r74 = (edu.kit.ipd.sdq.eventsim.rvisualization.model.VariableBinding) $r32;

        $r33 = virtualinvoke r74.<edu.kit.ipd.sdq.eventsim.rvisualization.model.VariableBinding: edu.kit.ipd.sdq.eventsim.rvisualization.model.TranslatableEntity getBindingType()>();

        $r34 = virtualinvoke $r33.<edu.kit.ipd.sdq.eventsim.rvisualization.model.TranslatableEntity: java.lang.String getName()>();

        r6 = staticinvoke <edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic valueOf(java.lang.String)>($r34);

        $r35 = virtualinvoke r74.<edu.kit.ipd.sdq.eventsim.rvisualization.model.VariableBinding: edu.kit.ipd.sdq.eventsim.rvisualization.model.TranslatableEntity getVariable()>();

        $r36 = virtualinvoke $r35.<edu.kit.ipd.sdq.eventsim.rvisualization.model.TranslatableEntity: java.lang.String getName()>();

        virtualinvoke r72.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot map(edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Aesthetic,java.lang.String)>(r6, $r36);

     label09:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label08;

     label10:
        $r17 = new edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Theme;

        specialinvoke $r17.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Theme: void <init>(java.lang.String)>("theme_bw");

        virtualinvoke r72.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot: edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot add(edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Layer)>($r17);

        $r19 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramModel: java.lang.String getTitle()>();

        $r20 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramModel: java.lang.String getSubTitle()>();

        $r21 = virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramModel: java.lang.String getSubSubTitle()>();

        r75 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: java.lang.String createTitle(java.lang.String,java.lang.String,java.lang.String)>($r19, $r20, $r21);

        $r22 = new java.lang.StringBuilder;

        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r4);

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>($r23);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r25 = virtualinvoke r72.<edu.kit.ipd.sdq.eventsim.rvisualization.ggplot.Ggplot: java.lang.String toPlot()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r75);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r30;
    }

    private java.lang.String addDurationColumn(java.lang.String)
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        java.lang.String r1, $r3, $r5;
        java.lang.StringBuilder $r2, $r4;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[, duration := shift(.SD$when, 1, type=\'lead\') - when]");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private org.rosuda.REngine.REXP evalRCommand(java.lang.String) throws edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationException
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        java.lang.String r1, $r8, $r15;
        java.lang.Long r2, r4;
        org.rosuda.REngine.REXP r3;
        boolean $z0;
        long $l0, $l1, $l2, $l3, $l4;
        java.lang.StringBuilder $r5, $r7, $r11, $r13, $r14;
        org.apache.log4j.Logger $r6, $r12;
        edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection $r9;
        org.rosuda.REngine.Rserve.RConnection $r10;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("[R cmd] ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<org.apache.log4j.Logger: void debug(java.lang.Object)>($r8);

        $r9 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection lookupConnection()>();

        $r10 = virtualinvoke $r9.<edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection: org.rosuda.REngine.Rserve.RConnection getConnection()>();

        r3 = staticinvoke <edu.kit.ipd.sdq.eventsim.measurement.r.jobs.EvaluationHelper: org.rosuda.REngine.REXP evaluate(org.rosuda.REngine.Rserve.RConnection,java.lang.String)>($r10, r1);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r12 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: org.apache.log4j.Logger LOG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("R result in ");

        $l2 = virtualinvoke r4.<java.lang.Long: long longValue()>();

        $l3 = virtualinvoke r2.<java.lang.Long: long longValue()>();

        $l4 = $l2 - $l3;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms.");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<org.apache.log4j.Logger: void debug(java.lang.Object)>($r15);

        return r3;
    }

    private java.lang.String createTitle(java.lang.String, java.lang.String, java.lang.String)
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        java.lang.String r1, r2, r3, $r12;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("ggtitle(expression(atop(\'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("atop(\'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', atop(\'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')))))");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    private edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection lookupConnection()
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        edu.kit.ipd.sdq.eventsim.measurement.r.connection.ConnectionRegistry $r1;
        edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection $r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        $r1 = staticinvoke <edu.kit.ipd.sdq.eventsim.measurement.r.connection.ConnectionRegistry: edu.kit.ipd.sdq.eventsim.measurement.r.connection.ConnectionRegistry instance()>();

        $r2 = virtualinvoke $r1.<edu.kit.ipd.sdq.eventsim.measurement.r.connection.ConnectionRegistry: edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection getConnection()>();

        return $r2;
    }

    public boolean isConnected()
    {
        edu.kit.ipd.sdq.eventsim.rvisualization.RController r0;
        edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection $r1, $r2;
        boolean $z0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.rvisualization.RController;

        $r1 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection lookupConnection()>();

        if $r1 == null goto label1;

        $r2 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.rvisualization.RController: edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection lookupConnection()>();

        $z0 = virtualinvoke $r2.<edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection: boolean isConnected()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    static int[] $SWITCH_TABLE$edu$kit$ipd$sdq$eventsim$rvisualization$model$DiagramType()
    {
        int[] r0, $r1;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramType[] $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramType $r3, $r4, $r5, $r6, $r7;
        java.lang.NoSuchFieldError $r8, $r9, $r10, $r11, $r13;

        $r1 = <edu.kit.ipd.sdq.eventsim.rvisualization.RController: int[] $SWITCH_TABLE$edu$kit$ipd$sdq$eventsim$rvisualization$model$DiagramType>;

        if $r1 == null goto label01;

        return $r1;

     label01:
        $r2 = staticinvoke <edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramType: edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramType[] values()>();

        $i0 = lengthof $r2;

        r0 = newarray (int)[$i0];

     label02:
        $r3 = <edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramType: edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramType BAR>;

        $i1 = virtualinvoke $r3.<edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramType: int ordinal()>();

        r0[$i1] = 4;

     label03:
        goto label05;

     label04:
        $r10 := @caughtexception;

     label05:
        $r4 = <edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramType: edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramType CDF>;

        $i2 = virtualinvoke $r4.<edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramType: int ordinal()>();

        r0[$i2] = 3;

     label06:
        goto label08;

     label07:
        $r13 := @caughtexception;

     label08:
        $r5 = <edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramType: edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramType HISTOGRAM>;

        $i3 = virtualinvoke $r5.<edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramType: int ordinal()>();

        r0[$i3] = 1;

     label09:
        goto label11;

     label10:
        $r9 := @caughtexception;

     label11:
        $r6 = <edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramType: edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramType LINE>;

        $i4 = virtualinvoke $r6.<edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramType: int ordinal()>();

        r0[$i4] = 5;

     label12:
        goto label14;

     label13:
        $r8 := @caughtexception;

     label14:
        $r7 = <edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramType: edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramType POINT_GRAPH>;

        $i5 = virtualinvoke $r7.<edu.kit.ipd.sdq.eventsim.rvisualization.model.DiagramType: int ordinal()>();

        r0[$i5] = 2;

     label15:
        goto label17;

     label16:
        $r11 := @caughtexception;

     label17:
        <edu.kit.ipd.sdq.eventsim.rvisualization.RController: int[] $SWITCH_TABLE$edu$kit$ipd$sdq$eventsim$rvisualization$model$DiagramType> = r0;

        return r0;

        catch java.lang.NoSuchFieldError from label02 to label03 with label04;
        catch java.lang.NoSuchFieldError from label05 to label06 with label07;
        catch java.lang.NoSuchFieldError from label08 to label09 with label10;
        catch java.lang.NoSuchFieldError from label11 to label12 with label13;
        catch java.lang.NoSuchFieldError from label14 to label15 with label16;
    }
}
