public class edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider extends org.eclipse.ui.AbstractSourceProvider implements edu.kit.ipd.sdq.eventsim.measurement.r.connection.ConnectionListener, edu.kit.ipd.sdq.eventsim.measurement.r.connection.ConnectionStatusListener
{
    private static final java.lang.String ID;
    private edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection connection;

    public void <init>()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider r0;
        edu.kit.ipd.sdq.eventsim.measurement.r.connection.ConnectionRegistry $r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider;

        specialinvoke r0.<org.eclipse.ui.AbstractSourceProvider: void <init>()>();

        $r1 = staticinvoke <edu.kit.ipd.sdq.eventsim.measurement.r.connection.ConnectionRegistry: edu.kit.ipd.sdq.eventsim.measurement.r.connection.ConnectionRegistry instance()>();

        virtualinvoke $r1.<edu.kit.ipd.sdq.eventsim.measurement.r.connection.ConnectionRegistry: void addListener(edu.kit.ipd.sdq.eventsim.measurement.r.connection.ConnectionListener)>(r0);

        return;
    }

    public void dispose()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider r0;
        edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection $r1, $r3;
        edu.kit.ipd.sdq.eventsim.measurement.r.connection.ConnectionRegistry $r2;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider;

        $r1 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider: edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection connection>;

        if $r1 == null goto label1;

        $r3 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider: edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection connection>;

        virtualinvoke $r3.<edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection: void removeListener(edu.kit.ipd.sdq.eventsim.measurement.r.connection.ConnectionStatusListener)>(r0);

     label1:
        $r2 = staticinvoke <edu.kit.ipd.sdq.eventsim.measurement.r.connection.ConnectionRegistry: edu.kit.ipd.sdq.eventsim.measurement.r.connection.ConnectionRegistry instance()>();

        virtualinvoke $r2.<edu.kit.ipd.sdq.eventsim.measurement.r.connection.ConnectionRegistry: void removeListener(edu.kit.ipd.sdq.eventsim.measurement.r.connection.ConnectionListener)>(r0);

        return;
    }

    public java.util.Map getCurrentState()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider r0;
        java.util.HashMap $r2;
        boolean $z0;
        java.lang.Boolean $r3;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(1);

        $z0 = specialinvoke r0.<edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider: boolean isConnected()>();

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("edu.kit.ipd.sdq.eventsim.measurement.r.connection.status", $r3);

        return $r2;
    }

    private boolean isConnected()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider r0;
        edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection $r1, $r2;
        boolean $z0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider;

        $r1 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider: edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection connection>;

        if $r1 == null goto label1;

        $r2 = r0.<edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider: edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection connection>;

        $z0 = virtualinvoke $r2.<edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection: boolean isConnected()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String[] getProvidedSourceNames()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider r0;
        java.lang.String[] $r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider;

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "edu.kit.ipd.sdq.eventsim.measurement.r.connection.status";

        return $r1;
    }

    public void connectionAdded(edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection)
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider r0;
        edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection;

        virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection: void addListener(edu.kit.ipd.sdq.eventsim.measurement.r.connection.ConnectionStatusListener)>(r0);

        r0.<edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider: edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection connection> = r1;

        return;
    }

    public void connectionRemoved(edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection)
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider r0;
        edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider;

        r1 := @parameter0: edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection;

        virtualinvoke r1.<edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection: void removeListener(edu.kit.ipd.sdq.eventsim.measurement.r.connection.ConnectionStatusListener)>(r0);

        r0.<edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider: edu.kit.ipd.sdq.eventsim.measurement.r.connection.RserveConnection connection> = null;

        return;
    }

    public void failed()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider r0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider;

        return;
    }

    public void connecting(int)
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider r0;
        int i0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider;

        i0 := @parameter0: int;

        return;
    }

    public void connected()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider r0;
        java.lang.Boolean $r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider: void fireSourceChanged(int,java.lang.String,java.lang.Object)>(0, "edu.kit.ipd.sdq.eventsim.measurement.r.connection.status", $r1);

        return;
    }

    public void cancelled()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider r0;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider;

        return;
    }

    public void disconnected()
    {
        edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider r0;
        java.lang.Boolean $r1;

        r0 := @this: edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke r0.<edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider: void fireSourceChanged(int,java.lang.String,java.lang.Object)>(0, "edu.kit.ipd.sdq.eventsim.measurement.r.connection.status", $r1);

        return;
    }

    public static void <clinit>()
    {
        <edu.kit.ipd.sdq.eventsim.measurement.r.connection.ui.ConnectionStatusProvider: java.lang.String ID> = "edu.kit.ipd.sdq.eventsim.measurement.r.connection.status";

        return;
    }
}
